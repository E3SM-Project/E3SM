set(MPICC "cc")
set(MPICXX "CC")
set(MPIFC "ftn")
set(SCC "nvcc")
set(SCXX "nvc++")
set(SFC "nvfortran")
string(APPEND CPPDEFS " -DFORTRANUNDERSCORE -DNO_R16 -DCPRNVIDIA")
string(APPEND CPPDEFS_DEBUG " -DYAKL_DEBUG")
if (compile_threaded)
  string(APPEND CMAKE_C_FLAGS " -mp")
endif()
string(APPEND CMAKE_C_FLAGS_RELEASE " -O2")
string(APPEND CMAKE_C_FLAGS_DEBUG " -g")
string(APPEND CMAKE_Fortran_FLAGS " -i4 -Mstack_arrays -Mextend -byteswapio -Mflushz -Kieee -DHAVE_IEEE_ARITHMETIC -Mallocatable=03 -DNO_R16 -traceback")
if (compile_threaded)
  string(APPEND CMAKE_Fortran_FLAGS " -mp")
endif()
string(APPEND CMAKE_Fortran_FLAGS_DEBUG " -O0 -g -Ktrap=fp -Mbounds -Kieee")
string(APPEND CMAKE_Fortran_FLAGS_RELEASE " -O2 -DHAVE_IEEE_ARITHMETIC")
if (compile_threaded)
  string(APPEND CMAKE_CXX_FLAGS " -mp")
endif()
string(APPEND CMAKE_CXX_FLAGS_DEBUG " -g -O0 -Mnofma -Wall -traceback")
string(APPEND CMAKE_CXX_FLAGS_RELEASE " -O2")
string(APPEND CMAKE_Fortran_FORMAT_FIXED_FLAG " -Mfixed")
string(APPEND CMAKE_Fortran_FORMAT_FREE_FLAG " -Mfree")
string(APPEND CMAKE_EXE_LINKER_FLAGS " -Wl,--allow-multiple-definition -lstdc++")
if (compile_threaded)
  string(APPEND CMAKE_EXE_LINKER_FLAGS " -mp")
endif()
set(E3SM_LINK_WITH_FORTRAN "TRUE")

