<?xml version="1.0"?>

<namelist_definition>

<!-- Each namelist variable is defined in an <entry> element.  The
     content of the element is the documentation of how the variable is
     used.  Other aspects of the variable's definition are expressed as
     attributes of the <entry> element.  Note that it is an XML requirement
     that the attribute values are enclosed in quotes.  The attributes are:

     id
          The variable's name.  *** N.B. *** The name must be lower case.
          The module convert all namelist variable names to lower case
          since Fortran is case insensitive.

     type
          An abbreviation of the fortran declaration for the variable.
      Valid declarations are:

          char*n
          integer
          logical
          real

      Any of these types may be followed by a comma separated list of
      integers enclosed in parenthesis to indicate an array.

      The current namelist validation code only distinquishes between
      string and non-string types.

     input_pathname
          Only include this attribute to indicate that the variable
          contains the pathname of an input dataset that resides in the
          CESM inputdata directory tree.

      The recognized values are "abs" to indicate that an absolute
          pathname is required, or "rel:var_name" to indicate that the
          pathname is relative and that the namelist variable "var_name"
          contains the absolute root directory.

     category
          A category assigned for organizing the documentation.

     group
          The namelist group that the variable is declared in.

     valid_values
          This is an optional attribute that is mainly useful for variables
          that have only a small number of allowed values.
                                                                        -->


<!-- velocity_solver -->

<entry id="config_velocity_solver" type="char*1024"
	category="velocity_solver" group="velocity_solver">
Selection of the method for solving ice velocity. 'L1L2', 'FO', and 'Stokes' require compiling with external dycores. 'none' skips the calculation of velocity so the velocity field will be 0 or set to a field read from an input file.  'simple' gives a simple prescribed velocity field computed at initialization.

Valid values: 'sia', 'L1L2', 'FO', 'Stokes', 'simple', 'none'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_sia_tangent_slope_calculation" type="char*1024"
	category="velocity_solver" group="velocity_solver">
Selection of the method for calculating the tangent component of surface slope at edges needed by the SIA velocity solver. 'from_vertex_barycentric' interpolates upperSurface values from cell centers to vertices using the barycentric interpolation routine in operators (mpas_cells_to_points_using_baryweights) and then calculates the slope between vertices.  It works for obtuse triangles, but will not work correctly across the edges of periodic meshes. 'from_vertex_barycentric_kiteareas' interpolates upperSurface values from cell centers to vertices using barycentric interpolation based on kiterea values and then calculates the slope between vertices.  It will work across the edges of periodic meshes, but will not work correctly for obtuse triangles. 'from_normal_slope' uses the vector operator mpas_tangential_vector_1d to calculate the tangent slopes from the normal slopes on the edges of the adjacent cells.  It will work for any mesh configuration, but is the least accurate method.

Valid values: 'from_vertex_barycentric', 'from_vertex_barycentric_kiteareas', 'from_normal_slope'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_flowParamA_calculation" type="char*1024"
	category="velocity_solver" group="velocity_solver">
Selection of the method for calculating the flow law parameter A.  If 'constant' is selected, the value is set to config_default_flowParamA.  The other options are calculated from the temperature field.  This calculation only applies if config_velocity_solver is set to 'sia'.  For the 'FO' velocity solver, this is set in the albany_input.yaml file.

Valid values: 'constant', 'PB1982', 'CP2010'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_do_velocity_reconstruction_for_external_dycore" type="logical"
	category="velocity_solver" group="velocity_solver">
By default, external, higher-order dycores return the uReconstructX and uReconstructY fields (which are the native locations of their FEM solution).  If this option is set to .true., uReconstructX and uReconstructY will be calculated by MPAS using framework's vector reconstruction routines based on the values of normalVelocity supplied by the external dycore.  This provides a way to test the calculation of normalVelocity in the interface.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_simple_velocity_type" type="char*1024"
	category="velocity_solver" group="velocity_solver">
Selection of the type of simple velocity field computed at initialization when config_velocity_solver = 'simple'.  See mode_forward/mpas_li_velocity_simple.F for details of what the options do.

Valid values: 'uniform', 'radial'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_use_glp" type="logical"
	category="velocity_solver" group="velocity_solver">
If true, then apply Albany's grounding line parameterization

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_beta_thawed_only" type="logical"
	category="velocity_solver" group="velocity_solver">
If true, then beta is zeroed wherever the basal temperature is below the pressure-melting temperature

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_unrealistic_velocity" type="real"
	category="velocity_solver" group="velocity_solver">
Ice is removed at any locations with surface speed faster than this value and sent to the calving flux. The presence of icebergs can lead to unrealistically large velocities.  A simple method to remove icebergs is to remove ice where the velocity is faster than an arbitrarily large value.

Valid values: Any positive, real number.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_nonconvergence_error" type="logical"
	category="velocity_solver" group="velocity_solver">
If true, nonconvergence of the velocity solver results in a fatal error.  If false, it is a warning.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_effective_pressure_max" type="real"
	category="velocity_solver" group="velocity_solver">
An optional maximum limit on effective pressure passed to the velocity solver.

Valid values: Any positive, real number.
Default: Defined in namelist_defaults.xml
</entry>


<!-- advection -->

<entry id="config_thickness_advection" type="char*1024"
	category="advection" group="advection">
Selection of the method for advecting thickness ('fo' = first-order upwinding).

Valid values: 'fo', 'fct', 'none'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_tracer_advection" type="char*1024"
	category="advection" group="advection">
Selection of the method for advecting tracers.

Valid values: 'fo', 'fct', 'none'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_horiz_tracer_adv_order" type="integer"
	category="advection" group="advection">
Order of polynomial used for tracer reconstruction at cell edges

Valid values: 2, 3 and 4
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_advection_coef_3rd_order" type="real"
	category="advection" group="advection">
Reconstruction of 3rd-order reconstruction to blend with 4th-order reconstuction. Equivalent to beta in Skamarock and Gassmann (2011) eq. 7. 0 is fully 4th order, 1 is fully 3rd order.

Valid values: any real between 0 and 1
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_restore_thickness_after_advection" type="logical"
	category="advection" group="advection">
If true, reset thickness to values at previous timestep after advection occurs. This is used for spinning up tracer fields such as damage.  When this is true, geometry changes from surface and basal mass balance (grounded or floating) and facemelting are not retained, but changes from calving are.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_zero_sfcMassBalApplied_over_bare_land" type="logical"
	category="advection" group="advection">
Mask to zero out sfcMassBalApplied in regions where there is no ice at the timestep.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>


<!-- solidearth -->

<entry id="config_uplift_method" type="char*1024"
	category="solidearth" group="solidearth">
Selection of the method for bedrock uplift calculation.

Valid values: 'none', 'data', 'sealevelmodel'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_slm_coupling_interval" type="char*1024"
	category="solidearth" group="solidearth">
Time interval at which the sea-level model is called by MALI. The interval has to be an even multiple of the option 'config_adaptive_timestep_force_interval

Valid values: Any time interval of the format 'YYYY-MM-DD_HH:MM:SS'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_MALI_to_SLM_weights_file" type="char*1024"
	category="solidearth" group="solidearth">
File containing the interpolation weights for regridding from MPAS mesh to the Gaussian grid used by the Sea Level Model.

Valid values: Any file name string
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SLM_to_MALI_weights_file" type="char*1024"
	category="solidearth" group="solidearth">
File containing the interpolation weights for regridding from the Gaussian grid used by the Sea Level Model to the MPAS mesh.

Valid values: Any file name string
Default: Defined in namelist_defaults.xml
</entry>


<!-- calving -->

<entry id="config_calving" type="char*1024"
	category="calving" group="calving">
Selection of the method for calving ice (as defined below). 'von_Mises_stress' and 'eigencalving' options can be used in combination with damage threshold calving (see descrption of config_damage_calving_method for details).

Valid values: 'none', 'floating', 'topographic_threshold', 'thickness_threshold', 'eigencalving', 'specified_calving_velocity', 'von_Mises_stress', 'damagecalving', 'ismip6_retreat'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_apply_calving_mask" type="logical"
	category="calving" group="calving">
Whether the field 'calvingMask' gets used to force calving.  This is independent of choice of 'config_calving'; the application of 'calvingMask' can be applied in conjunction with a physical calving law or with no calving law enabled.  The calving mask gets applied after a physical calving law, if one is selected.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_use_Albany_flowA_eqn_for_vM" type="logical"
	category="calving" group="calving">
Not yet supported. Determine whether to use MPAS or Albany calculation for flowParamA used in von Mises stress calving

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_topography" type="real"
	category="calving" group="calving">
Defines the topographic height below which ice calves (for topographic_threshold option).

Valid values: Any non-positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_thickness" type="real"
	category="calving" group="calving">
Defines the ice thickness below which ice calves (for thickness_threshold option).

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_eigencalving_parameter_source" type="char*1024"
	category="calving" group="calving">
Source of the eigencalving parameter value

Valid values: 'data' ('eigencalvingParameter' field read from input file), 'scalar' (specified by config_calving_eigencalving_parameter_scalar_value)
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_eigencalving_parameter_scalar_value" type="real"
	category="calving" group="calving">
Value of eigencalving parameter if taken as a scalar by option config_calving_eigencalving_parameter_source. (Default value is 1.0e9 m a converted to units used here.)

Valid values: any positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_specified_source" type="char*1024"
	category="calving" group="calving">
method of specified calving velocity

Valid values: 'const' (constant calving velocity), 'data' (calving velocity given by data input)
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_velocity_const" type="real"
	category="calving" group="calving">
constant calving velocity specified in the namelist

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_data_calving" type="logical"
	category="calving" group="calving">
Select whether or not to configure calving in a 'data' model mode (calc. calving flux but do not update ice geometry)

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_timescale" type="real"
	category="calving" group="calving">
Defines the timescale for calving. The fraction of eligible ice that calves is min(dt/calving_timescale, 1.0). A value of 0 means that all eligible ice calves.

Valid values: Any non-negative real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_restore_calving_front" type="logical"
	category="calving" group="calving">
If true, then restore the calving front to its initial position.  If ice grows beyond the initial extent, it is removed.  If ice shrinks to an extent behind the initial extent, behavior is determined by config_restore_calving_front_prevent_retreat.  If that option is true, then those locations are filled with thin ice (defined as 1/10th the value of config_dynamic_thickness).  Note that this violates conservation of mass and energy.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_restore_calving_front_prevent_retreat" type="logical"
	category="calving" group="calving">
If true, then the config_restore_calving_front option will fill locations where ice shelves have retreated with a thin layer of ice.  This option should be used in E3SM when the ice shelf extent seen by the E3SM coupler cannot change.  If false, the config_restore_calving_front option will do nothing when ice shelves retreat.  For either value of this option, the config_restore_calving_front option will prevent ice-shelf advance.  True is likely the desired value for standalone runs where no advance is desired.  Default value is true for backwards compatibility.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_remove_icebergs" type="logical"
	category="calving" group="calving">
If true, then a flood fill will be applied to remove icebergs.  The ice removed is added to the calvingThickness field.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_remove_small_islands" type="logical"
	category="calving" group="calving">
If true, then ice from small grounded islands is removed.  Specifically, this finds one- and two-cell masses of ice that are surrounded by open ocean and eliminates them by sending them to the calving flux.  Grounded such ice masses would be islands, floating would be icebergs.  The ice removed is added to the calvingThickness field.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_speed_limit" type="real"
	category="calving" group="calving">
Limit calvingVelocity to this value. Currently only supported for von Mises calving.

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_grounded_von_Mises_threshold_stress" type="real"
	category="calving" group="calving">
Threshold von Mises stress value required for calving velocity to exceed ice velocity on grounded ice. sigma_max in Morlighem et al. (2016) eq. 4. 1 MPa default value is from Morlighem et al.'s calibration for Store Glacier.

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_floating_von_Mises_threshold_stress" type="real"
	category="calving" group="calving">
Threshold von Mises stress value required for calving velocity to exceed ice velocity on floating ice. Generally seems to need to be low (1e5 to 2e5 for Humboldt Glacier) to allow floating ice to retreat. If set to 0.0, floating ice will be removed from dynamic cells each timestep; calvingThickness will be correct, but calvingVelocity will not be correct for those cells. sigma_max in Morlighem et al. (2016) eq. 4. 1 MPa default value is from Morlighem et al.'s calibration for Store Glacier.

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_grounded_von_Mises_threshold_stress_source" type="char*1024"
	category="calving" group="calving">
Source of von MIses threshold stress value for calving from grounded ice.

Valid values: 'data' (read from input file), 'scalar' (specified by config_grounded_von_Mises_threshold_stress)
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_floating_von_Mises_threshold_stress_source" type="char*1024"
	category="calving" group="calving">
Source of von MIses threshold stress value for calving from floating ice.

Valid values: 'data' (read from input file), 'scalar' (specified by config_floating_von_Mises_threshold_stress)
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_finalize_damage_after_advection" type="logical"
	category="calving" group="calving">
If true, then the 'li_finalize_damage_after_advection' subroutine is applied, doing the following: 1) set the value of damage at the grounding line based on the choice of 'config_damage_gl_setting', 2) reset the value of damage to its initial value (to avoid healing), based on choice of 'config_preserve_damage', 3) couple the updated damage value to the rheology if 'config_damage_rheology_coupling' is true.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_preserve_damage" type="logical"
	category="calving" group="calving">
If true, then preserve the value of damage before advection (i.e., do not allow healing of damage to occur).

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calculate_damage" type="logical"
	category="calving" group="calving">
If .true., then turn on the 'calculate_damage' subroutine. Note that setting this to .true. will evolve damage even if damage-based calving is not being used, which is why it is .false. by default (and thus it should explicitly be set to .true. to use damage based calving).

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_damage_preserve_threshold" type="real"
	category="calving" group="calving">
It is a value above which the old damage number would be kept from the impact of advection (the damage would not heal). For example, if the damage at some location is 0.83, and we set config_damage_preserve_threshold to 0.8, then the damage number there will not fall below 0.83. Otherwise, if the damage is 0.7, then it could be decreased to a smaller number if non-damaged ice is transported from upstream. If we set config_damage_preserve_threshold to 0 (default), then it will just not play a role in pratical.

Valid values: real value between 0 and 1
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_damage_calving_threshold" type="real"
	category="calving" group="calving">
When config_damage_calving_method==threshold, this is the value of damage above which the cell would be calved away.  When config_damage_calving_method==calving_rate, this is the value above which calving becomes proportional to damage.

Valid values: real value between 0 and 1
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_damage_stiffness_min" type="real"
	category="calving" group="calving">
The minimum value the 'stiffnessFactor' can take due to evolving damage when 'stiffnessFactor' is calculated from damage (i.e., when 'config_damage_rheology_coupling'=.true.). This is used to prevent unrealistic and/or numerically challenging stiffness values. For example, if damage = 0.9, then 'stiffnessFactor' becomes 1 - damage = 0.1 (a small value that could be challenging for the solver). But if we set 'config_damage_stiffness_min' = 0.5, then 'stiffnessFactor' can only fall as low as 0.5.

Valid values: real value between 0 and 1
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_damage_rheology_coupling" type="logical"
	category="calving" group="calving">
If true, then the value of 'stiffnessFactor' is coupled to damage evolution, i.e. 'stiffnessFactor' = 1-damage.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_damage_gl_setting" type="char*1024"
	category="calving" group="calving">
Selection of the method for initializing damage in the first floating grid cells past the grounding line: 'nye' uses Nye's zero stress criteria (Nye, 1957, Proc. R. Soc. A, 239) for defining the damage value, 'extrapolate' extrapolates values from the floating ice downstream back to the first floating cells.

Valid values: 'nye', 'extrapolate'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_damage_calving_method" type="char*1024"
	category="calving" group="calving">
Selection of the method for damage calving. For 'threshold', ice with damage above the value specified by 'config_damage_calving_threshold' will be removed if it is connected to the marine margin. The 'threshold' option can be combined with config_calving = 'von_Mises_stress' and config_calving = 'eigencalving'. For 'calving_rate', a rate of calving is specified as proportional to the damage value above some threshold, with the constant of proportionality specified by 'config_damagecalvingParameter' and the threshold defined by config_damage_calving_threshold. The 'calving_rate' option cannot currently be combined with other calving routines, and requires config_calving = 'damagecalving'.

Valid values: 'calving_rate', 'threshold', 'none'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_damagecalvingParameter" type="real"
	category="calving" group="calving">
A scalar parameter that specifies a calving rate as proportional to the value of damage above some threshold value when using the 'calving_rate' method for the 'config_damage_calving_method' option (with the threshold damage value specified by 'config_damage_calving_threshold').

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_ismip6_retreat_k" type="real"
	category="calving" group="calving">
Coefficient for ISMIP6 retreat parameterization from Slater et al. (2019)

Valid values: any negative real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_error_threshold" type="real"
	category="calving" group="calving">
Fraction of total volume intended to be ablated remaining before an error is triggered.

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_distribute_unablatedVolumeDynCell" type="logical"
	category="calving" group="calving">
If true, then distribute unablatedVolumeDynCell among dynamic neighbors when converting ablation velocity to ablation thickness. This should only be used as a clean-up measure, while limiting the timestep based on ablation velocity should be used as the primary method of getting accurate ablation thickness from ablation velocity.  If you choose to set config_adaptive_timestep_calvingCFL_fraction much larger than 1.0 (which is not recommended), setting this option to true usually results in more accurate calving behavior. 

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_update_velocity_before_calving" type="logical"
	category="calving" group="calving">
If true, add an additional velocity solve between advection and calving. If false, use velocity field from beginning of time step to calculate calving rate. For certain calving laws, like damage threshold calving, it is not necessary to update the velocity before calving, while for von Mises stress and eigencalving, it is more accurate to have an updated velocity state before solving for calvingThickness.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>


<!-- thermal_solver -->

<entry id="config_thermal_solver" type="char*1024"
	category="thermal_solver" group="thermal_solver">
Selection of the method for the vertical thermal solver (possible values are described further below).

Valid values: 'none', 'temperature', 'enthalpy'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_thermal_calculate_bmb" type="logical"
	category="thermal_solver" group="thermal_solver">
Determines if basal and internal melting calculated by the thermal solver should contribute to basal mass balance or be ignored.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_init" type="char*1024"
	category="thermal_solver" group="thermal_solver">
Selection of the method for initializing the ice temperature (as described further below).

Valid values: 'sfc_air_temperature', 'linear', 'file'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_thermal_thickness" type="real"
	category="thermal_solver" group="thermal_solver">
Defines the minimum ice thickness for conducting thermal calculations. Ice thinner than this value is ignored by the thermal solver.  Default set to 0 to ensure reasonable values everywhere there is ice, which is needed for realistic behavior when using Albany due to the way temperature is handled in extended cells.

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_surface_air_temperature_source" type="char*1024"
	category="thermal_solver" group="thermal_solver">
Selection of the method for setting the surface air temperature. 'constant' uses the value set by config_surface_air_temperature_value.  'file' reads the field from an input or forcing file or ESM coupler. 'lapse' uses the value of config_surface_air_temperature_value at elevation 0 with a lapse rate applied from config_surface_air_temperature_lapse_rate.

Valid values: 'constant', 'file', 'lapse'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_surface_air_temperature_value" type="real"
	category="thermal_solver" group="thermal_solver">
Constant value of the surface air temperature.

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_surface_air_temperature_lapse_rate" type="real"
	category="thermal_solver" group="thermal_solver">
Lapse rate to apply to surface air temperature when config_surface_air_temperature_source='lapse'. Positive values lead to colder temperatures at higher elevations.

Valid values: Any real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_basal_heat_flux_source" type="char*1024"
	category="thermal_solver" group="thermal_solver">
Selection of the method for setting the basal heat flux.

Valid values: 'constant', 'file'  'constant' uses the value set by config_basal_heat_flux_value.  'file' reads the field from an input or forcing file or ESM coupler.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_basal_heat_flux_value" type="real"
	category="thermal_solver" group="thermal_solver">
Constant value of the basal heat flux (positive upward).

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temp_diffusive_factor" type="real"
	category="thermal_solver" group="thermal_solver">
the factor to estimate diffusivity (kt) in temperate ice from that in cold ice (kc), kt = f * kc

Valid values: any positive number within a likely range of [1e-6, 1e-2]
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_max_water_fraction" type="real"
	category="thermal_solver" group="thermal_solver">
the maximum water fraction allowed

Valid values: theoretically the range is (0, 1), but more realistically about 0.01
Default: Defined in namelist_defaults.xml
</entry>


<!-- iceshelf_melt -->

<entry id="config_basal_mass_bal_float" type="char*1024"
	category="iceshelf_melt" group="iceshelf_melt">
Selection of the method for computing the basal mass balance of floating ice.  'none' sets the basalMassBal field to 0 everywhere.  'file' uses without modification whatever value was read in through an input or forcing file or the value set by an ESM coupler.  'constant', 'mismip', 'seroussi' use hardcoded fields defined in the code applicable to Thwaites Glacier. 'temperature_profile' generates a depth-melt relation based on an ocean temperature profile and sill depth. ISMIP6 is the method prescribed by ISMIP6.

Valid values: 'none', 'file', 'constant', 'mismip', 'seroussi', 'temperature_profile', 'ismip6'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_bmlt_float_flux" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
Value of the constant heat flux applied to the base of floating ice (positive upward).

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_bmlt_float_xlimit" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
x value defining region where bmlt_float_flux is applied; melt only where abs(x) is greater than xlimit.

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_basal_mass_bal_seroussi_amplitude" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
amplitude on the depth adjustment applied to the Seroussi subglacial melt parameterization

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_basal_mass_bal_seroussi_period" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
period of the periodic depth adjustment applied to the Seroussi subglacial melt parameterization

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_basal_mass_bal_seroussi_phase" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
phase of the periodic depth adjustment applied to the Seroussi subglacial melt parameterization. Units are cycles, i.e., 0-1

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_profile_melt_scale_factor" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
The scale factor in the 'temperature_profile' melt parameterization that converts a product of two ocean temperatures to a melt rate.  Called kappa in code.

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_profile_sill_elevation" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
The sill elevation used by the 'temperature_profile' melt parameterization.  Positive is above sea level.

Valid values: any real value, but only negative values make sense
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_profile_plume_thickness" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
The plume thickness parameter used by the 'temperature_profile' melt parameterization.

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_profile_draft_slope" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
The parameter defining the slope of the ice sheld draft that is used by the 'temperature_profile' melt parameterization.

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_profile_thermocline_upper_depth" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
The parameter defining depth of the top of the ocean thermocline used by the 'temperature_profile' melt parameterization.

Valid values: any real value, but only negative values makes sense
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_profile_thermocline_upper_temp" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
The parameter defining the ocean temperature at the top of the thermocline used by the 'temperature_profile' melt parameterization.

Valid values: any real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_profile_thermocline_lower_depth" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
The parameter defining depth of the bottom of the ocean thermocline used by the 'temperature_profile' melt parameterization.

Valid values: any real value, but only negative values makes sense
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_profile_thermocline_lower_temp" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
The parameter defining the ocean temperature at the bottom of the thermocline used by the 'temperature_profile' melt parameterization.

Valid values: any real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_profile_variability_amplitude" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
amplitude on the depth adjustment applied to the 'temperature_profile' melt parameterization

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_profile_variability_period" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
period of the periodic depth adjustment applied to the 'temperature_profile' melt parameterization

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_profile_variability_phase" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
phase of the periodic depth adjustment applied to the 'temperature_profile' melt parameterization. Units are cycles, i.e., 0-1

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_profile_GL_depth_fraction" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
The fraction of the deepest grounding line depths over which the grounding line depth is averaged to obtain a reference grounding line depth for the 'temperature_profile' melt parameterization.

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_front_mass_bal_grounded" type="char*1024"
	category="iceshelf_melt" group="iceshelf_melt">
Selection of the method for computing the frontal mass balance of submarine grounded ice.  'none' sets the front mass balance field to 0 everywhere. 'uniform' sets faceMeltSpeed to the value given by config_uniform_face_melt_rate. 'ismip6' uses the parameterization provided by ISMIP6 and requires an ocean thermal forcing field and subglacial hydrology.

Valid values: 'none', 'uniform', 'ismip6'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_use_3d_thermal_forcing_for_face_melt" type="logical"
	category="iceshelf_melt" group="iceshelf_melt">
If true, use ismip6shelfMelt_3dThermalForcing and associated variables to calculate ocean-bottom thermal forcing for use with the config_front_mass_bal_grounded = 'ismip6' melt paramterization.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_beta_ocean_thermal_forcing" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
Exponent of the ocean thermal forcing in ISMIP6 grounded ice front melting parameterization

Valid values: any real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_add_ocean_thermal_forcing" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
Adjust ismip6_2dThermalForcing by a scalar value

Valid values: any real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_alpha_subglacial_discharge" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
Exponent of the subglacial discharge term in ISMIP6 grounded ice front melting parameterization

Valid values: any real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_subglacial_discharge_coefficient" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
Coefficient of the subglacial discharge term in ISMIP6 grounded ice front melting parameterization

Valid values: any real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_subglacial_discharge_intercept" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
Added value B in ISMIP6 grounded ice front melting parameterization

Valid values: any real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_uniform_face_melt_rate" type="real"
	category="iceshelf_melt" group="iceshelf_melt">
MISSING DESCRIPTION

Valid values: any non-negative value
Default: Defined in namelist_defaults.xml
</entry>


<!-- physical_parameters -->

<entry id="config_ice_density" type="real"
	category="physical_parameters" group="physical_parameters">
ice density to use (assumed constant and uniform)

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_ocean_density" type="real"
	category="physical_parameters" group="physical_parameters">
ocean density to use for calculating floatation (assumed constant and uniform)

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_sea_level" type="real"
	category="physical_parameters" group="physical_parameters">
sea level to use for calculating floatation (assumed constant and uniform)

Valid values: Any real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_default_flowParamA" type="real"
	category="physical_parameters" group="physical_parameters">
Defines the default value of the flow law parameter A to be used if it is not being calculated from ice temperature.  This value will be used by either the sia or FO velocity solver if they are respectively configured to use a scalar A value.  Defaults to the SI representation of 1.0e-16 yr$^{-1}$ Pa$^{-3}$.

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_flowLawExponent" type="real"
	category="physical_parameters" group="physical_parameters">
Defines the value of the Glen flow law exponent, n. This value will be used by either the sia or FO velocity solver.  A value other than 3.0 is untested.

Valid values: Any real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_dynamic_thickness" type="real"
	category="physical_parameters" group="physical_parameters">
Defines the ice thickness below which dynamics are not calculated (and hence ice velocity is set to 0).

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>


<!-- time_integration -->

<entry id="config_dt" type="char*1024"
	category="time_integration" group="time_integration">
Length of model time step defined as a time interval.

Valid values: Any time interval of the format 'YYYY-MM-DD_HH:MM:SS', but limited by CFL condition.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_time_integration" type="char*1024"
	category="time_integration" group="time_integration">
Time integration method.

Valid values: 'forward_euler' or 'runge_kutta'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_rk_order" type="integer"
	category="time_integration" group="time_integration">
Order of Runge-Kutta time integration to use. A value of 1 would be equivalent to forward euler, but will cause an error to avoid unnecessary redundancy. Values of 2 and 3 indicate strong-stability preserving RK2 and RK3. There is currently no support for classical RK2 or RK4 methods.

Valid values: 2 or 3
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_rk3_stages" type="integer"
	category="time_integration" group="time_integration">
Number of stages for strong stability preserving RK3 time integration. If set to 3, this involves 3 velocity solves and a maximum CFL fraction of 1. If set to 4, this involves 4 velocity solves, but the maximum CFL fraction is 2.

Valid values: 3 or 4
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_adaptive_timestep" type="logical"
	category="time_integration" group="time_integration">
Determines if the time step should be adjusted based on the CFL condition or should be steady in time. If true, the config_dt_* options are ignored.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_min_adaptive_timestep" type="real"
	category="time_integration" group="time_integration">
The minimum allowable time step in seconds.  If the CFL condition dictates the time step should be shorter than this, then the model aborts.

Valid values: Any non-negative real value.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_max_adaptive_timestep" type="real"
	category="time_integration" group="time_integration">
The maximum allowable time step in seconds. If the allowable time step determined by the adaptive CFL calculation is longer than this, then the model will specify config_max_adaptive_timestep as the time step instead. Defaults to 100 years (in seconds).

Valid values: Any non-negative real value.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_adaptive_timestep_CFL_fraction" type="real"
	category="time_integration" group="time_integration">
A multiplier on the minimum allowable time step calculated from the advective CFL condition. (Setting to 1.0 may be unstable, so smaller values are recommended.)  Note that 'advective' is not in the name.  This is for backwards compatibility

Valid values: Any positive real value less than 1.0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_adaptive_timestep_calvingCFL_fraction" type="real"
	category="time_integration" group="time_integration">
A multiplier on the minimum allowable time step calculated from the calving CFL condition. This should be conservative given the calving CFL calculation is lagged

Valid values: Any positive real value.  Note that values greater than 1.0 are allowed and may be desired.  This is because the calving CFL is an approximate calculation.  A value between 0.75 and 1.0, possibly as large as 1.25, was found to maintain converged accuracy for many configurations explored, so it is recommended to use values in this range.  However, much larger values (up to 2 or 3) provide acceptable accuracy for some configurations (but it is not clear what conditions allow it).  If values much greater than 1.0 are used, it is recommended to set config_distribute_unablatedVolumeDynCell to true.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_adaptive_timestep_faceMeltingCFL_fraction" type="real"
	category="time_integration" group="time_integration">
A multiplier on the minimum allowable time step calculated from the face-melting CFL condition. This should be conservative given the calving CFL calculation is lagged

Valid values: Any positive real value.  Note that values greater than 1.0 are allowed and may be desired.  This is because the face-melting CFL is an approximate calculation.  A value between 0.75 and 1.0, possibly as large as 1.25, was found to maintain converged accuracy for the analogous calving CFL fraction, so it is recommended to use values in this range. If values much greater than 1.0 are used, it is recommended to set config_distribute_unablatedVolumeDynCell to true.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_adaptive_timestep_include_DCFL" type="logical"
	category="time_integration" group="time_integration">
Option of whether to include the diffusive CFL condition in the determination of the maximum allowable timestep. The diffusive CFL condition at any location is estimated based on the local ice flux and surface slope.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_adaptive_timestep_include_calving" type="logical"
	category="time_integration" group="time_integration">
Option of whether to include the calving CFL condition in the determination of the maximum allowable timestep. This only is applied if config_calving is set to a method that uses a calvingVelocity.  Note that this is an approximate CFL condition and is lagged a timestep.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_adaptive_timestep_include_face_melting" type="logical"
	category="time_integration" group="time_integration">
Option of whether to include the face-melting CFL condition in the determination of the maximum allowable timestep. This only is applied if config_front_mass_bal_grounded is not set to 'none'.  Note that this is an approximate CFL condition and is lagged a timestep.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_adaptive_timestep_force_interval" type="char*1024"
	category="time_integration" group="time_integration">
If adaptive timestep is enabled, the model will ensure a timestep ends at multiples of this interval.  This is useful for ensuring that model output is written at a specific desired interval (rather than the closest time after) or when running coupled to an earth system model that expects a certain interval.

Valid values: Any time interval of the format 'YYYY-MM-DD_HH:MM:SS'. (items in the format string may be dropped from the left if not needed, and the components on either side of the underscore may be replaced with a single integer representing the rightmost unit)
Default: Defined in namelist_defaults.xml
</entry>


<!-- time_management -->

<entry id="config_do_restart" type="logical"
	category="time_management" group="time_management">
Determines if the initial conditions should be read from a restart file, or an input file.  To perform a restart, set this to true in the namelist.input file.  The restart time will be read from config_start_time (which can be set to 'file' to have the restart time read automatically from the file defined by config_restart_timestamp_name). A restart will read everything from the restart file - no information is read from the 'input' stream.  It will perform a run normally, except velocity will not be solved on a restart.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_restart_timestamp_name" type="char*1024"
	category="time_management" group="time_management">
Path to the filename for restart timestamps to be read and written from.

Valid values: Path to a file.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_start_time" type="char*1024"
	category="time_management" group="time_management">
Timestamp describing the initial time of the simulation.  If it is set to 'file', the initial time is read from the filename specified by config_restart_timestamp_name (defaults to 'restart_timestamp').

Valid values: 'YYYY-MM-DD_HH:MM:SS' (items in the format string may be dropped from the left if not needed, and the components on either side of the underscore may be replaced with a single integer representing the rightmost unit)
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_stop_time" type="char*1024"
	category="time_management" group="time_management">
Timestamp describing the final time of the simulation. If it is set to 'none' the final time is determined from config_start_time and config_run_duration.  If config_run_duration is also specified, it takes precedence over config_stop_time.  Set config_stop_time to be equal to config_start_time (and config_run_duration to 'none') to perform a diagnostic solve only.

Valid values: 'YYYY-MM-DD_HH:MM:SS' or 'none' (items in the format string may be dropped from the left if not needed, and the components on either side of the underscore may be replaced with a single integer representing the rightmost unit)
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_run_duration" type="char*1024"
	category="time_management" group="time_management">
Timestamp describing the length of the simulation. If it is set to 'none' the duration is determined from config_start_time and config_stop_time. config_run_duration overrides inconsistent values of config_stop_time. If a time value is specified for config_run_duration, it must be greater than 0.

Valid values: 'YYYY-MM-DD_HH:MM:SS' or 'none' (items in the format string may be dropped from the left if not needed, and the components on either side of the underscore may be replaced with a single integer representing the rightmost unit)
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calendar_type" type="char*1024"
	category="time_management" group="time_management">
Selection of the type of calendar that should be used in the simulation.

Valid values: 'gregorian', 'noleap'
Default: Defined in namelist_defaults.xml
</entry>


<!-- io -->

<entry id="config_stats_interval" type="integer"
	category="io" group="io">
Integer specifying interval (number of timesteps) for writing global/local statistics. If set to 0, then statistics are not written (except perhaps at startup, as determined by 'config_write_stats_on_startup'). Applies to statistics written to log file and not analysis member output written to netCDF files.

Valid values: Any positive integer value greater than or equal to 0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_write_stats_on_startup" type="logical"
	category="io" group="io">
Logical flag determining if statistics should be written prior to the first time step. Applies to statistics written to log file and not analysis member output written to netCDF files.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_stats_cell_ID" type="integer"
	category="io" group="io">
global ID for the cell selected for local statistics/diagnostics. Applies to statistics written to log file and not analysis member output written to netCDF files.

Valid values: Any positive integer value greater than or equal to 0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_write_output_on_startup" type="logical"
	category="io" group="io">
Logical flag determining if an output file should be written prior to the first time step.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_pio_num_iotasks" type="integer"
	category="io" group="io">
Integer specifying how many IO tasks should be used within the PIO library. A value of 0 causes all MPI tasks to also be IO tasks. IO tasks are required to write contiguous blocks of data to a file.  Optimal performance is typically found by having 1-2 tasks per node performing I/O.  To do so, config_pio_num_iotasks must be manually set in conjunction with config_pio_stride as appropriate for the processor layout used. For example, running on 240 processors on a machine with 24 processors per node, setting config_pio_num_iotasks=20 and config_pio_stride=12 would configure two I/O tasks per node.

Valid values: Any positive integer value greater than or equal to 0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_pio_stride" type="integer"
	category="io" group="io">
Integer specifying the stride of each IO task. See config_pio_num_iotasks for details.

Valid values: Any positive integer value greater than 0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_year_digits" type="integer"
	category="io" group="io">
Integer specifying the number of digits used to represent the year in time strings.

Valid values: Any positive integer value greater than 0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_output_external_velocity_solver_data" type="logical"
	category="io" group="io">
If .true., external velocity solvers (if enabled) will write their own output data in addition to any MPAS output that is configured.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_write_albany_ascii_mesh" type="logical"
	category="io" group="io">
Logical flag determining if ascii mesh files will be created.  These files are written in a format that can be used by the standalone Albany velocity solver for optimization.  If .true., the model initializes, writes the mesh files, and then terminates.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>


<!-- decomposition -->

<entry id="config_num_halos" type="integer"
	category="decomposition" group="decomposition">
Determines the number of halo cells extending from a blocks owned cells (Called the 0-Halo). The extension of the mesh for Albany requires 3 to cover all geometric possibilities.  The default first-order upwinding advection requires a minimum of 2.  Note that a minimum of 3 is required for incremental remapping advection on a quad mesh or for FCT advection (neither of which is currently supported for land ice).

Valid values: Any positive interger value.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_block_decomp_file_prefix" type="char*1024"
	category="decomposition" group="decomposition">
Defines the prefix for the block decomposition file. Can include a path. The number of blocks is appended to the end of the prefix at run-time.

Valid values: Any path/prefix to a block decomposition file.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_number_of_blocks" type="integer"
	category="decomposition" group="decomposition">
Determines the number of blocks a simulation should be run with. If it is set to 0, the number of blocks is the same as the number of MPI tasks at run-time.

Valid values: Any integer $>=$ 0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_explicit_proc_decomp" type="logical"
	category="decomposition" group="decomposition">
Determines if an explicit processor decomposition should be used. This is only useful if multiple blocks per processor are used.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_proc_decomp_file_prefix" type="char*1024"
	category="decomposition" group="decomposition">
Defines the prefix for the processor decomposition file. This file is only read if config_explicit_proc_decomp is .true. The number of processors is appended to the end of the prefix at run-time.

Valid values: Any path/prefix to a processor decomposition file.
Default: Defined in namelist_defaults.xml
</entry>


<!-- debug -->

<entry id="config_print_thickness_advection_info" type="logical"
	category="debug" group="debug">
Prints additional information about thickness advection.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_print_calving_info" type="logical"
	category="debug" group="debug">
Prints additional information about calving physics (if enabled).

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_print_thermal_info" type="logical"
	category="debug" group="debug">
Prints additional information about thermal calculations (if enabled).

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_always_compute_fem_grid" type="logical"
	category="debug" group="debug">
Always compute finite-element grid information for external dycores rather than only doing so when the ice extent changes.  As of June 2019 (and earlier) there is a bug which requires this to be set to true if there are ice shelves in the model domain.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_print_velocity_cleanup_details" type="logical"
	category="debug" group="debug">
After velocity is calculated there are a few checks for appropriate values in certain geometric configurations.  Setting this option to .true. will cause detailed information about those adjustments to be printed.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_check_tracer_monotonicity" type="logical"
	category="debug" group="debug">
Check tracer monotonicity at the end of the monotonic advection routine and write warnings to log file if not monotonic.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>


<!-- subglacial_hydro -->

<entry id="config_SGH" type="logical"
	category="subglacial_hydro" group="subglacial_hydro">
activate subglacial hydrology model

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_ocean_connection_N" type="logical"
	category="subglacial_hydro" group="subglacial_hydro">
Calculate effective pressure assuming perfect connection with the ocean.  This is an alternative to the subglacial hydrology model and requires that config_SGH=.false.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_adaptive_timestep_fraction" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
fraction of adaptive CFL timestep to use

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_max_adaptive_timestep" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
The maximum allowable time step in seconds. If the allowable time step determined by the adaptive CFL calculation is longer than this, then the model will specify config_SGH_max_adaptive_timestep as the time step instead.  Defaults to 100 years (in seconds).

Valid values: Any non-negative real value.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_tangent_slope_calculation" type="char*1024"
	category="subglacial_hydro" group="subglacial_hydro">
Selection of the method for calculating the tangent component of slope at edges. 'from_vertex_barycentric' interpolates scalar values from cell centers to vertices using the barycentric interpolation routine in operators (mpas_cells_to_points_using_baryweights) and then calculates the slope between vertices.  It works for obtuse triangles, but will not work correctly across the edges of periodic meshes. 'from_vertex_barycentric_kiteareas' interpolates scalar values from cell centers to vertices using barycentric interpolation based on kiterea values and then calculates the slope between vertices.  It will work across the edges of periodic meshes, but will not work correctly for obtuse triangles. 'from_normal_slope' uses the vector operator mpas_tangential_vector_1d to calculate the tangent slopes from the normal slopes on the edges of the adjacent cells.  It will work for any mesh configuration, but is the least accurate method.

Valid values: 'from_vertex_barycentric', 'from_vertex_barycentric_kiteareas', 'from_normal_slope'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_pressure_calc" type="char*1024"
	category="subglacial_hydro" group="subglacial_hydro">
Selection of the method for calculating water pressure. 'cavity' closes the hydrology equations by assuming cavities are always completely full. 'overburden' assumes water pressure is always equal to ice overburden pressure.

Valid values: 'cavity', 'overburden'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_alpha" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
power of alpha parameter in subglacial water flux formula

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_beta" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
power of beta parameter in subglacial water flux formula

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_conduc_coeff" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
conductivity coefficient for subglacial water flux

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_conduc_coeff_drowned" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
conductivity coefficient for subglacial water flux for fraction of water thickness that exceeds bump height.  Use 0.0 or negative value to disable.

Valid values: positive real number or 0.0
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_till_drainage" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
background subglacial till drainage rate

Valid values: positive real number.  Disabled by default.  Bueler and van Pelt use 3.1709792e-11 m/s (0.001 m/yr).
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_till_max" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
maximum water thickness in subglacial till. Bueler and van Pelt use 2.0 m

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_advection" type="char*1024"
	category="subglacial_hydro" group="subglacial_hydro">
Advection method for SGH. 'fo'=first-order upwind; 'fct'=flux-corrected transport. FCT currently not enabled.

Valid values: 'fo','fct'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_bed_roughness" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
cavitation coefficient

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_bed_roughness_max" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
bed roughness scale

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_creep_coefficient" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
creep closure coefficient

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_englacial_porosity" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
notional englacial porosity

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_chnl_active" type="logical"
	category="subglacial_hydro" group="subglacial_hydro">
activate channels in subglacial hydrology model

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_chnl_include_DCFL" type="logical"
	category="subglacial_hydro" group="subglacial_hydro">
If true, diffusivity of the channel is included in the CFL calculation for determining the time step.  This can require very small time steps (subsecond).  It is unclear if it is necessary and many runs have been stable without it.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_chnl_alpha" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
power of alpha parameter in subglacial water flux formula (in channels)

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_chnl_beta" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
power of beta parameter in subglacial water flux formula (in channels)

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_chnl_conduc_coeff" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
conductivity coefficient (in channels)

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_chnl_creep_coefficient" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
creep closure coefficient (in channels)

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_incipient_channel_width" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
width of sheet beneath/around channel that contributes to melt within the channel

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_include_pressure_melt" type="logical"
	category="subglacial_hydro" group="subglacial_hydro">
whether to include the pressure melt term in the rate of channel opening

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_shmip_forcing" type="char*1024"
	category="subglacial_hydro" group="subglacial_hydro">
calculate time-varying forcing specified by SHMIP experiments C or D

Valid values: 'none', 'C1'-'C4', 'D1'-'D5'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_basal_melt" type="char*1024"
	category="subglacial_hydro" group="subglacial_hydro">
source for the basalMeltInput term.  'file' takes whatever field was input and performs no calculation.  'thermal' uses the groundedBasalMassBal field calculated by the thermal model.  'basal_heat' calculates a melt rate assuming the entirety of the basal heat flux (basalFrictionFlux+basalHeatFlux) goes to melting ice at the bed.  This is calculated in the SGH module and is independent of any calculations in the thermal model.

Valid values: 'file', 'thermal', 'basal_heat'
Default: Defined in namelist_defaults.xml
</entry>


<!-- AM_globalStats -->

<entry id="config_AM_globalStats_enable" type="logical"
	category="AM_globalStats" group="AM_globalStats">
If true, landice analysis member globalStats is called.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_globalStats_compute_interval" type="char*1024"
	category="AM_globalStats" group="AM_globalStats">
Timestamp determining how often analysis member computations should be performed.

Valid values: Any valid time stamp, 'dt', or 'output_interval'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_globalStats_stream_name" type="char*1024"
	category="AM_globalStats" group="AM_globalStats">
Name of the stream that the globalStats analysis member should be tied to.

Valid values: Any existing stream name or 'none'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_globalStats_compute_on_startup" type="logical"
	category="AM_globalStats" group="AM_globalStats">
Logical flag determining if analysis member computations occur on start-up.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_globalStats_write_on_startup" type="logical"
	category="AM_globalStats" group="AM_globalStats">
Logical flag determining if an analysis member write occurs on start-up.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>


<!-- AM_regionalStats -->

<entry id="config_AM_regionalStats_enable" type="logical"
	category="AM_regionalStats" group="AM_regionalStats">
If true, landice analysis member regionalStats is called.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_regionalStats_compute_interval" type="char*1024"
	category="AM_regionalStats" group="AM_regionalStats">
Timestamp determining how often analysis member computations should be performed.

Valid values: Any valid time stamp, 'dt', or 'output_interval'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_regionalStats_stream_name" type="char*1024"
	category="AM_regionalStats" group="AM_regionalStats">
Name of the stream that the regionalStats analysis member should be tied to.

Valid values: Any existing stream name or 'none'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_regionalStats_compute_on_startup" type="logical"
	category="AM_regionalStats" group="AM_regionalStats">
Logical flag determining if analysis member computations occur on start-up.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_regionalStats_write_on_startup" type="logical"
	category="AM_regionalStats" group="AM_regionalStats">
Logical flag determining if an analysis member write occurs on start-up.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

</namelist_definition>
