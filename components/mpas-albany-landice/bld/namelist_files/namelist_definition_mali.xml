<?xml version="1.0"?>

<namelist_definition>

<!-- Each namelist variable is defined in an <entry> element.  The
     content of the element is the documentation of how the variable is
     used.  Other aspects of the variable's definition are expressed as
     attributes of the <entry> element.  Note that it is an XML requirement
     that the attribute values are enclosed in quotes.  The attributes are:

     id
          The variable's name.  *** N.B. *** The name must be lower case.
          The module convert all namelist variable names to lower case
          since Fortran is case insensitive.

     type
          An abbreviation of the fortran declaration for the variable.
      Valid declarations are:

          char*n  
          integer
          logical
          real

      Any of these types may be followed by a comma separated list of
      integers enclosed in parenthesis to indicate an array.

      The current namelist validation code only distinquishes between
      string and non-string types.

     input_pathname
          Only include this attribute to indicate that the variable
          contains the pathname of an input dataset that resides in the
          CESM inputdata directory tree.  

      The recognized values are "abs" to indicate that an absolute
          pathname is required, or "rel:var_name" to indicate that the
          pathname is relative and that the namelist variable "var_name"
          contains the absolute root directory.

     category
          A category assigned for organizing the documentation.

     group
          The namelist group that the variable is declared in.

     valid_values
          This is an optional attribute that is mainly useful for variables
          that have only a small number of allowed values.
                                                                        -->


<!-- velocity_solver -->

<entry id="config_velocity_solver" type="char*1024"
	category="velocity_solver" group="velocity_solver">
Selection of the method for solving ice velocity. 'L1L2', 'FO', and 'Stokes' require compiling with external dycores. 'none' skips the calculation of velocity so the velocity field will be 0 or set to a field read from an input file.  'simple' gives a simple prescribed velocity field computed at initialization.

Valid values: 'sia', 'L1L2', 'FO', 'Stokes', 'simple', 'none'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_sia_tangent_slope_calculation" type="char*1024"
	category="velocity_solver" group="velocity_solver">
Selection of the method for calculating the tangent component of surface slope at edges needed by the SIA velocity solver. 'from_vertex_barycentric' interpolates upperSurface values from cell centers to vertices using the barycentric interpolation routine in operators (mpas_cells_to_points_using_baryweights) and then calculates the slope between vertices.  It works for obtuse triangles, but will not work correctly across the edges of periodic meshes. 'from_vertex_barycentric_kiteareas' interpolates upperSurface values from cell centers to vertices using barycentric interpolation based on kiterea values and then calculates the slope between vertices.  It will work across the edges of periodic meshes, but will not work correctly for obtuse triangles. 'from_normal_slope' uses the vector operator mpas_tangential_vector_1d to calculate the tangent slopes from the normal slopes on the edges of the adjacent cells.  It will work for any mesh configuration, but is the least accurate method.

Valid values: 'from_vertex_barycentric', 'from_vertex_barycentric_kiteareas', 'from_normal_slope'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_flowParamA_calculation" type="char*1024"
	category="velocity_solver" group="velocity_solver">
Selection of the method for calculating the flow law parameter A.  If 'constant' is selected, the value is set to config_default_flowParamA.  The other options are calculated from the temperature field.

Valid values: 'constant', 'PB1982', 'CP2010'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_do_velocity_reconstruction_for_external_dycore" type="logical"
	category="velocity_solver" group="velocity_solver">
By default, external, higher-order dycores return the uReconstructX and uReconstructY fields (which are the native locations of their FEM solution).  If this option is set to .true., uReconstructX and uReconstructY will be calculated by MPAS using framework's vector reconstruction routines based on the values of normalVelocity supplied by the external dycore.  This provides a way to test the calculation of normalVelocity in the interface.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_simple_velocity_type" type="char*1024"
	category="velocity_solver" group="velocity_solver">
Selection of the type of simple velocity field computed at initialization when config_velocity_solver = 'simple'

Valid values: 'uniform', 'radial'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_use_glp" type="logical"
	category="velocity_solver" group="velocity_solver">
If true, then apply Albany's grounding line parameterization

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_beta_use_effective_pressure" type="logical"
	category="velocity_solver" group="velocity_solver">
If true, then multiply beta by effective pressure before passing to Albany.  This allows, e.g., a Weertman basal friction law with an effective pressure term.  Note that basal friction still needs to be selected in Albany xml file.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>


<!-- advection -->

<entry id="config_thickness_advection" type="char*1024"
	category="advection" group="advection">
Selection of the method for advecting thickness.

Valid values: 'fo', 'none'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_tracer_advection" type="char*1024"
	category="advection" group="advection">
Selection of the method for advecting tracers.

Valid values: 'fo', 'none'
Default: Defined in namelist_defaults.xml
</entry>


<!-- calving -->

<entry id="config_calving" type="char*1024"
	category="calving" group="calving">
Selection of the method for calving ice.

Valid values: 'none', 'floating', 'topographic_threshold', 'thickness_threshold', 'eigencalving' 
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_topography" type="real"
	category="calving" group="calving">
Defines the topographic height below which ice calves (for topographic_threshold option).

Valid values: Any non-positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_thickness" type="real"
	category="calving" group="calving">
Defines the ice thickness below which ice calves (for thickness_threshold option).

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_eigencalving_parameter_source" type="char*1024"
	category="calving" group="calving">
Source of the eigencalving parameter value

Valid values: 'data' ('eigencalvingParameter' field read from input file), 'scalar' (specified by config_calving_eigencalving_parameter_scalar_value)
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_eigencalving_parameter_scalar_value" type="real"
	category="calving" group="calving">
Value of eigencalving parameter if taken as a scalar by option config_calving_eigencalving_parameter_source. (Default value is 1.0e9 ma converted to units used here.)

Valid values: any positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_data_calving" type="logical"
	category="calving" group="calving">
Select whether or not to configure calving in a 'data' model mode (calc. calving flux but do not update ice geometry)

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calving_timescale" type="real"
	category="calving" group="calving">
Defines the timescale for calving. The fraction of eligible ice that calves is max(dt/calving_timescale, 1.0). A value of 0 means that all eligible ice calves.

Valid values: Any non-negative real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_restore_calving_front" type="logical"
	category="calving" group="calving">
If true, then restort the calving front to its initial position

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>


<!-- thermal_solver -->

<entry id="config_thermal_solver" type="char*1024"
	category="thermal_solver" group="thermal_solver">
Selection of the method for the vertical thermal solver.

Valid values: 'none', 'temperature', 'enthalpy'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_thermal_calculate_bmb" type="logical"
	category="thermal_solver" group="thermal_solver">
Determines if basal and internal melting calculated by the thermal solver should contribute to basal mass balance.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_temperature_init" type="char*1024"
	category="thermal_solver" group="thermal_solver">
Selection of the method for initializing the ice temperature.

Valid values: 'sfc_air_temperature', 'linear', 'file'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_thermal_thickness" type="real"
	category="thermal_solver" group="thermal_solver">
Defines the minimum thickness for thermal calculations

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_surface_air_temperature_source" type="char*1024"
	category="thermal_solver" group="thermal_solver">
Selection of the method for setting the surface air temperature. 'constant' uses the value set by config_surface_air_temperature_value.  'file' reads the field from an input or forcing file or ESM coupler. 'lapse' uses the value of config_surface_air_temperature_value at elevation 0 with a lapse rate applied from config_surface_air_temperature_lapse_rate.

Valid values: 'constant', 'file', 'lapse'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_surface_air_temperature_value" type="real"
	category="thermal_solver" group="thermal_solver">
Constant value of the surface air temperature.

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_surface_air_temperature_lapse_rate" type="real"
	category="thermal_solver" group="thermal_solver">
Lapse rate to apply to surface air temperature when config_surface_air_temperature_source='lapse'. Positive values lead to colder temperatures at higher elevations.

Valid values: Any real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_basal_heat_flux_source" type="char*1024"
	category="thermal_solver" group="thermal_solver">
Selection of the method for setting the basal heat flux.

Valid values: 'constant', 'file'  'constant' uses the value set by config_basal_heat_flux_value.  'file' reads the field from an input or forcing file or ESM coupler.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_basal_heat_flux_value" type="real"
	category="thermal_solver" group="thermal_solver">
Constant value of the basal heat flux (positive upward).

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_basal_mass_bal_float" type="char*1024"
	category="thermal_solver" group="thermal_solver">
Selection of the method for computing the basal mass balance of floating ice.  'none' sets the basalMassBal field to 0 everywhere.  'file' uses without modification whatever value was read in through an input or forcing file or the value set by an ESM coupler.  'constant', 'mismip', 'seroussi' use hardcoded fields defined in the code.

Valid values: 'none', 'file', 'constant', 'mismip', 'seroussi'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_basal_mass_bal_seroussi_amplitude" type="real"
	category="thermal_solver" group="thermal_solver">
amplitude on the depth adjustment applied to the Seroussi subglacial melt param.

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_basal_mass_bal_seroussi_period" type="real"
	category="thermal_solver" group="thermal_solver">
period of the periodic depth adjustment applied to the Seroussi subglacial melt param.

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_basal_mass_bal_seroussi_phase" type="real"
	category="thermal_solver" group="thermal_solver">
phase of the periodic depth adjustment applied to the Seroussi subglacial melt param. Units are cycles, i.e., 0-1

Valid values: any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_bmlt_float_flux" type="real"
	category="thermal_solver" group="thermal_solver">
Value of the constant heat flux applied to the base of floating ice (positive upward).

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_bmlt_float_xlimit" type="real"
	category="thermal_solver" group="thermal_solver">
x value defining region where bmlt_float_flux is applied; melt only where abs(x) > xlimit.

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>


<!-- physical_parameters -->

<entry id="config_ice_density" type="real"
	category="physical_parameters" group="physical_parameters">
ice density to use

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_ocean_density" type="real"
	category="physical_parameters" group="physical_parameters">
ocean density to use for calculating floatation

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_sea_level" type="real"
	category="physical_parameters" group="physical_parameters">
sea level to use for calculating floatation

Valid values: Any real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_default_flowParamA" type="real"
	category="physical_parameters" group="physical_parameters">
Defines the default value of the flow law parameter A to be used if it is not being calculated from ice temperature.  Defaults to the SI representation of 1.0e-16 yr^{-1} Pa^{-3}.

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_enhancementFactor" type="real"
	category="physical_parameters" group="physical_parameters">
multiplier on the flow parameter A

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_flowLawExponent" type="real"
	category="physical_parameters" group="physical_parameters">
Defines the value of the Glen flow law exponent, n.

Valid values: Any real value
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_dynamic_thickness" type="real"
	category="physical_parameters" group="physical_parameters">
Defines the ice thickness below which dynamics are not calculated.

Valid values: Any positive real value
Default: Defined in namelist_defaults.xml
</entry>


<!-- time_integration -->

<entry id="config_dt" type="char*1024"
	category="time_integration" group="time_integration">
Length of model time step defined as a time interval.

Valid values: Any time interval of the format 'YYYY-MM-DD_HH:MM:SS', but limited by CFL condition. (items in the format string may be dropped from the left if not needed, and the components on either side of the underscore may be replaced with a single integer representing the rightmost unit)
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_time_integration" type="char*1024"
	category="time_integration" group="time_integration">
Time integration method.

Valid values: 'forward_euler'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_adaptive_timestep" type="logical"
	category="time_integration" group="time_integration">
Determines if the time step should be adjusted based on the CFL condition or should be steady in time. If true, the config_dt_* options are ignored.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_min_adaptive_timestep" type="real"
	category="time_integration" group="time_integration">
The minimum allowable time step in seconds.  If the CFL condition dictates the time step should be shorter than this, then the model aborts.

Valid values: Any non-negative real value.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_max_adaptive_timestep" type="real"
	category="time_integration" group="time_integration">
The maximum allowable time step in seconds.  If the CFL condition allows the time step to be longer than this, then the model uses this value instead.  Defaults to 100 years (in seconds).

Valid values: Any non-negative real value.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_adaptive_timestep_CFL_fraction" type="real"
	category="time_integration" group="time_integration">
A multiplier on the minimum allowable time step calculated from the CFL condition. (Setting to 1.0 may be unstable, so smaller values are recommended.)

Valid values: Any positive real value less than 1.0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_adaptive_timestep_include_DCFL" type="logical"
	category="time_integration" group="time_integration">
Option of whether to include the diffusive CFL condition in the determination of the maximum allowable timestep.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_adaptive_timestep_force_interval" type="char*1024"
	category="time_integration" group="time_integration">
If adaptive timestep is enabled, the model will ensure a timestep ends at multiples of this interval.  This is useful for ensuring you get output at a specific desired interval (rather than the closest time after) or for running coupled to earth system models that expect a certain interval.

Valid values: Any time interval of the format 'YYYY-MM-DD_HH:MM:SS'. (items in the format string may be dropped from the left if not needed, and the components on either side of the underscore may be replaced with a single integer representing the rightmost unit)
Default: Defined in namelist_defaults.xml
</entry>


<!-- time_management -->

<entry id="config_do_restart" type="logical"
	category="time_management" group="time_management">
Determines if the initial conditions should be read from a restart file, or an input file.  To perform a restart, simply set this to true in the namelist.input file and modify the start time to be the time you want restart from.  A restart will read the grid information from the input field, and the restart state from the restart file.  It will perform a run normally, except velocity will not be solved on a restart.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_restart_timestamp_name" type="char*1024"
	category="time_management" group="time_management">
Path to the filename for restart timestamps to be read and written from.

Valid values: Path to a file.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_start_time" type="char*1024"
	category="time_management" group="time_management">
Timestamp describing the initial time of the simulation.  If it is set to 'file', the initial time is read from restart_timestamp

Valid values: 'YYYY-MM-DD_HH:MM:SS' (items in the format string may be dropped from the left if not needed, and the components on either side of the underscore may be replaced with a single integer representing the rightmost unit)
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_stop_time" type="char*1024"
	category="time_management" group="time_management">
Timestamp describing the final time of the simulation. If it is set to 'none' the final time is determined from config_start_time and config_run_duration.  If config_run_duration is also specified, it takes precedence over config_stop_time.  Set config_stop_time to be equal to config_start_time (and config_run_duration to 'none') to perform a diagnostic solve only.

Valid values: 'YYYY-MM-DD_HH:MM:SS' or 'none' (items in the format string may be dropped from the left if not needed, and the components on either side of the underscore may be replaced with a single integer representing the rightmost unit)
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_run_duration" type="char*1024"
	category="time_management" group="time_management">
Timestamp describing the length of the simulation. If it is set to 'none' the duration is determined from config_start_time and config_stop_time. config_run_duration overrides inconsistent values of config_stop_time. If a time value is specified for config_run_duration, it must be greater than 0.

Valid values: 'YYYY-MM-DD_HH:MM:SS' or 'none' (items in the format string may be dropped from the left if not needed, and the components on either side of the underscore may be replaced with a single integer representing the rightmost unit)
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_calendar_type" type="char*1024"
	category="time_management" group="time_management">
Selection of the type of calendar that should be used in the simulation.

Valid values: 'gregorian', 'gregorian_noleap'
Default: Defined in namelist_defaults.xml
</entry>


<!-- io -->

<entry id="config_stats_interval" type="integer"
	category="io" group="io">
Integer specifying interval (number of timesteps) for writing global/local statistics. If set to 0, then statistics are not written (except perhaps at startup, as determined by 'config_write_stats_on_startup').

Valid values: Any positive integer value greater than or equal to 0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_write_stats_on_startup" type="logical"
	category="io" group="io">
Logical flag determining if statistics should be written prior to the first time step.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_stats_cell_ID" type="integer"
	category="io" group="io">
global ID for the cell selected for local statistics/diagnostics

Valid values: Any positive integer value greater than or equal to 0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_write_output_on_startup" type="logical"
	category="io" group="io">
Logical flag determining if an output file should be written prior to the first time step.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_pio_num_iotasks" type="integer"
	category="io" group="io">
Integer specifying how many IO tasks should be used within the PIO library. A value of 0 causes all MPI tasks to also be IO tasks. IO tasks are required to write contiguous blocks of data to a file.

Valid values: Any positive integer value greater than or equal to 0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_pio_stride" type="integer"
	category="io" group="io">
Integer specifying the stride of each IO task.

Valid values: Any positive integer value greater than 0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_year_digits" type="integer"
	category="io" group="io">
Integer specifying the number of digits used to represent the year in time strings.

Valid values: Any positive integer value greater than 0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_output_external_velocity_solver_data" type="logical"
	category="io" group="io">
If .true., external velocity solvers (if enabled) will write their own output data in addition to any MPAS output that is configured.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_write_albany_ascii_mesh" type="logical"
	category="io" group="io">
Logical flag determining if Albany ascii mesh files will be written.  If .true., model initializes, writes the mesh files, and then terminates.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>


<!-- decomposition -->

<entry id="config_num_halos" type="integer"
	category="decomposition" group="decomposition">
Determines the number of halo cells extending from a blocks owned cells (Called the 0-Halo). Default FO advection requires a minimum of 2.  Note that a minimum of 3 is required for incremental remapping advection on a quad mesh or for FCT advection, neither of which is currently fully supported.

Valid values: Any positive interger value.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_block_decomp_file_prefix" type="char*1024"
	category="decomposition" group="decomposition">
Defines the prefix for the block decomposition file. Can include a path. The number of blocks is appended to the end of the prefix at run-time.

Valid values: Any path/prefix to a block decomposition file.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_number_of_blocks" type="integer"
	category="decomposition" group="decomposition">
Determines the number of blocks a simulation should be run with. If it is set to 0, the number of blocks is the same as the number of MPI tasks at run-time.

Valid values: Any integer $>=$ 0.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_explicit_proc_decomp" type="logical"
	category="decomposition" group="decomposition">
Determines if an explicit processor decomposition should be used. This is only useful if multiple blocks per processor are used.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_proc_decomp_file_prefix" type="char*1024"
	category="decomposition" group="decomposition">
Defines the prefix for the processor decomposition file. This file is only read if config_explicit_proc_decomp is .true. The number of processors is appended to the end of the prefix at run-time.

Valid values: Any path/prefix to a processor decomposition file.
Default: Defined in namelist_defaults.xml
</entry>


<!-- debug -->

<entry id="config_print_thickness_advection_info" type="logical"
	category="debug" group="debug">
Prints additional information about thickness advection.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_print_calving_info" type="logical"
	category="debug" group="debug">
Prints additional information about calving.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_print_thermal_info" type="logical"
	category="debug" group="debug">
Prints additional information about thermal calculations.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_always_compute_fem_grid" type="logical"
	category="debug" group="debug">
Always compute finite-element grid information for external dycores rather than only doing so when the ice extent changes.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_print_velocity_cleanup_details" type="logical"
	category="debug" group="debug">
After velocity is calculated there are a few checks for appropriate values in certain geometric configurations.  Setting this option to .true. will cause detailed information about those adjustments to be printed.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>


<!-- subglacial_hydro -->

<entry id="config_SGH" type="logical"
	category="subglacial_hydro" group="subglacial_hydro">
activate subglacial hydrology model

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_adaptive_timestep_fraction" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
fraction of limiting timestep to use

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_max_adaptive_timestep" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
The maximum allowable time step in seconds for the subglacial hydrology model.  If the CFL condition allows the time step to be longer than this, then the model uses this value instead.  Defaults to 100 years (in seconds).

Valid values: Any non-negative real value.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_tangent_slope_calculation" type="char*1024"
	category="subglacial_hydro" group="subglacial_hydro">
Selection of the method for calculating the tangent component of slope at edges. 'from_vertex_barycentric' interpolates scalar values from cell centers to vertices using the barycentric interpolation routine in operators (mpas_cells_to_points_using_baryweights) and then calculates the slope between vertices.  It works for obtuse triangles, but will not work correctly across the edges of periodic meshes. 'from_vertex_barycentric_kiteareas' interpolates scalar values from cell centers to vertices using barycentric interpolation based on kiterea values and then calculates the slope between vertices.  It will work across the edges of periodic meshes, but will not work correctly for obtuse triangles. 'from_normal_slope' uses the vector operator mpas_tangential_vector_1d to calculate the tangent slopes from the normal slopes on the edges of the adjacent cells.  It will work for any mesh configuration, but is the least accurate method.

Valid values: 'from_vertex_barycentric', 'from_vertex_barycentric_kiteareas', 'from_normal_slope'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_pressure_calc" type="char*1024"
	category="subglacial_hydro" group="subglacial_hydro">
Selection of the method for calculating water pressure. 'cavity' closes the hydrology equations by assuming cavities are always completely full. 'overburden' assumes water pressure is always equal to ice overburden pressure.

Valid values: 'cavity', 'overburden'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_alpha" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
power in flux formula

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_beta" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
power in flux formula

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_conduc_coeff" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
conductivity coefficient

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_till_drainage" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
background till drainage rate

Valid values: positive real number.  Default value is 0.001 m/yr
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_advection" type="char*1024"
	category="subglacial_hydro" group="subglacial_hydro">
Advection method for SGH.  'fo'=First order upwind; 'fct'=Flux corrected transport.  FCT currently not enabled.

Valid values: 'fo','fct'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_bed_roughness" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
cavitation coefficient

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_bed_roughness_max" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
bed roughness scale

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_creep_coefficient" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
creep closure coefficient

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_englacial_porosity" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
notional englacial porosity

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_till_max" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
maximum water thickness in till

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_chnl_active" type="logical"
	category="subglacial_hydro" group="subglacial_hydro">
activate channels in subglacial hydrology model

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_chnl_alpha" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
power in flux formula

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_chnl_beta" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
power in flux formula

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_chnl_conduc_coeff" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
conductivity coefficient

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_chnl_creep_coefficient" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
creep closure coefficient

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_incipient_channel_width" type="real"
	category="subglacial_hydro" group="subglacial_hydro">
width of sheet beneath/around channel that contributes to melt within the channel

Valid values: positive real number
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_include_pressure_melt" type="logical"
	category="subglacial_hydro" group="subglacial_hydro">
whether to include the pressure melt term in the channel opening

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_shmip_forcing" type="char*1024"
	category="subglacial_hydro" group="subglacial_hydro">
calculate time-varying forcing specified by SHMIP experiments C or D

Valid values: 'none', 'C1'-'C4', 'D1'-'D5'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_SGH_basal_melt" type="char*1024"
	category="subglacial_hydro" group="subglacial_hydro">
source for the basalMeltInput term.  'file' takes whatever field was input and performs no calculation.  'thermal' uses the groundedBasalMassBal field calculated by the thermal model.  'basal_heat' calculates a melt rate assuming the entirety of the basal heat flux (basalFrictionFlux+basalHeatFlux) goes to melting ice at the bed.  This is calculated in the SGH module and is independent of any calculations in the thermal model.

Valid values: 'file', 'thermal', 'basal_heat'
Default: Defined in namelist_defaults.xml
</entry>


<!-- AM_globalStats -->

<entry id="config_AM_globalStats_enable" type="logical"
	category="AM_globalStats" group="AM_globalStats">
If true, landice analysis member globalStats is called.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_globalStats_compute_interval" type="char*1024"
	category="AM_globalStats" group="AM_globalStats">
Timestamp determining how often analysis member computation should be performed.

Valid values: Any valid time stamp, 'dt', or 'output_interval'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_globalStats_stream_name" type="char*1024"
	category="AM_globalStats" group="AM_globalStats">
Name of the stream that the globalStats analysis member should be tied to.

Valid values: Any existing stream name or 'none'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_globalStats_compute_on_startup" type="logical"
	category="AM_globalStats" group="AM_globalStats">
Logical flag determining if an analysis member computation occurs on start-up.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_globalStats_write_on_startup" type="logical"
	category="AM_globalStats" group="AM_globalStats">
Logical flag determining if an analysis member write occurs on start-up.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>


<!-- AM_regionalStats -->

<entry id="config_AM_regionalStats_enable" type="logical"
	category="AM_regionalStats" group="AM_regionalStats">
If true, landice analysis member regionalStats is called.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_regionalStats_compute_interval" type="char*1024"
	category="AM_regionalStats" group="AM_regionalStats">
Timestamp determining how often analysis member computation should be performed.

Valid values: Any valid time stamp, 'dt', or 'output_interval'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_regionalStats_stream_name" type="char*1024"
	category="AM_regionalStats" group="AM_regionalStats">
Name of the stream that the regionalStats analysis member should be tied to.

Valid values: Any existing stream name or 'none'
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_regionalStats_compute_on_startup" type="logical"
	category="AM_regionalStats" group="AM_regionalStats">
Logical flag determining if an analysis member computation occurs on start-up.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

<entry id="config_AM_regionalStats_write_on_startup" type="logical"
	category="AM_regionalStats" group="AM_regionalStats">
Logical flag determining if an analysis member write occurs on start-up.

Valid values: .true. or .false.
Default: Defined in namelist_defaults.xml
</entry>

</namelist_definition>
