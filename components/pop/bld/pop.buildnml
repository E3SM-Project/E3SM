#! /usr/bin/env perl
use strict;
use Cwd;

if ($#ARGV == -1) {
    die " ERROR pop.buildnml: must specify a caseroot input argument";
}
my ($CASEROOT) = @ARGV;
chdir "${CASEROOT}";

my @dirs = ("$CASEROOT/Tools");
unshift @INC, @dirs;
require SetupTools;
my $sysmod; 

my $CASEROOT                    = `./xmlquery CASEROOT                  -value`;
my $CASEBUILD                   = `./xmlquery CASEBUILD                 -value`;
my $SRCROOT                     = `./xmlquery SRCROOT                  -value`;
my $OBJROOT                     = `./xmlquery OBJROOT                   -value`;
my $SCRIPTSROOT                 = `./xmlquery SCRIPTSROOT               -value`;
my $CASETOOLS                   = `./xmlquery CASETOOLS                 -value`;
my $CONTINUE_RUN                = `./xmlquery CONTINUE_RUN              -value`;
my $DIN_LOC_ROOT                = `./xmlquery DIN_LOC_ROOT              -value`;
my $EXEROOT                     = `./xmlquery EXEROOT                   -value`;
my $GET_REFCASE                 = `./xmlquery GET_REFCASE               -value`;
my $NINST_OCN                   = `./xmlquery NINST_OCN                 -value`;
my $OCN_GRID                    = `./xmlquery OCN_GRID                  -value`;
my $OCN_TRACER_MODULES          = `./xmlquery OCN_TRACER_MODULES        -value`;
my $RUN_TYPE                    = `./xmlquery RUN_TYPE                  -value`;
my $RUN_REFCASE                 = `./xmlquery RUN_REFCASE               -value`;
my $RUN_REFDATE                 = `./xmlquery RUN_REFDATE               -value`;
my $RUNDIR                      = `./xmlquery RUNDIR                    -value`;
my $BUILD_COMPLETE              = `./xmlquery BUILD_COMPLETE            -value`;

if (! -d "$EXEROOT/ocn/obj" ) {
    $sysmod = "mkdir -p $EXEROOT/ocn/obj";
    system($sysmod) == 0 or die "ERROR pop.buildnml: $sysmod failed: $?\n";
}
if (! -d "$EXEROOT/ocn/source") {
    $sysmod = "mkdir -p $EXEROOT/ocn/source";
    system($sysmod) == 0 or die "ERROR pop.buildnml: $sysmod failed: $?\n";
}
if (! -d "$CASEBUILD/popconf" ) {
    $sysmod = "mkdir $CASEBUILD/popconf";
    system($sysmod) == 0 or die "ERROR pop.buildnml: $sysmod failed: $?\n";
}

chdir "$CASEBUILD/popconf";

#--------------------------------------------------------------------
# Invoke pop configure, output will go in $CASEBUILD/camconf
#--------------------------------------------------------------------

if ($BUILD_COMPLETE eq 'FALSE' ) {
  my $tmp_dir = "$SRCROOT/components/pop/bld";
  if (-e "$CASEROOT/SourceMods/src.pop/configure") {
    $tmp_dir = "$CASEROOT/SourceMods/src.pop";
  }
  $sysmod = "$tmp_dir/configure $CASEROOT";
  system($sysmod) == 0 or die "ERROR pop.buildnml: $sysmod failed: $?\n";
} else {
  # Verify that config_cache.xml exists
  if (! -e "$CASEBUILD/popconf/config_cache.xml") {
    die "ERROR pop.buildnml: Build is complete but config_cache.xml is missing\n Can not run build-namelist; try cleaning build and building again.\n";
  }
}

#--------------------------------------------------------------------
# Obtain correct pop rpointer files
#--------------------------------------------------------------------

if (($GET_REFCASE eq 'TRUE') && ($RUN_TYPE ne 'startup') && ($CONTINUE_RUN eq 'FALSE')) {
    # During prestage step, rpointer files are copied from refdir
    # Get rid of old rpointer files if they exist and copy them 
    # independently of the prestage.  This is needed for rerunability
    # of cases from REFCASE data for first run
    $sysmod = "  rm -f $RUNDIR/rpointer.ocn* >& /dev/null";
    system($sysmod);

    my $refdir = "ccsm4_init/$RUN_REFCASE/$RUN_REFDATE";
    $sysmod = "cp -f $DIN_LOC_ROOT/$refdir/rpointer.ocn* $RUNDIR/.";
    system($sysmod) == 0 or die "ERROR pop.buildnml: $sysmod failed: $?\n";

    $sysmod = "chmod u+w $RUNDIR/rpointer.ocn* >& /dev/null";
    system($sysmod);
}

#--------------------------------------------------------------------
# Invoke pop build-namelist - output will go in $CASEBUILD/popconf
#--------------------------------------------------------------------

chdir "$CASEBUILD/popconf";

my $inst_string;
my $inst_counter = 1;
while ($inst_counter <= $NINST_OCN) {

    # -----------------------------------------------------
    # determine instance string 
    # -----------------------------------------------------

    $inst_string = "";       
    if ($NINST_OCN > 1) {
        $inst_string = `printf _%04d $inst_counter`;
    
        # If multi-instance case does not have restart file, use single-case restart for each instance
        foreach my $suffix ( "ovf", "restart", "tavg" ) {
            print "Looking to see if rpointer.ocn.${suffix} exists and rpointer.ocn${inst_string}.${suffix} does not... \n";
            if ( (! -e "$RUNDIR/rpointer.ocn${inst_string}.${suffix}") && (-e "$RUNDIR/rpointer.ocn.${suffix}") ) {
                $sysmod = "cp -v $RUNDIR/rpointer.ocn.${suffix} $RUNDIR/rpointer.ocn${inst_string}.${suffix}";
                system($sysmod) == 0 or die "ERROR pop.buildnml: $sysmod failed: $?\n";
            }
        }
    }

    # -----------------------------------------------------
    # create popconf/cesm_namelist
    # -----------------------------------------------------

    SetupTools::create_namelist_infile("$CASEROOT", 
                                       "$CASEROOT/user_nl_pop${inst_string}", 
                                       "$CASEBUILD/popconf/cesm_namelist"); 

    # -----------------------------------------------------
    # env variable declaring type of pop restart file (nc vs bin) 
    # -----------------------------------------------------

    # RESTART_INPUT_TS_FMT is needed by pop's build-namelist and is not in any xml files; 
    # it comes from rpointer.ocn.restart, which is in $RUNDIR for continued runs, 
    # but is in $refdir for hybrid / branch runs that are not continuations

    my $check_pointer_file = 'TRUE';
    if (($RUN_TYPE eq 'startup') && ($CONTINUE_RUN eq 'FALSE')) {$check_pointer_file = 'FALSE';}
  
    my $pointer_file = "$RUNDIR/rpointer.ocn${inst_string}.restart";
    if (($GET_REFCASE == 'TRUE') && ($RUN_TYPE != 'startup') && ($CONTINUE_RUN == 'FALSE')) {
        # During prestage step, rpointer files are copied from refdir
        my $refdir = "ccsm4_init/$RUN_REFCASE/$RUN_REFDATE";
        my $pointer_file = "$DIN_LOC_ROOT/$refdir/rpointer.ocn${inst_string}.restart";
        if (! -e "$pointer_file") { $pointer_file = "$RUNDIR/rpointer.ocn${inst_string}.restart";}
    }
  
    $ENV{'RESTART_INPUT_TS_FMT'} = 'bin'; 
    if ($check_pointer_file eq 'TRUE')  {
        $sysmod = "grep 'RESTART_FMT=' $pointer_file >& /dev/null";
        if (system($sysmod) == 0) {
            print "Getting init_ts_file_fmt from $pointer_file \n";
            $ENV{'RESTART_INPUT_TS_FMT'}  = `grep RESTART_FMT= $pointer_file | cut -c13-15`;
        }
    }

    # -----------------------------------------------------
    # call build-namelist- output will go in $CASEBUILD/popconf/ocn_in
    # -----------------------------------------------------
    
    # Check to see if "-preview" flag should be passed
    my $preview_flag = "";
    if ( $ENV{'PREVIEW_NML'} ) {$preview_flag = "-preview"};
    
    # Check to see if build-namelist exists in SourceMods
    
    my $bld_nml_dir = "$SRCROOT/components/pop/bld";
    my $cfg_flag = "";
    if (-e "$CASEROOT/SourceMods/src.pop/build-namelist") {
        $bld_nml_dir = "$CASEROOT/SourceMods/src.pop";
        $cfg_flag = "-cfg_dir $SRCROOT/components/pop/bld";
    }
  
    # Note that the following two environment variables are needed by the csh template scripts 
    # called by build-namelist
    $sysmod = "$bld_nml_dir/build-namelist $cfg_flag $preview_flag";
    $sysmod = "$sysmod -infile $CASEBUILD/popconf/cesm_namelist";
    $sysmod = "$sysmod -caseroot $CASEROOT"; 
    $sysmod = "$sysmod -casebuild $CASEBUILD";
    $sysmod = "$sysmod -scriptsroot $SCRIPTSROOT";
    $sysmod = "$sysmod -inst_string \"$inst_string\"";
    $sysmod = "$sysmod -ocn_grid \"$OCN_GRID\"";
    system($sysmod) == 0 or die "ERROR pop.buildnml: $sysmod failed: $?\n";

    # -----------------------------------------------------
    # Copy resolved namelist to $RUNDIR
    # -----------------------------------------------------

    if (-d ${RUNDIR}) {
        $sysmod = "cp -fp $CASEBUILD/popconf/pop_in   ${RUNDIR}/pop_in${inst_string}";
        system($sysmod) == 0 or die "ERROR pop.buildnml: $sysmod failed: $?\n";

        $sysmod = "cp -fp $CASEBUILD/popconf/${OCN_GRID}_tavg_contents   ${RUNDIR}/${OCN_GRID}_tavg_contents";
        system($sysmod) == 0 or die "ERROR pop.buildnml: $sysmod failed: $?\n";
    }

    # -----------------------------------------------------
    # increment instance counter
    # -----------------------------------------------------

    $inst_counter = $inst_counter + 1;

}

exit (0);

