#! /usr/bin/env perl
use strict;
use Cwd;

if ($#ARGV == -1) {
    die " ERROR mpas-cice.buildnml: must specify a caseroot input argument";
}
my ($CASEROOT) = @ARGV;
chdir "${CASEROOT}";

my @dirs = ("$CASEROOT/Tools");
unshift @INC, @dirs;
require SetupTools;
my $sysmod;

my $CASEROOT        = `./xmlquery  CASEROOT		-value`;
my $CASEBUILD       = `./xmlquery  CASEBUILD		-value`;
my $CCSMROOT        = `./xmlquery  CCSMROOT		-value`;
my $OBJROOT         = `./xmlquery  OBJROOT		-value`;
my $SCRIPTSROOT	    = `./xmlquery  SCRIPTSROOT		-value`;
my $COMP_INTERFACE  = `./xmlquery  COMP_INTERFACE	-value`;
my $DIN_LOC_ROOT    = `./xmlquery  DIN_LOC_ROOT		-value`;
my $ICE_GRID        = `./xmlquery  ICE_GRID		-value`;
my $NTASKS_ICE      = `./xmlquery  NTASKS_ICE		-value`;
#my $NINST_ICE       = `./xmlquery  NINST_ICE		-value`;
my $NINST_ICE       = 1; # Change if you want multiple instances... though this isn't coded yet.
my $RUNDIR          = `./xmlquery  RUNDIR		-value`;
my $STREAM_NAME     = 'streams.cice';

if (! -d "$CASEBUILD/mpas-ciceconf" ) {
    $sysmod = "mkdir $CASEBUILD/mpas-ciceconf";
    system($sysmod) == 0 or die "ERROR mpas-cice.buildnml: $sysmod failed: $?\n";
}

#--------------------------------------------------------------------
# Determine date stamp, from grid names
#--------------------------------------------------------------------

my $grid_date = '';
my $grid_prefix = '';
my $decomp_prefix = '';

if ( $ICE_GRID eq 'oEC60to30' ) {
	$grid_date .= '151020';
	$grid_prefix .= 'cice.EC60to30km';
	$decomp_prefix .= 'mpas-cice.graph.info.';
} elsif ( $ICE_GRID eq 'mpas120' ) {
	$grid_date .= '121116';
	$grid_prefix .= 'cice120km';
	$decomp_prefix .= 'mpas-cice.graph.info.';
} elsif ( $ICE_GRID eq 'mpasgx1' ) {
	$grid_date .= '121116';
	$grid_prefix .= 'grid_gx1';
	$decomp_prefix .= 'mpas-cice.graph.info.';
}

chdir "$CASEBUILD/mpas-ciceconf";

#--------------------------------------------------------------------
# Generate input data file
#--------------------------------------------------------------------

open(my $input_list, "+>", "$CASEBUILD/mpas-cice.input_data_list");
print $input_list "mesh = $DIN_LOC_ROOT/ice/mpas-cice/$ICE_GRID/$grid_prefix.$grid_date.nc\n";
#print $input_list "full_graph = $DIN_LOC_ROOT/ice/mpas-cice/$ICE_GRID/$decomp_prefix$grid_date\n";
print $input_list "graph$NTASKS_ICE = $DIN_LOC_ROOT/ice/mpas-cice/$ICE_GRID/$decomp_prefix$grid_date.part.$NTASKS_ICE\n";
close($input_list);

#--------------------------------------------------------------------
# Invoke mpas build-namelist - output will go in $CASEBUILD/mpas-ciceconf
#--------------------------------------------------------------------

my $inst_string;
my $inst_counter = 1;
while ($inst_counter <= $NINST_ICE) {

    # -----------------------------------------------------
    # determine instance string 
    # -----------------------------------------------------

    $inst_string = "";       
    if ($NINST_ICE > 1) {
		$inst_string = `printf _%04d $inst_counter`;

		# If multi-instance case does not have restart file, use single-case restart
		# for each instance
		if ( (! -e "$RUNDIR/rpointer.ice${inst_string}") && (-e "$RUNDIR/rpointer.ice") ) {
				$sysmod = "cp -v $RUNDIR/rpointer.ice $RUNDIR/rpointer.ice${inst_string}";
				system($sysmod) == 0 or die "ERROR mpas-cice.buildnml: $sysmod failed: $?\n";
		}
    }

    # -----------------------------------------------------
    # create mpas-ciceconf/cesm_namelist
    # -----------------------------------------------------

    SetupTools::create_namelist_infile("$CASEROOT", 
				       "$CASEROOT/user_nl_mpas-cice${inst_string}", 
				       "$CASEBUILD/mpas-ciceconf/cesm_namelist"); 

    # -----------------------------------------------------
    # call build-namelist- output will go in $CASEBUILD/mpas-ciceconf/mpas-cice_in
    # -----------------------------------------------------

    #$sysmod = "$CCSMROOT/components/mpas-cice/bld/build-namelist";
    #$sysmod = "$sysmod -infile $CASEBUILD/mpas-ciceconf/cesm_namelist";
    #$sysmod = "$sysmod -inputdata $CASEBUILD/mpas-cice.input_data_list";
    #$sysmod = "$sysmod -rundir $RUNDIR";
    #$sysmod = "$sysmod -caseroot $CASEROOT";
    #$sysmod = "$sysmod -scriptsroot $SCRIPTSROOT";
    #$sysmod = "$sysmod -inst_string \"$inst_string\"";
    #$sysmod = "$sysmod -namelist \"\&cice $CICE_NAMELIST_OPTS\/\" ";
    #$sysmod = "$sysmod -config config_cache.xml";

    $sysmod =  "$CCSMROOT/components/mpas-cice/bld/build-namelist";
	$sysmod .= " -infile $CASEBUILD/mpas-ciceconf/cesm_namelist";
	$sysmod .= " -caseroot $CASEROOT";
	$sysmod .= " -casebuild $CASEBUILD";
	$sysmod .= " -scriptsroot $SCRIPTSROOT";
	$sysmod .= " -inst_string '$inst_string'";
	$sysmod .= " -date_stamp '$grid_date'";
	$sysmod .= " -ice_grid '$ICE_GRID'";

    system($sysmod) == 0 or die "ERROR mpas-cice.buildnml: $sysmod failed: $?\n";

    # -----------------------------------------------------
    # Copy resolved namelist to $RUNDIR
    # -----------------------------------------------------

    my $default_in_filename = "mpas-cice_in";
    my $in_filename = "${default_in_filename}${inst_string}";
    if ( -d ${RUNDIR} ) {
	$sysmod = "cp $CASEBUILD/mpas-ciceconf/mpas-cice_in ${RUNDIR}/$in_filename";
	system($sysmod) == 0 or die "ERROR mpas-cice.buildnml: $sysmod failed: $?\n";
    }

    # -----------------------------------------------------
    # increment instance counter
    # -----------------------------------------------------

    $inst_counter = $inst_counter + 1;
}

# Write streams file if there isn't one in SourceMods

if ( -e "$CASEROOT/SourceMods/src.mpas-cice/$STREAM_NAME" ) {
	$sysmod = "cp $CASEROOT/SourceMods/src.mpas-cice/$STREAM_NAME $RUNDIR/$STREAM_NAME";
	system($sysmod) == 0 or die "ERROR mpas-cice.buildnml: $sysmod fails: $?\n";
} else {
	open(my $stream_file, "+>", "$RUNDIR/$STREAM_NAME");
	print $stream_file "<streams>\n";
	print $stream_file "\n";
	print $stream_file "<immutable_stream name=" . '"mesh"' . "\n";
	print $stream_file "                  type=" . '"none"' . "\n";
	print $stream_file "                  filename_template=" . '"mesh_variables.nc"' . "\n";
	print $stream_file "/>\n";

	print $stream_file "<immutable_stream name=" . '"input"' . "\n";
	print $stream_file "                  type=" . '"input"' . "\n";
	print $stream_file "                  filename_template=" . '"' 
						 . "$DIN_LOC_ROOT/ice/mpas-cice/$ICE_GRID/$grid_prefix.$grid_date.nc" 
						 . '"' . "\n";
	print $stream_file "                  filename_interval=" . '"none"' . "\n"; 
	print $stream_file "                  input_interval=" . '"initial_only"' . "\n"; 
	print $stream_file "/>\n";
	print $stream_file "\n";
	print $stream_file "<!--\n";
	print $stream_file "The restart stream is actually controlled via the coupler.\n";
	print $stream_file "Changing output_interval here will not have any affect on\n";
	print $stream_file "the frequency restart files are written.\n";
	print $stream_file "\n";
	print $stream_file "Changing the output_interval could cause loss of data.\n";
	print $stream_file "\n";
	print $stream_file "The output_interval is set to 1 second to ensure each restart frame has a\n";
	print $stream_file "unique file.\n";
	print $stream_file "-->\n";

	print $stream_file "<immutable_stream name=" . '"restart"' . "\n";
	print $stream_file "				 type=" . '"input;output"' . "\n";
	print $stream_file "				 filename_template=" . '"rst.ice.$Y-$M-$D_$h.$m.$s.nc"' . "\n";
	print $stream_file "				 filename_interval=" . '"output_interval"' . "\n";
	print $stream_file "				 reference_time=" . '"0000-01-01_00:00:00"' . "\n";
	print $stream_file "				 clobber_mode=" . '"truncate"'. "\n";
	print $stream_file "				 input_interval=" . '"initial_only"' ."\n";
	print $stream_file "				 output_interval=" . '"00-00-00_00:00:01"/>'. "\n";
	print $stream_file "\n";
	print $stream_file "<!--\n";
	print $stream_file "output is the main history output stream. You can add auxiliary streams to\n";
	print $stream_file "this stream to include more fields.\n";
	print $stream_file "-->\n";
	print $stream_file "\n";
	print $stream_file "<stream name=" . '"output"' . "\n";
	print $stream_file "		type=" . '"output"' . "\n";
	print $stream_file "		filename_template=" . '"hist.ice.$Y-$M-$D_$h.$m.$s.nc"'. "\n";
	print $stream_file "		filename_interval=" . '"01-00-00_00:00:00"' . "\n";
	print $stream_file "		reference_time=". '"0000-01-01_00:00:00"' . "\n";
	print $stream_file "		clobber_mode=". '"truncate"'. "\n";
	print $stream_file "		output_interval=" . '"00-01-00_00:00:00">' . "\n";
	print $stream_file "\n";
	print $stream_file "	<stream name=" . '"mesh"/>' . "\n";
	print $stream_file "    <var name=" . '"xtime"/>' . "\n";
	print $stream_file "    <var name=" . '"fVertex"/>' . "\n";
	print $stream_file "    <var name=" . '"uVelocity"/>' . "\n";
	print $stream_file "    <var name=" . '"vVelocity"/>' . "\n";
	print $stream_file "    <var name=" . '"stressDivergenceU"/>' . "\n";
	print $stream_file "    <var name=" . '"stressDivergenceV"/>' . "\n";
	print $stream_file "    <var name=" . '"uAirVelocity"/>' . "\n";
	print $stream_file "    <var name=" . '"vAirVelocity"/>' . "\n";
	print $stream_file "    <var name=" . '"uOceanVelocity"/>' . "\n";
	print $stream_file "    <var name=" . '"vOceanVelocity"/>' . "\n";
	print $stream_file "    <var name=" . '"oceanStressU"/>' . "\n";
	print $stream_file "    <var name=" . '"oceanStressV"/>' . "\n";
	print $stream_file "    <var name=" . '"oceanStressCoeff"/>' . "\n";
	print $stream_file "    <var name=" . '"iceAreaCategory"/>' . "\n";
	print $stream_file "    <var name=" . '"iceVolumeCategory"/>' . "\n";
	print $stream_file "    <var name=" . '"snowVolumeCategory"/>' . "\n";
	print $stream_file "    <var name=" . '"surfaceTemperature"/>' . "\n";
	print $stream_file "    <var name=" . '"iceAreaCell"/>' . "\n";
	print $stream_file "    <var name=" . '"iceAreaVertex"/>' . "\n";
	print $stream_file "    <var name=" . '"iceVolumeCell"/>' . "\n";
	print $stream_file "    <var name=" . '"totalMassCell"/>' . "\n";
	print $stream_file "    <var name=" . '"totalMassVertex"/>' . "\n";
	print $stream_file "    <var name=" . '"airStressCellU"/>' . "\n";
	print $stream_file "    <var name=" . '"airStressCellV"/>' . "\n";
	print $stream_file "    <var name=" . '"airStressVertexU"/>' . "\n";
	print $stream_file "    <var name=" . '"airStressVertexV"/>' . "\n";
	print $stream_file "    <var name=" . '"airTemperature"/>' . "\n";
	print $stream_file "    <var name=" . '"airPotentialTemperature"/>' . "\n";
	print $stream_file "    <var name=" . '"windSpeed"/>' . "\n";
	print $stream_file "    <var name=" . '"uAirStress"/>' . "\n";
	print $stream_file "    <var name=" . '"vAirStress"/>' . "\n";
	print $stream_file "    <var name=" . '"airDensity"/>' . "\n";
	print $stream_file "    <var name=" . '"airSpecificHumidity"/>' . "\n";
	print $stream_file "    <var name=" . '"shortwaveDown"/>' . "\n";
	print $stream_file "    <var name=" . '"longwaveDown"/>' . "\n";
	print $stream_file "    <var name=" . '"cloudFraction"/>' . "\n";
	print $stream_file "    <var name=" . '"rainfallRate"/>' . "\n";
	print $stream_file "    <var name=" . '"snowfallRate"/>' . "\n";
	print $stream_file "    <var name=" . '"sensibleTransferCoefficient"/>' . "\n";
	print $stream_file "    <var name=" . '"latentTransferCoefficient"/>' . "\n";
        print $stream_file "\n";
        print $stream_file "</stream>\n";
	print $stream_file "\n";
	print $stream_file "<!--\n";
	print $stream_file "Streams between this line and the auxiliary stream line below are analysis member streams.\n";
	print $stream_file "They can be used to perform online analysis of the simulation and control the output of\n";
	print $stream_file "the analysis data.\n";
	print $stream_file "-->\n";
	print $stream_file "\n";
	print $stream_file "<stream name=" . '"highFrequencyOutput"' . "\n";
	print $stream_file "		type=" . '"output"' . "\n";
	print $stream_file "		filename_template=" . '"analysis_members/cice_highFrequencyOutput.$Y-$M-$D.nc"'. "\n";
	print $stream_file "		filename_interval=" . '"01-00-00_00:00:00"' . "\n";
	print $stream_file "		reference_time=". '"0000-01-01_00:00:00"' . "\n";
	print $stream_file "		clobber_mode=". '"truncate"'. "\n";
	print $stream_file "		packages=". '"highFrequencyOutputAMPKG"'. "\n";
	print $stream_file "		output_interval=" . '"00-00-01_00:00:00">' . "\n";
	print $stream_file "\n";
	print $stream_file "	<stream name=" . '"mesh"/>' . "\n";
	print $stream_file "    <var name=" . '"xtime"/>' . "\n";
	print $stream_file "    <var name=" . '"iceAreaCellCategory1"/>' . "\n";
        print $stream_file "</stream>\n";
	print $stream_file "\n";
	print $stream_file "<stream name=" . '"regionalStatisticsOutput"' . "\n";
	print $stream_file "		type=" . '"output"' . "\n";
	print $stream_file "		filename_template=" . '"analysis_members/regionalStatistics.nc"'. "\n";
	print $stream_file "		filename_interval=" . '"none"' . "\n";
	print $stream_file "		clobber_mode=". '"replace_files"'. "\n";
	print $stream_file "		packages=". '"regionalStatisticsAMPKG"'. "\n";
	print $stream_file "		output_interval=" . '"00-00-00_01:00:00">' . "\n";
	print $stream_file "\n";
	print $stream_file "    <var name=" . '"xtime"/>' . "\n";
	print $stream_file "    <var name=" . '"totalIceArea"/>' . "\n";
	print $stream_file "    <var name=" . '"totalIceExtent"/>' . "\n";
	print $stream_file "    <var name=" . '"totalIceVolume"/>' . "\n";
	print $stream_file "    <var name=" . '"totalSnowVolume"/>' . "\n";
	print $stream_file "    <var name=" . '"totalKineticEnergy"/>' . "\n";
	print $stream_file "    <var name=" . '"rmsIceSpeed"/>' . "\n";
	print $stream_file "    <var name=" . '"averageAlbedo"/>' . "\n";
	print $stream_file "    <var name=" . '"maximumIceVolume"/>' . "\n";
	print $stream_file "    <var name=" . '"maximumIcePressure"/>' . "\n";
        print $stream_file "</stream>\n";
	print $stream_file "\n";
	print $stream_file "<stream name=" . '"conservationCheckOutput"' . "\n";
	print $stream_file "		type=" . '"output"' . "\n";
	print $stream_file "		filename_template=" . '"analysis_members/conservationCheck.nc"'. "\n";
	print $stream_file "		filename_interval=" . '"none"' . "\n";
	print $stream_file "		clobber_mode=". '"replace_files"'. "\n";
	print $stream_file "		packages=". '"conservationCheckAMPKG"'. "\n";
	print $stream_file "		output_interval=" . '"00-00-00_01:00:00">' . "\n";
	print $stream_file "\n";
	print $stream_file "    <var name=" . '"xtime"/>' . "\n";
	print $stream_file "    <var name=" . '"initialEnergy"/>' . "\n";
	print $stream_file "    <var name=" . '"finalEnergy"/>' . "\n";
	print $stream_file "    <var name=" . '"energyChange"/>' . "\n";
	print $stream_file "    <var name=" . '"netEnergyFlux"/>' . "\n";
	print $stream_file "    <var name=" . '"energyError"/>' . "\n";
	print $stream_file "    <var name=" . '"initialMass"/>' . "\n";
	print $stream_file "    <var name=" . '"finalMass"/>' . "\n";
	print $stream_file "    <var name=" . '"massChange"/>' . "\n";
	print $stream_file "    <var name=" . '"netMassFlux"/>' . "\n";
	print $stream_file "    <var name=" . '"massError"/>' . "\n";
	print $stream_file "    <var name=" . '"initialSalt"/>' . "\n";
	print $stream_file "    <var name=" . '"finalSalt"/>' . "\n";
	print $stream_file "    <var name=" . '"saltChange"/>' . "\n";
	print $stream_file "    <var name=" . '"netSaltFlux"/>' . "\n";
	print $stream_file "    <var name=" . '"saltError"/>' . "\n";
        print $stream_file "</stream>\n";
	print $stream_file "\n";
	print $stream_file "<!--\n";
	print $stream_file "All streams below this line are auxiliary streams. They are provided as\n";
	print $stream_file "groupings of fields that one might be interested in. You can either enable the\n";
	print $stream_file "stream to write a file for the fileds, or add the stream to another stream that\n";
	print $stream_file "will already be written.  \n";
	print $stream_file "-->\n";
	print $stream_file "</streams>\n";


}

exit (0);


