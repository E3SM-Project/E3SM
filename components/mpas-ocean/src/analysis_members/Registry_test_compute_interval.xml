	<nml_record name="AM_testComputeInterval" mode="forward;analysis">
		<nml_option name="config_AM_testComputeInterval_enable" type="logical" default_value=".false."
			description="If true, ocean analysis member test_compute_interval is called."
			possible_values=".true. or .false."
		/>
		<nml_option name="config_AM_testComputeInterval_compute_interval" type="character" default_value="00-00-01_00:00:00"
			description="Timestamp determining how often analysis member computation should be performed."
			possible_values="Any valid time stamp, 'dt', 'output_interval'"
		/>
		<nml_option name="config_AM_testComputeInterval_compute_on_startup" type="logical" default_value=".true."
			description="Logical flag determining if an analysis member computation occurs on start-up."
			possible_values=".true. or .false."
		/>
		<nml_option name="config_AM_testComputeInterval_write_on_startup" type="logical" default_value=".true."
			description="Logical flag determining if an analysis member write occurs on start-up."
			possible_values=".true. or .false."
		/>
		<nml_option name="config_AM_testComputeInterval_output_stream" type="character" default_value="testComputeIntervalOutput"
			description="Name of the stream that should be tied to the test_compute_interval analysis member"
			possible_values="Any existing stream name or 'none'"
		/>
	</nml_record>
	<packages>
		<package name="testComputeIntervalAMPKG" description="This package includes variables required for the testComputeIntervalAM analysis member."/>
	</packages>
	<var_struct name="testComputeIntervalAM" time_levs="1" packages="testComputeIntervalAMPKG">
		<var name="testComputeIntervalCounter" type="real" dimensions="Time"
			description="number of times test_compute_interval has been called"
		/>
	</var_struct>
	<streams>
		<stream name="testComputeIntervalOutput" type="output"
				mode="forward;analysis"
				filename_template="analysis_members/testComputeInterval.$Y-$M-$D.nc"
				filename_interval="01-00-00_00:00:00"
				output_interval="00-00-01_00:00:00"
				packages="testComputeIntervalAMPKG"
				clobber_mode="truncate"
				runtime_format="single_file">
			<var name="xtime"/>
			<var name="testComputeIntervalCounter"/>
		</stream>
	</streams>

