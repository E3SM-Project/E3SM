README file for the hopper-pgi build directory.

The cmake configure file hopper-pgi-cmake can be used to build parallel versions of
simple_glide and simple_bisicles, 2 programs that are part of CISM (the Community
Ice Sheet Model).  The PGI compiler suite is used for this build.  

Build Instructions:

Standard Build (uses Trilinos, builds simple_glide, doesn't build simple_bisicles):

In the builds/hopper-pgi directory, configure for the build using:

make clean
source hopper-pgi-cmake


The configuration process should complete with a final message:
-- Build files have been written to: <my_seacism_dir>/seacism/builds/hopper-pgi

The next step is to use the make program to do the build:
make -j 8

---------

In the file hopper-pgi-cmake, the first 4 lines of the cmake call can be modified
to configure different builds.  These lines are:
  -D NO_TRILINOS:BOOL=OFF \
  -D CISM_MPI_MODE:BOOL=ON \
  -D CISM_SERIAL_MODE:BOOL=OFF \
  -D BUILD_SIMPLE_BISICLES:BOOL=OFF \

For instance, to build simple_bisicles (and simple_glide), use:
  -D NO_TRILINOS:BOOL=ON \
  -D CISM_MPI_MODE:BOOL=ON \
  -D CISM_SERIAL_MODE:BOOL=OFF \
  -D BUILD_SIMPLE_BISICLES:BOOL=ON \

For a serial build of simple_glide, use:
  -D NO_TRILINOS:BOOL=ON \
  -D CISM_MPI_MODE:BOOL=OFF \
  -D CISM_SERIAL_MODE:BOOL=ON \
  -D BUILD_SIMPLE_BISICLES:BOOL=OFF \


Dependencies:
The packages this build depends on (Trilinos, BISICLES, and Chombo) have already
been built.  The paths to these packages can be found in hopper-pgi-cmake.

Testing:

simple_glide quick test:
In seacism/tests/higher-order/dome, do:
1) type dome.py, this will give a 'simple glide not found' error
2) qsub -I -V -q interactive -l mppwidth=4
3) aprun -n 4 ...hopper-config/example_drivers/simple_glide/src/simple_glide dome.9_5_2012.config


simple_bisicles quick test:
TBD.
