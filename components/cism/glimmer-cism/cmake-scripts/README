Here are collection of scripts that have been used successfully
to build simple_glide using the CMake build system instead of
autoconf. These build systems can live side-by-side.

In the top directory and some source directories, there are files
called  CMakeLists.txt (analagous to Makefile.am).

These scripts invoke the cmake command, which is analagous
to configure.

With CMake, the build is out-of-source. That means, the
*.o and *.mod files generated during compilation live in
the build tree and do not clutter the source tree (that 
comes from svn).

From the top seacism directory, make a build directory such
as  "build-pgi". Copy the appropriate cmake script into that
directory, modify paths to Trilinos and Netcdf if necessary.
Run the script, then run make. CMake handles dependencies
very well, so you can do   "make -j 8" for parallel 
compilation (where you can adjust 8 to the number of cores 
on the compile machine).

Many paths, flags, and settings are pulled from the installed 
Trilinos build. This keeps the glimmer cmake scripts small and
helps keep consistent versions of compilers, lapack, etc. 
A side-effect of this is that this build system only works
with builds against an installed Trilinos.

See document-cmake-options for a list of cmake "-D" options
recognized by the build system.

Four files in glimmer are autogenerated. The autogenerate-script
is invoked within the cmake configuration to create these files.

Andy, 6/1/2012, 6/22/2012
