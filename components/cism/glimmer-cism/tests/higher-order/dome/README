ho-other
========
This directory contains two Python scripts for running an experiment involving
an ice sheet with an parabolic "dome" shape on a flat base.  To run the
experiment, enter the following on a terminal command line:

For a serial job: python dome.py dome.config

For a parallel job: dome.py dome.config number_of_processors, for example:

dome.py dome.config 8 

... will run the test case on 8 processors.

Note that parallel support in the current "dome.py" script may be machine specific
and you may need to make minor alterations to the relevant lines of code there, 
e.g. grep for the phrase "MPI". Currently, the default for parallel runs uses "mpirun"
(e.g. as opposed to "aprun").

If you want to run in parallel, the configuration file and number of processors 
must be specified (but can be 1). If no parameters are specified, the code will 
run in serial using the 'dome.config' configuration file. Otherwise, it will run 
the script using the configuration file that you specify.

Unlike in previous releases, there is only one configuration file which uses
the Payne/Price higher-order dynamical core (the Pattyn/Bocek/Johnson higher-
order core, while still present in the code, is no longer supported).

If there are problems with running in serial on a multcore machine, try

dome.py dome.config 1 

The script performs the following three steps:
1. Create a netCDF input file for Glimmer.
2. Run Glimmer, creating a netCDF output file.
3. Move any additional files written by Glimmer to the "scratch" subdirectory.

The netCDF files are written in the "output" subdirectory. This is controlled
by a parameter in the configuration file so if you use your own configuration
file the output may be written elsewhere. The file "dome.config" includes the 
line:

[CF input]
name = output/dome.nc

and

[CF output]
name = output/dome.out.nc

which are what direct the output to the "output" subdirectory.

PREREQUISITES:
In order to use the dome.py script, you will need to have Python and one of the
following Python modules installed:
Scientific.IO.NetCDF, netCDF4, or pycdf

To view the results use ncview or another utility for viewing netCDF files.

WARNING: If you have files with names ending ".txt", ".log", or ".nc" in the
directory from which you are running dome.py they will get moved to the 
"scratch" subdirectory when you run dome.py.  In addition, if you use a
configuration file that specifies netCDF files (with names ending ".nc") are
to be written in the current directory, they will get moved to the "scratch"
subdirectory after they are written.

(last edited on 6-7-11 by SFP)
