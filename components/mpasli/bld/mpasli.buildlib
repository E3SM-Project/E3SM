#! /usr/bin/env perl
use strict;
use File::Compare;

my $component = "mpasli";
my $component_dir = "glc";
my $component_driver = "glc_cesm_driver";
my $core = "landice";
my $esm = "ACME";

if ($#ARGV == -1) {
    die " ERROR $component.buildlib: must specify a caseroot input argument";
}

my ($CASEROOT) = @ARGV;
chdir "${CASEROOT}";

my $CCSMROOT     = `./xmlquery CCSMROOT     -value`;
my $OBJROOT      = `./xmlquery OBJROOT      -value`;
my $CASEBUILD    = `./xmlquery CASEBUILD    -value`;
my $CASETOOLS    = `./xmlquery CASETOOLS    -value`;
my $OBJROOT      = `./xmlquery OBJROOT	    -value`;
my $LIBROOT      = `./xmlquery LIBROOT	    -value`;
my $GMAKE_J      = `./xmlquery GMAKE_J	    -value`;
my $GMAKE        = `./xmlquery GMAKE	    -value`;
my $MACH         = `./xmlquery MACH         -value`;
my $MPASLI_USE_ALBANY = `./xmlquery MPASLI_USE_ALBANY -value`;

#---------------------------------------------------------------------------
# Copy MPASLI source
#---------------------------------------------------------------------------

my $srccpy = "cp -fpR $CCSMROOT/components/$component/model/src/* $OBJROOT/$component_dir/source/.";
mkdir "$OBJROOT/$component_dir";
mkdir "$OBJROOT/$component_dir/source";
system($srccpy) == 0 or die "ERROR: $component.buildlib $srccpy failed: $?\n";

my $drvcpy = "cp -fpR $CCSMROOT/components/$component/driver ${OBJROOT}/$component_dir/source/$component_driver";
system($drvcpy) == 0 or die "ERROR: $component.buildlib $drvcpy failed: $?\n";

my $root_path = "$OBJROOT/$component_dir/source";

my $bldcmd = "cd $root_path; make all CORE=$core ESM=$esm DRIVER=$component_driver GEN_F90=true";
$bldcmd .= ' ROOT_DIR="';
$bldcmd .= "$root_path";
$bldcmd .= '"';

if ( $MACH eq "edison" ) {
	$bldcmd .= ' TOOL_TARGET_ARCH="-target-cpu=sandybridge"';
} elsif ( $MACH eq "titan" ) {
	$bldcmd .= ' TOOL_TARGET_ARCH="-target-cpu=istanbul"';
}

# Check for Albany build
if ( $MPASLI_USE_ALBANY eq "TRUE" ) {
        print "Building MPASLI with Albany support.\n";
        $bldcmd .= ' ALBANY=true';
        # Note MPAS_EXTERNAL_LIBS is not needed since ACME is doing the linking!
}

print "Compiling MPASLI with this command: $bldcmd \n";

system($bldcmd) == 0 or die "ERROR: $component.buildlib $bldcmd failed: $?\n";

my $cpyobjs = "find $root_path -name *.mod -exec cp -p {} $OBJROOT/$component_dir/obj/. \\\;";

system($cpyobjs) == 0 or die "ERROR: $component.buildlib $cpyobjs failed: $?\n";

my $cpylib = "cp -p $root_path/lib$component_dir.a ${LIBROOT}/lib$component_dir.a";

system($cpylib) == 0 or die "ERROR: $component.buildlib $cpylib failed: $?\n";
