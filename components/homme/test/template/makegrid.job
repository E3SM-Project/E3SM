#!/bin/tcsh -f 
#SBATCH -N 1
#SBATCH --account=FY127788
#SBATCH --time=0:10:00

set NCPU = 1
if ( ${?PBS_NODEFILE} ) then
    set NCPU = `wc $PBS_NODEFILE | awk '{print $1}' - `
endif
#@ NCPU /= 4
echo using NCPU = $NCPU
#
# Mark Taylor 2010
#
# generate template  files used for SCRIP/ESMF and interpic, and paraview metadata files
# HOMME is used to run a short (1 timestep) dummy simulation.  the output is then
# processed to NCO & NCL to produce:
#   
# for running CAM physics on GLL points:  (colocated)
#   ne$NEnp$NP_latlon.nc     template for interpic_new and paraview metadata
#   ne$NEnp$NP_scrip.nc      template for SCRIP/ESMF mapping utility
#
# for running CAM physics on CSLAM grid
#   ne$NEnc$NP_latlon.nc    template for interpic_new and paraview metadata
#   ne$NEnc$NP_scrip.nc     template for SCRIP/ESMF mapping utility
#                                  
#
#
# NE=240 runs in a few minutes.  needs 24 nodes, io_stride=8
#
# to plot the control volumes, see:   plotgrid.ncl
#
# GLL points within each element:
set NPTS = 4
# CSLAM points points within each element:
set NC = 4  
set ne = 0 ; 

set HOMME = ~/codes/homme  # path to HOMME code
#set MACH = $HOMME/cmake/machineFiles/redsky.cmake
#set MACH = $HOMME/cmake/machineFiles/climate.cmake
#set MACH = $HOMME/cmake/machineFiles/rhel5.cmake
#set MACH = $HOMME/cmake/machineFiles/darwin.cmake
if (! ${?MACH} ) then
   echo "edit this script to set MACH to your cmake machine file"
   exit 1
endif

set wdir = ~/scratch1

mkdir -p $wdir/preqx/template/movies
mkdir $wdir/preqx/vcoord
set bld = $wdir/preqx/bld
mkdir -p $bld
set wdir = $wdir/preqx/template
mkdir -p $wdir
set exe = preqx.template.nc$NC


set input = $HOMME/test/template
set output = jw_baroclinic1.nc


# have to run stable for 1 timestep:
set nu = 0
set tstep = 0.0001
set hypervis_subcycle = 1
set HYPERVIS_OPTS = 

if ( $ne == 0 ) then
#    set meshname = mountain_10_x2.g
#    set meshfile=$HOMME/test/mesh_refine/grids/$meshname

#    set meshname = kite_grid.g
#    set meshfile=$HOMME/test/mesh_refine/grids/$meshname

    set meshname = wpacific_v2.g
    set meshfile=~/work/notes/squadgen/multiscale/$meshname
else
   # UNIFORM grids
   set meshfile='none'
   set meshname = ne{$ne}np{$NPTS}   #eg  ne30np5
   set meshsub = ne{$ne}nc{$NC}    #eg  ne30nc4
endif




set nlev=20
set qsize = 0


set outnames = "'area','corners','hypervis'"
if ( $NPTS == 4 ) then
   # if NPTS=4, HOMME can compute cv_lat and cv_lon 
   set outnames = "$outnames,'cv_lat','cv_lon'"
endif
if ( $ne != 0 )  then
   # can compute CSLAM/physics grid
   set outnames = "$outnames,'phys_lat','phys_lon','phys_cv_lat','phys_cv_lon','phys_area'"
endif
echo $outnames

cd $bld
if (!( -f $exe )) then
    rm -rf CMakeFiles CMakeCache.txt
    cmake -C $MACH -DPREQX_PLEV=$nlev -DPREQX_USE_PIO=TRUE  -DPREQX_NP=$NPTS -DPREQX_NC=$NC  $HOMME 
    make -j4 clean
    make -j4 preqx
    mv src/preqx/preqx $exe
    exit
endif
#make -j4 preqx
#if ( $status ) exit
#mv src/preqx/preqx $exe

cd $wdir

rm -f $wdir/input.nl
sed s/NE/$ne/ $input/explicit20.nl.sed | sed s/TSTEP/$tstep/ |\
sed s:meshfile.\*:"mesh_file = '$meshfile'    $HYPERVIS_OPTS":   |\
sed s/qsize.\*/"qsize = $qsize"/   |\
sed s/nu=.\*/"nu=$nu"/   |\
sed s/hypervis_subcycle=.\*/"hypervis_subcycle=$hypervis_subcycle"/   |\
sed s/hypervis_subcycle_q.\*/"hypervis_subcycle_q=$hypervis_subcycle"/   |\
sed s/runtype.\*/"runtype = 0"/   |\
sed s/output_frequency.\*/"output_frequency = 1"/   |\
sed s:infilenames.\*:"infilenames='h0-tavg.nc'": |\
sed s:output_varnames1.\*:"output_varnames1=$outnames": \
> $wdir/input.nl

if ( $status ) exit

rsync -a $HOMME/test/vcoord/*ascii $wdir/../vcoord

set echo
rm -Rf $wdir/movies/jw*
mpirun  $bld/$exe < $wdir/input.nl
if ( $status ) exit





# the GLL interpIC template (and paraview metadata)
set echo
ncks -O -v lat,lon,corners,area movies/$output {$meshname}_tmp.nc
ncl $input/HOMME2META.ncl  name=\"$meshname\"  ne=$ne  np=$NPTS
ncl $input/addGLLmeta.ncl  name=\"$meshname\"  ne=$ne  np=$NPTS
rm -f {$meshname}_tmp.nc

if ( $NPTS == 4 ) then
   ncks -O -v lat,lon,area,cv_lat,cv_lon movies/$output {$meshname}_tmp.nc
   ncl $input/HOMME2SCRIP.ncl  name=\"$meshname\"  ne=$ne  np=$NPTS
   rm -f {$meshname}_tmp.nc
else
   ncks -O -v lat,lon,area movies/$output {$meshname}_tmp.nc
   ncl $input/HOMME2SCRIP.ncl  name=\"$meshname\"  ne=$ne  np=$NPTS
   rm -f {$meshname}_tmp.nc
endif


if ( ${?meshsub} ) then

# a subelement control volume interpIC template:
set echo
ncks -O -v phys_lat,phys_lon,phys_area movies/$output {$meshsub}_tmp.nc
ncrename -v phys_lat,lat {$meshsub}_tmp.nc
ncrename -v phys_lon,lon {$meshsub}_tmp.nc
ncrename -v phys_area,area {$meshsub}_tmp.nc
ncrename -d nphys,ncol {$meshsub}_tmp.nc
ncl $input/HOMME2META.ncl  name=\"$meshsub\"  ne=$ne
rm -f {$meshsub}_tmp.nc


# subelement ESMF/SCRIP template (still need phys_area)
ncks -O -v phys_area,phys_lat,phys_lon,phys_cv_lat,phys_cv_lon movies/$output {$meshsub}_tmp.nc
ncrename -v phys_area,area {$meshsub}_tmp.nc
ncrename -v phys_lat,lat {$meshsub}_tmp.nc
ncrename -v phys_lon,lon {$meshsub}_tmp.nc
ncrename -v phys_cv_lat,cv_lat {$meshsub}_tmp.nc
ncrename -v phys_cv_lon,cv_lon {$meshsub}_tmp.nc
ncl $input/HOMME2SCRIP.ncl  name=\"$meshsub\"  ne=$ne
rm -f {$meshsub}_tmp.nc

endif


# make hypervisocity grid plot:
# ncl $input/plot_hypervis.ncl


exit

set t1 = ${meshname}_latlon.nc
set t2 = ${meshname}_scrip.nc

rm -f $t1.out.new $t2.out.new
ncdump $t1 > $t1.out.new
diff  $t1.out.new $t1.out

ncdump $t2 > $t2.out.new
diff  $t2.out.new $t2.out


