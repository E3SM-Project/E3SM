{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"The Energy Exascale Earth System Model (E3SM)","text":"<p>The E3SM documentation is organized into sections for each component model and additional sections for shared tools and general guides.</p>"},{"location":"#component-models","title":"Component Models","text":"<ul> <li>EAM</li> <li>EAMxx</li> <li>ELM</li> <li>MOSART</li> </ul>"},{"location":"#tools","title":"Tools","text":"<ul> <li>generate_domain_files</li> </ul> <p>Please see Developing Docs to learn about how to contribute to the documentation.</p>"},{"location":"EAM/","title":"The E3SM Atmosphere Model (EAM)","text":"<p>EAM is the state-of-the-art atmospheric component of the E3SM model that uses a Spectral Element Dynamical Core and a suite of parameterizations to represent a range of atmospheric processes, which are described in the Technical Guide (see below). Its nominal resolution is roughly 100km in the horizontal, with a model time step of 1800 seconds, and runs with 80 layers in the vertical (model top of 60km).</p> <ul> <li>The EAM User Guide explains how to control EAM when its running within E3SM.</li> <li>The EAM Developer Guide explains EAM data structures and how to write new code.</li> <li>The EAM Technical Guide explains the science behind EAM's code</li> </ul>"},{"location":"EAM/dev-guide/","title":"EAM Developer Guide","text":"<p>coming soon.</p>"},{"location":"EAM/tech-guide/","title":"EAM Technical Guide","text":"<p>This Technical Guide describes the physics of version 3 of the E3SM Atmospheric Model</p>"},{"location":"EAM/tech-guide/#dynamics-and-physics","title":"Dynamics and Physics","text":"<ul> <li> <p>HOMME: Dynamical core.</p> </li> <li> <p>P3: Stratiform cloud microphysics scheme.</p> </li> <li> <p>CLUBB: Parameterization of subgrid-scale turbulence and clouds.</p> </li> <li> <p>Zhang-McFarlane: Deep convection parameterization.</p> </li> <li> <p>RRTMG: Parameterization of radiation.</p> </li> <li> <p>MAM: Primary parameterization schemes used to represent aerosols.</p> </li> <li> <p>VBS: Parameterization of secondary organic aerosols.</p> </li> <li> <p>Dust: Parameterization of dust emissions.</p> </li> <li> <p>OCEANFILMS: Parameterization of sea soray irganic aerosol emissions.</p> </li> <li> <p>chemUCI + Linoz v3: Interactive atmospheric chemistry packages.</p> </li> </ul>"},{"location":"EAM/tech-guide/#diagnostic-outputs","title":"Diagnostic outputs","text":"<ul> <li> <p>COSP: Scheme that allows the model to output satellite simulator output.</p> </li> <li> <p>ARM Diags: Diagnostic package that allows the model output to be compared against ARM measurements.</p> </li> </ul>"},{"location":"EAM/tech-guide/armdiags/","title":"ARM diagnostics","text":""},{"location":"EAM/tech-guide/armdiags/#overview","title":"Overview","text":"<p>The ARM data-oriented metrics and diagnostics package (ARM Diags) was developed to facilitate the use of ARM data in climate model evaluation and model intercomparison (Zhang et al., 2020)<sup>1</sup>. It includes ARM data sets, compiled from multiple ARM data products, and a Python-based analysis toolkit for computation ad visualization. It also includes simulation data from models participating the CMIP, which allows climate-modeling groups to compare a new, candidate version of their model to existing CMIP models. The ARM Diags has been applied in several model evaluation studies to help address a range of issues in climate models (Zheng et al., 2023;<sup>2</sup> Emmenegger et al., 2022;<sup>3</sup> Zhang et al., 2018<sup>4</sup>). The Majority of ARM Diags sets are ported into E3SM Diags (Zhang et al., 2022)<sup>5</sup> for routine evaluation of the model.</p>"},{"location":"EAM/tech-guide/armdiags/#to-enable-the-use-of-arm-diags","title":"To enable the use of ARM Diags","text":"<p>To enable using ARM Diags for a simulation, often, a new tape that output at high-frequency over limited-area (nearest grid box to supported ARM site) needs to be included in the namelist file, an example as follows:</p> <pre><code>fincl7 = 'PS','Q','T','Z3','CLOUD','CONCLD','CLDICE',\n   'CLDLIQ','FREQR','REI','REL','PRECT','TMQ','PRECC',\n   'TREFHT','QREFHT','OMEGA','CLDTOT','LHFLX','SHFLX',\n   'FLDS','FSDS','FLNS','FSNS','FLNSC','FSDSC','FSNSC',\n   'AODVIS','AODABS','LS_FLXPRC','LS_FLXSNW',\n   'LS_REFFRAIN','ZMFLXPRC','ZMFLXSNW','CCN1','CCN2',\n   'CCN3','CCN4','CCN5','num_a1','num_a2','num_a3',\n   'num_a4','so4_a1','so4_a2','so4_a3','AREL','TGCLDLWP',\n   'AQRAIN','ANRAIN','FREQR','PRECL','RELHUM'\nfincl7lonlat='262.5e_36.6n','203.4e_71.3n','147.4e_2.0s',\n   '166.9e_0.5s','130.9e_12.4s','331.97e_39.09n'\n</code></pre> <p>Note that in this example fincl7 should set to write output at hourly (<code>nhtfrq = -1</code>). And here additional variables are included for ARM simulator analysis. The ARM site information is shown below:</p> <pre><code>    \"sgpc1\": [\"97.5W 36.4N Oklahoma ARM\"],\n\n    \"nsac1\": [\"156.6W 71.3N Barrow ARM\"],\n\n    \"twpc1\": [\"147.4E 2.1S Manus ARM\"],\n\n    \"twpc2\": [\"166.9E 0.5S Nauru ARM\"],\n\n    \"twpc3\": [\"130.9E 12.4S Darwin ARM\"],\n\n    \"enac1\": [\"28.0E 39.1N Graciosa Island ARM\"], \n</code></pre>"},{"location":"EAM/tech-guide/armdiags/#diagnostics-and-metrics-currently-implemented-in-the-arm-diags","title":"Diagnostics and metrics currently implemented in the ARM Diags","text":"Statistical Metrics Variables Time sampling Line plots and Taylor diagrams for annual cycle variability of each variable Precipitation, column water vapor, surface energy budget components, near-surface temperature and specific humidity, surface pressure, total cloud fraction, and aerosol optical depth. Monthly mean Contour and vertical profiles of annual cycle and diurnal cycle of cloud fraction Vertical profiles of cloud fraction Hourly mean Line and harmonic dial plots of diurnal cycle of precipitation Surface precipitation rate Hourly mean Probability density function (PDF) plots of precipitation rate Surface precipitation rate Hourly mean CCN Annual Cycles CCN number concentrations at 0.1%, 0.2%, 0.5% and 1.0% supersaturation levels Hourly mean Aerosol Annual Cycles Total aerosol number concentration Hourly mean Aerosol Chemical Annual Cycles Organic, sulfate, nitrate, ammonium, chloride mass concentration Hourly mean Process-oriented metrics Variables Time sampling Convection Onset 1. Surface precipitation rate   2. Column Precipitable Water Vapor Hourly mean Aerosol-CCN Activation 1. Total aerosol number concentration   2. CCN number concentrations at different supersaturation levels (0.1%, 0.2%, 0.5% and 1.0) Hourly mean <ol> <li> <p>C. Zhang, S. Xie, C. Tao, S. Tang, T. Emmenegger, J. D. Neelin, K. A. Schiro, W. Lin, and Z. Shaheen. The ARM Data-Oriented Metrics and Diagnostics Package for Climate Models: A New Tool for Evaluating Climate Models with Field Data. Bulletin of the American Meteorological Society, 101(10):E1619\u2013E1627, October 2020. URL: https://journals.ametsoc.org/view/journals/bams/101/10/bamsD190282.xml (visited on 2024-03-29), doi:10.1175/BAMS-D-19-0282.1.\u00a0\u21a9</p> </li> <li> <p>Xiaojian Zheng, Cheng Tao, Chengzhu Zhang, Shaocheng Xie, Yuying Zhang, Baike Xi, and Xiquan Dong. Assessment of CMIP5 and CMIP6 AMIP Simulated Clouds and Surface Shortwave Radiation Using ARM Observations over Different Climate Regions. Journal of Climate, 36(24):8475\u20138495, November 2023. URL: https://journals.ametsoc.org/view/journals/clim/36/24/JCLI-D-23-0247.1.xml (visited on 2024-03-29), doi:10.1175/JCLI-D-23-0247.1.\u00a0\u21a9</p> </li> <li> <p>Todd Emmenegger, Yi-Hung Kuo, Shaocheng Xie, Chengzhu Zhang, Cheng Tao, and J. David Neelin. Evaluating Tropical Precipitation Relations in CMIP6 Models with ARM Data. Journal of Climate, 35(19):6343\u20136360, October 2022. URL: https://journals.ametsoc.org/view/journals/clim/35/19/JCLI-D-21-0386.1.xml (visited on 2024-03-29), doi:10.1175/JCLI-D-21-0386.1.\u00a0\u21a9</p> </li> <li> <p>Chengzhu Zhang, Shaocheng Xie, Stephen A. Klein, Hsi\u2010yen Ma, Shuaiqi Tang, Kwinten Van Weverberg, Cyril J. Morcrette, and Jon Petch. CAUSES: Diagnosis of the Summertime Warm Bias in CMIP5 Climate Models at the ARM Southern Great Plains Site. Journal of Geophysical Research: Atmospheres, 123(6):2968\u20132992, March 2018. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1002/2017JD027200 (visited on 2024-03-29), doi:10.1002/2017JD027200.\u00a0\u21a9</p> </li> <li> <p>Chengzhu Zhang, Jean-Christophe Golaz, Ryan Forsyth, Tom Vo, Shaocheng Xie, Zeshawn Shaheen, Gerald L. Potter, Xylar S. Asay-Davis, Charles S. Zender, Wuyin Lin, Chih-Chieh Chen, Chris R. Terai, Salil Mahajan, Tian Zhou, Karthik Balaguru, Qi Tang, Cheng Tao, Yuying Zhang, Todd Emmenegger, Susannah Burrows, and Paul A. Ullrich. The E3SM Diagnostics Package (E3SM Diags v2.7): a Python-based diagnostics package for Earth system model evaluation. Geoscientific Model Development, 15(24):9031\u20139056, December 2022. URL: https://gmd.copernicus.org/articles/15/9031/2022/ (visited on 2024-03-29), doi:10.5194/gmd-15-9031-2022.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAM/tech-guide/chemUCIlinozv3/","title":"chemUCI and Linoz","text":""},{"location":"EAM/tech-guide/chemUCIlinozv3/#overview","title":"Overview","text":"<p>Atmospheric interactive chemistry is handled by chemUCI (in the troposphere) and Linoz v3 (in the stratosphere). chemUCI consists of 28 advected tracers for the O3-CH4-HOx-NOx-NMVOCs chemistry. Compared to E3SMv2, the E3SMv3 linearized stratospheric chemistry scheme (Linoz v3) expends the interactive species to include O3, N2O, NOy, and CH4. The boundary between stratosphere and troposphere adopts the e90 tropopause algorithm.</p>"},{"location":"EAM/tech-guide/chemUCIlinozv3/#namelist-parameters","title":"Namelist parameters","text":"<p>chemUCI and Linoz Namelist Parameters</p>"},{"location":"EAM/tech-guide/clubb/","title":"Cloud Layers Unified By Binormals","text":""},{"location":"EAM/tech-guide/clubb/#overview","title":"Overview","text":"<p>The Cloud Layers Unified By Binormals (CLUBB) parameterization is a parameterization of subgrid-scale turbulence and clouds.<sup>1</sup><sup>2</sup><sup>3</sup><sup>4</sup> It prognoses turbulent fluxes of heat, moisture, and momentum, and it diagnoses the liquid cloud fraction and liquid water mixing ratio.  To do so, it prognoses higher-order turbulence moments and closes those prognostic equations by use of an assumed double-Gaussian shape of the subgrid probability density function.  CLUBB operates throughout the troposphere, but it contributes especially to the planetary boundary layer and low-cloud regimes, including stratocumulus and shallow cumulus regimes.  </p>"},{"location":"EAM/tech-guide/clubb/#namelist-parameters","title":"Namelist parameters","text":"<p>CLUBB Namelist Parameters</p> <ol> <li> <p>Vincent E. Larson. CLUBB-SILHS: A parameterization of subgrid variability in the atmosphere. March 2022. arXiv:1711.03675 [physics]. URL: http://arxiv.org/abs/1711.03675 (visited on 2024-03-29), doi:10.48550/arXiv.1711.03675.\u00a0\u21a9</p> </li> <li> <p>Peter A. Bogenschutz, Andrew Gettelman, Cecile Hannay, Vincent E. Larson, Richard B. Neale, Cheryl Craig, and Chih-Chieh Chen. The path to CAM6: coupled simulations with CAM5.4 and CAM5.5. Geoscientific Model Development, 11(1):235\u2013255, January 2018. URL: https://gmd.copernicus.org/articles/11/235/2018/ (visited on 2024-03-29), doi:10.5194/gmd-11-235-2018.\u00a0\u21a9</p> </li> <li> <p>Vincent E. Larson and Jean-Christophe Golaz. Using Probability Density Functions to Derive Consistent Closure Relationships among Higher-Order Moments. Monthly Weather Review, 133(4):1023\u20131042, April 2005. URL: https://journals.ametsoc.org/view/journals/mwre/133/4/mwr2902.1.xml (visited on 2024-03-29), doi:10.1175/MWR2902.1.\u00a0\u21a9</p> </li> <li> <p>Jean-Christophe Golaz, Vincent E. Larson, and William R. Cotton. A PDF-Based Model for Boundary Layer Clouds. Part I: Method and Model Description. Journal of the Atmospheric Sciences, 59(24):3540\u20133551, December 2002. URL: https://journals.ametsoc.org/view/journals/atsc/59/24/1520-0469_2002_059_3540_apbmfb_2.0.co_2.xml (visited on 2024-03-29), doi:10.1175/1520-0469(2002)059&lt;3540:APBMFB&gt;2.0.CO;2.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAM/tech-guide/cosp/","title":"Cloud Feedback Model Intercomparison Project (CFMIP) Observation Simulator Package","text":""},{"location":"EAM/tech-guide/cosp/#overview","title":"Overview","text":"<p>The Cloud Feedback Model Intercomparison Project (CFMIP) Observation Simulator Package (COSP; Bodas-Salcedo et al., 2011;<sup>1</sup> Swales et al., 2018;<sup>2</sup> Zhang et al., 2019;<sup>3</sup> Zhang et al., 2024<sup>4</sup>) was developed to improve the consistency between model clouds and satellite observations. COSP contains several independent satellite simulators for better comparing model clouds with satellite measurements collected by the International Satellite Cloud Climatology Project (ISCCP), the Moderate Resolution Imaging Spectroradiometer (MODIS), the Multi-angle Imaging SpectroRadiometer (MISR), Cloud-Aerosol Lidar and Infrared Pathfinder Satellite Observation (CALIPSO), and CloudSat. The use of satellite simulators will not only make a fairer comparison between model clouds and satellite data but also allow a more in-depth analysis of clouds. For example, clouds can be assessed in terms of their optical properties and vertical location, which dictate their radiative effects.</p>"},{"location":"EAM/tech-guide/cosp/#namelist-parameters","title":"Namelist parameters","text":"<p>COSP Namelist Parameters</p>"},{"location":"EAM/tech-guide/cosp/#to-turn-on-cosp-outputs","title":"To turn on COSP outputs","text":"<p>Run (add to the run script) the following command before running <code>./case.setup</code></p> <p><code>./xmlchange --id CAM_CONFIG_OPTS --append --val='-cosp'</code></p> Related Outputs Description <code>FISCCP1_COSP</code> Grid-box fraction covered by each ISCCP D level cloud type <code>CLMODIS</code> MODIS Cloud Area Fraction <code>CLD_MISR</code> Cloud Fraction from MISR Simulator <code>CLDTOT_CAL</code> Calipso Total Cloud Fraction <code>CLDHGH_CAL</code> Calipso High-level Cloud Fraction <code>CLDMED_CAL</code> Calipso Mid-level Cloud Fraction <code>CLDLOW_CAL</code> Calipso Low-level Cloud Fraction <code>CLD_CAL_TMPLIQ</code> Calipso Liquid Cloud Fraction as a function of temperature <code>CLD_CAL_TMPICE</code> Calipso Ice Cloud Fraction as a function of temperature <ol> <li> <p>A. Bodas-Salcedo, M. J. Webb, S. Bony, H. Chepfer, J.-L. Dufresne, S. A. Klein, Y. Zhang, R. Marchand, J. M. Haynes, R. Pincus, and V. O. John. COSP: Satellite simulation software for model assessment. Bulletin of the American Meteorological Society, 92(8):1023\u20131043, August 2011. URL: https://journals.ametsoc.org/doi/10.1175/2011BAMS2856.1 (visited on 2024-03-29), doi:10.1175/2011BAMS2856.1.\u00a0\u21a9</p> </li> <li> <p>Dustin J. Swales, Robert Pincus, and Alejandro Bodas-Salcedo. The Cloud Feedback Model Intercomparison Project Observational Simulator Package: Version 2. Geoscientific Model Development, 11(1):77\u201381, January 2018. URL: https://gmd.copernicus.org/articles/11/77/2018/ (visited on 2024-03-29), doi:10.5194/gmd-11-77-2018.\u00a0\u21a9</p> </li> <li> <p>Yuying Zhang, Shaocheng Xie, Wuyin Lin, Stephen A. Klein, Mark Zelinka, Po\u2010Lun Ma, Philip J. Rasch, Yun Qian, Qi Tang, and Hsi\u2010Yen Ma. Evaluation of Clouds in Version 1 of the E3SM Atmosphere Model With Satellite Simulators. Journal of Advances in Modeling Earth Systems, 11(5):1253\u20131268, May 2019. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2018MS001562 (visited on 2024-03-29), doi:10.1029/2018MS001562.\u00a0\u21a9</p> </li> <li> <p>Yuying Zhang, Shaocheng Xie, Yi Qin, Wuyin Lin, Jean-Christophe Golaz, Xue Zheng, Po-Lun Ma, Yun Qian, Qi Tang, Christopher R. Terai, and Meng Zhang. Understanding changes in cloud simulations from E3SM version 1 to version 2. Geoscientific Model Development, 17(1):169\u2013189, January 2024. URL: https://gmd.copernicus.org/articles/17/169/2024/ (visited on 2024-03-29), doi:10.5194/gmd-17-169-2024.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAM/tech-guide/dust/","title":"Dust aerosol","text":""},{"location":"EAM/tech-guide/dust/#overview","title":"Overview","text":"<p>Dust-related processes are represented in the E3SM atmosphere and land model components. In E3SMv3, dust deposition will also be coupled with the sea ice and ocean biogeochemistry in the ocean model. Total emission fluxes of dust particles are calculated at each model time step. A new dust emission scheme following Kok et al. (2014)<sup>1</sup> is implemented to E3SMv3, replacing the Zender scheme (Zender et al., 2003)<sup>2</sup> in E3SMv1 and v2 as the default option. The new dust emission scheme includes a time-varying soil erodibility factor for dust mobilization, and includes dust sources in high latitudes (e.g., &gt;60 degree N). A manuscript by Feng et al. is in prep to document the performance of the new emission scheme on dust life cycle and radiative effects in E3SMv3. Dust aerosol is represented in the accumulation and coarse aerosol modes of the MAM4 module following emission. Other dust properties such as optical properties and size distribution at emission are documented in Feng et al. (2022).<sup>3</sup></p>"},{"location":"EAM/tech-guide/dust/#namelist-parameters","title":"Namelist parameters","text":"<p>Dust Namelist Parameters</p> <ol> <li> <p>J. F. Kok, N. M. Mahowald, G. Fratini, J. A. Gillies, M. Ishizuka, J. F. Leys, M. Mikami, M.-S. Park, S.-U. Park, R. S. Van Pelt, and T. M. Zobeck. An improved dust emission model \u2013 Part 1: Model description and comparison against measurements. Atmospheric Chemistry and Physics, 14(23):13023\u201313041, December 2014. URL: https://acp.copernicus.org/articles/14/13023/2014/ (visited on 2024-03-29), doi:10.5194/acp-14-13023-2014.\u00a0\u21a9</p> </li> <li> <p>Charles S. Zender, Huisheng Bian, and David Newman. Mineral Dust Entrainment and Deposition (DEAD) model: Description and 1990s dust climatology. Journal of Geophysical Research: Atmospheres, 108(D14):2002JD002775, July 2003. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2002JD002775 (visited on 2024-03-29), doi:10.1029/2002JD002775.\u00a0\u21a9</p> </li> <li> <p>Y. Feng, H. Wang, P. J. Rasch, K. Zhang, W. Lin, Q. Tang, S. Xie, D. S. Hamilton, N. Mahowald, and H. Yu. Global Dust Cycle and Direct Radiative Effect in E3SM Version 1: Impact of Increasing Model Resolution. Journal of Advances in Modeling Earth Systems, 14(7):e2021MS002909, July 2022. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2021MS002909 (visited on 2024-03-29), doi:10.1029/2021MS002909.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAM/tech-guide/homme/","title":"High-Order Methods Modeling Environment","text":""},{"location":"EAM/tech-guide/homme/#overview","title":"Overview","text":"<p>EAM uses the a dynamical core (dycore) from the High Order Method Modeling Environment (HOMME).<sup>1</sup><sup>2</sup><sup>3</sup> The EAM dycore solves the atmospheric primitive equations governing the evolution of velocity, density, pressure and temperature, as well as the transport of water species and related hydrometers, aerosols and other atmospheric constituents.  The governing equations are written in a vertically lagrangian terrain following mass coordinate.  They are discretized with second order finite differences in the radial direction and spectral finite elements in the horizontal (surface of the sphere) directions, and advanced in time with a 3rd order accurate 5 stage Runge-Kutta method.  Dissipation is added through the use of monotoncity contraints on some advectiion terms, explicitly added hyperviscosity, and a Laplacian-based sponge layer in the first few layers at the model top.  The transported species  makes use of an efficient interpolatory semi-Lagrangian method.  EAMv3 uses 80 layers in the vertical.  The use of the spectral finite element method allows EAMv3 to run on fully unstructured grids, including the cubed-sphere grid (SE Atmosphere Grid Overview (EAM &amp; CAM)) which provides quasi-uniform resolution over the globe, and regionally refined meshes (RRM) which enhance horizontal resolution in regions of interest (Library of Regionally-Refined Model (RRM) Grids).</p>"},{"location":"EAM/tech-guide/homme/#namelist-parameters","title":"Namelist parameters","text":"<p>Many dynamical core parameters can not be changed independently.  For example, increasing the hyperviscosity coefficient may require reducing the hyperviscosity timestep.   Dycore timesteps are tuned for each resolution and the defaults are close to the CFL stability limit. For complete details, as well as their interactions, see EAM's HOMME dycore.</p> <p>HOMME Namelist Parameters</p> <ol> <li> <p>Mark A. Taylor and Aim\u00e9 Fournier. A compatible and conservative spectral element method on unstructured grids. Journal of Computational Physics, 229(17):5879\u20135895, August 2010. URL: https://linkinghub.elsevier.com/retrieve/pii/S0021999110001841 (visited on 2024-03-29), doi:10.1016/j.jcp.2010.04.008.\u00a0\u21a9</p> </li> <li> <p>O. Guba, M. A. Taylor, P. A. Ullrich, J. R. Overfelt, and M. N. Levy. The spectral element method on variable resolution grids: evaluating grid sensitivity and resolution-aware numerical viscosity. preprint, Numerical Methods, June 2014. URL: https://gmd.copernicus.org/preprints/7/4081/2014/gmdd-7-4081-2014.pdf (visited on 2024-03-29), doi:10.5194/gmdd-7-4081-2014.\u00a0\u21a9</p> </li> <li> <p>Mark A. Taylor, Oksana Guba, Andrew Steyer, Paul A. Ullrich, David M. Hall, and Christopher Eldred. An Energy Consistent Discretization of the Nonhydrostatic Equations in Primitive Variables. Journal of Advances in Modeling Earth Systems, 12(1):e2019MS001783, January 2020. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2019MS001783 (visited on 2024-03-29), doi:10.1029/2019MS001783.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAM/tech-guide/mam/","title":"Modal Aerosol Module","text":""},{"location":"EAM/tech-guide/mam/#mam5-overview","title":"MAM5 Overview","text":"<p>The Five-mode Modal Aerosol Model (MAM5) supersedes the MAM4 utilized in previous iterations of E3SM (E3SM-V1 and -V2). MAM5 introduces a fifth mode, specifically designed to represent stratospheric coarse mode aerosols, primarily originating from volcanic eruptions and DMS decomposition. This mode exclusively comprises sulfate aerosols, characterized by a smaller standard deviation (STD) value of 1.2. The STD value denotes the width of the aerosol mode, where a higher STD implies a greater gravitational settling effect (Wang et al., 2020;<sup>1</sup> Liu et al., 2012<sup>2</sup>). By setting the STD to 1.2, the simulated properties of volcanic aerosols align closely with observational findings (Mills et al., 2016).<sup>3</sup> MAM5 represents a pioneering aerosol model, effectively segregating tropospheric and stratospheric aerosols (Ke et al., in preparation), thereby mitigating the risk of overestimating dust and sea salt aerosols within the stratosphere in previous MAM4 (Visioni et al., 2021).<sup>4</sup> Volcanic eruptions derived from Neely and Schmidt (2016).<sup>5</sup></p>"},{"location":"EAM/tech-guide/mam/#mam4-overview","title":"MAM4 Overview","text":"<p>The representation of atmospheric aerosols and their roles in the Earth system by EAMv1/v2/v3 was inherited from the global aerosol-climate model EAMv0 and its four-mode modal aerosol module (MAM4), including Aitken, primary-carbon, accumulation, and coarse modes (Liu et al., 2016).<sup>6</sup> It treats a combination of processes, controlling the evolution of aerosols that are either directly emitted or converted from precursor gases from a variety of natural and anthropogenic sources. The processes include transport (by grid-scale wind, subgrid turbulence, convection, and sedimentation), aerosol microphysics (i.e., particle nucleation, condensation/evaporation of trace gases, aging, and coagulation), cloud processing (i.e., aqueous chemistry, scavenging by hydrometeors, resuspension from evaporating hydrometeors, and wet deposition), and dry deposition. Aerosol species in the original MAM4 (Liu et al., 2016)<sup>6</sup> include sulfate, primary organic aerosol (POA) or particulate organic matter (POM), secondary organic aerosol (SOA), black carbon (BC), sea salt, and mineral dust. As described by Wang et al. (2020),<sup>1</sup> the enhanced MAM4 in EAMv1/v2 added marine organic aerosol (MOA) to all four modes (Burrows et al., 2022).<sup>7</sup> In MAM4 of EAMv3, the Aitken mode has sulfate, sea salt, SOA and MOA; the primary-carbon mode has BC, POA and MOA; the accumulation and coarse modes include all seven species. Ammonium (NH4) and nitrate (NO3) aerosols are also explicitly treated in EAMv3 (Wu et al., 2022),<sup>8</sup> as an optional feature for research, in which new species (NH4, NO3, Ca, CO3, Na, Cl) are introduced to the Aitken, accumulation and coarse modes. All aerosol species within each of the four individual modes the MAM4 is assumed to be internally mixed and represented by a single number concentration, while particles are externally mixed among the different modes.</p>"},{"location":"EAM/tech-guide/mam/#sea-salt","title":"Sea salt","text":"<p>In MAM4, sea salt aerosol is represented in the Aitken, accumulation, and coarse mode with particle emission size (diameter) ranges of 0.02-0.08, 0.08-1.0, and 1.0-10.0 \u03bcm, respectively. The emission flux of natural sea salt is first divided into 31 size bins, following the parameterization of M\u00e5rtensson et al. (2003)<sup>9</sup> and Monahan et al. (1986),<sup>10</sup> and then redistributed to the three MAM4 size modes.</p>"},{"location":"EAM/tech-guide/mam/#namelist-parameters","title":"Namelist parameters","text":"<p>MAM Namelist Parameters</p> <ol> <li> <p>Hailong Wang, Richard C. Easter, Rudong Zhang, Po\u2010Lun Ma, Balwinder Singh, Kai Zhang, Dilip Ganguly, Philip J. Rasch, Susannah M. Burrows, Steven J. Ghan, Sijia Lou, Yun Qian, Yang Yang, Yan Feng, Mark Flanner, L. Ruby Leung, Xiaohong Liu, Manish Shrivastava, Jian Sun, Qi Tang, Shaocheng Xie, and Jin\u2010Ho Yoon. Aerosols in the E3SM Version 1: New Developments and Their Impacts on Radiative Forcing. Journal of Advances in Modeling Earth Systems, 12(1):e2019MS001851, January 2020. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2019MS001851 (visited on 2024-03-29), doi:10.1029/2019MS001851.\u00a0\u21a9\u21a9</p> </li> <li> <p>X. Liu, R. C. Easter, S. J. Ghan, R. Zaveri, P. Rasch, X. Shi, J.-F. Lamarque, A. Gettelman, H. Morrison, F. Vitt, A. Conley, S. Park, R. Neale, C. Hannay, A. M. L. Ekman, P. Hess, N. Mahowald, W. Collins, M. J. Iacono, C. S. Bretherton, M. G. Flanner, and D. Mitchell. Toward a minimal representation of aerosols in climate models: description and evaluation in the Community Atmosphere Model CAM5. Geoscientific Model Development, 5(3):709\u2013739, May 2012. URL: https://gmd.copernicus.org/articles/5/709/2012/ (visited on 2024-03-29), doi:10.5194/gmd-5-709-2012.\u00a0\u21a9</p> </li> <li> <p>Michael J. Mills, Anja Schmidt, Richard Easter, Susan Solomon, Douglas E. Kinnison, Steven J. Ghan, Ryan R. Neely, Daniel R. Marsh, Andrew Conley, Charles G. Bardeen, and Andrew Gettelman. Global volcanic aerosol properties derived from emissions, 1990\u20132014, using CESM1(WACCM). Journal of Geophysical Research: Atmospheres, 121(5):2332\u20132348, March 2016. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1002/2015JD024290 (visited on 2024-04-25), doi:10.1002/2015JD024290.\u00a0\u21a9</p> </li> <li> <p>Daniele Visioni, Simone Tilmes, Charles Bardeen, Michael Mills, Douglas G. MacMartin, Ben Kravitz, and Jadwiga H. Richter. Limitations of assuming internal mixing between different aerosol species: a case study with sulfate geoengineering simulations. Atmospheric Chemistry and Physics, 22(3):1739\u20131756, February 2022. URL: https://acp.copernicus.org/articles/22/1739/2022/ (visited on 2024-04-25), doi:10.5194/acp-22-1739-2022.\u00a0\u21a9</p> </li> <li> <p>R. R. Neely III and A. Schmidt. VolcanEESM: Global volcanic sulphur dioxide (SO2) emissions database from 1850 to present - Version 1.0. 2016. URL: https://catalogue.ceda.ac.uk/uuid/a8a7e52b299a46c9b09d8e56b283d385 (visited on 2024-04-25), doi:10.5285/76EBDC0B-0EED-4F70-B89E-55E606BCD568.\u00a0\u21a9</p> </li> <li> <p>X. Liu, P.-L. Ma, H. Wang, S. Tilmes, B. Singh, R. C. Easter, S. J. Ghan, and P. J. Rasch. Description and evaluation of a new four-mode version of the Modal Aerosol Module (MAM4) within version 5.3 of the Community Atmosphere Model. Geoscientific Model Development, 9(2):505\u2013522, February 2016. URL: https://gmd.copernicus.org/articles/9/505/2016/ (visited on 2024-03-29), doi:10.5194/gmd-9-505-2016.\u00a0\u21a9\u21a9</p> </li> <li> <p>Susannah M. Burrows, Richard C. Easter, Xiaohong Liu, Po-Lun Ma, Hailong Wang, Scott M. Elliott, Balwinder Singh, Kai Zhang, and Philip J. Rasch. OCEANFILMS (Organic Compounds from Ecosystems to Aerosols: Natural Films and Interfaces via Langmuir Molecular Surfactants) sea spray organic aerosol emissions \u2013 implementation in a global climate model and impacts on clouds. Atmospheric Chemistry and Physics, 22(8):5223\u20135251, April 2022. URL: https://acp.copernicus.org/articles/22/5223/2022/ (visited on 2024-03-29), doi:10.5194/acp-22-5223-2022.\u00a0\u21a9</p> </li> <li> <p>Mingxuan Wu, Hailong Wang, Richard C. Easter, Zheng Lu, Xiaohong Liu, Balwinder Singh, Po\u2010Lun Ma, Qi Tang, Rahul A. Zaveri, Ziming Ke, Rudong Zhang, Louisa K. Emmons, Simone Tilmes, Jack E. Dibb, Xue Zheng, Shaocheng Xie, and L. Ruby Leung. Development and Evaluation of E3SM\u2010MOSAIC: Spatial Distributions and Radiative Effects of Nitrate Aerosol. Journal of Advances in Modeling Earth Systems, 14(11):e2022MS003157, November 2022. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2022MS003157 (visited on 2024-03-29), doi:10.1029/2022MS003157.\u00a0\u21a9</p> </li> <li> <p>E. M. M\u00e5rtensson, E. D. Nilsson, G. De Leeuw, L. H. Cohen, and H.\u2010C. Hansson. Laboratory simulations and parameterization of the primary marine aerosol production. Journal of Geophysical Research: Atmospheres, 108(D9):2002JD002263, May 2003. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2002JD002263 (visited on 2024-03-29), doi:10.1029/2002JD002263.\u00a0\u21a9</p> </li> <li> <p>E. C. Monahan, D. E. Spiel, and K. L. Davidson. A Model of Marine Aerosol Generation Via Whitecaps and Wave Disruption. In Edward C. Monahan and Gear\u00f3id Mac Niocaill, editors, Oceanic Whitecaps: And Their Role in Air-Sea Exchange Processes, pages 167\u2013174. Springer Netherlands, Dordrecht, 1986. URL: https://doi.org/10.1007/978-94-009-4668-2_16 (visited on 2024-03-29), doi:10.1007/978-94-009-4668-2_16.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAM/tech-guide/oceanfilms/","title":"OCEANFILMS","text":""},{"location":"EAM/tech-guide/oceanfilms/#overview","title":"Overview","text":"<p>E3SM (v1-v3) uses the OCEANFILMS (Organic Compounds from Ecosystems to Aerosols: Natural Films and Interfaces via Langmuir Molecular Surfactants) parameterization to represent sea spray organic aerosol emissions.  OCEANFILMS is a physically based model that links sea spray chemistry with ocean biogeochemistry using a Langmuir partitioning approach.  The underlying physical assumptions and parameterization are described in Burrows et al. (2014);<sup>1</sup> the implementation in E3SM and impact on clouds and climate are documented in Burrows et al. (2022).<sup>2</sup></p>"},{"location":"EAM/tech-guide/oceanfilms/#namelist-parameters","title":"Namelist parameters","text":"<p>OCEANFILMS Namelist Parameters</p> <ol> <li> <p>S. M. Burrows, O. Ogunro, A. A. Frossard, L. M. Russell, P. J. Rasch, and S. M. Elliott. A physically based framework for modeling the organic fractionation of sea spray aerosol from bubble film Langmuir equilibria. Atmospheric Chemistry and Physics, 14(24):13601\u201313629, December 2014. URL: https://acp.copernicus.org/articles/14/13601/2014/ (visited on 2024-03-29), doi:10.5194/acp-14-13601-2014.\u00a0\u21a9</p> </li> <li> <p>Susannah M. Burrows, Richard C. Easter, Xiaohong Liu, Po-Lun Ma, Hailong Wang, Scott M. Elliott, Balwinder Singh, Kai Zhang, and Philip J. Rasch. OCEANFILMS (Organic Compounds from Ecosystems to Aerosols: Natural Films and Interfaces via Langmuir Molecular Surfactants) sea spray organic aerosol emissions \u2013 implementation in a global climate model and impacts on clouds. Atmospheric Chemistry and Physics, 22(8):5223\u20135251, April 2022. URL: https://acp.copernicus.org/articles/22/5223/2022/ (visited on 2024-03-29), doi:10.5194/acp-22-5223-2022.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAM/tech-guide/p3/","title":"Predicted Particle Properties","text":""},{"location":"EAM/tech-guide/p3/#overview","title":"Overview","text":"<p>The stratiform cloud microphysics scheme in v3 is Predicted Particle Properties (P3; Morrison &amp; Milbrandt, 2015;<sup>1</sup> Milbrandt &amp; Morrison, 2016<sup>2</sup>). P3 offers a new approach to representing the evolution of ice particles that is more physical than the traditional approach of using predefined ice categories. It has been implemented in E3SM (Wang et al., 2021)<sup>3</sup> to address the limitations in the original microphysics scheme- the lack of riming particles and the artificial conversion between ice crystals and snow particles. The current version in E3SM is a two-moment scheme with a single ice category (Morrison &amp; Milbrandt, 2015).<sup>1</sup> In addition to the total ice number and mass mixing ratios, P3 prognoses the rimed mass and rimed volume mixing ratios, which allows for the prediction of the continuous evolution of the rime fraction and particle density. It is worth noting that the ice nucleation parameterizations are changed to be aerosol-dependent in this study, with the heterogenous ice nucleation parameterizations from the Classical Nucleation Theory (Liu et al., 2012)<sup>4</sup> and the homogenous in-situ cirrus formation based on Liu and Penner (2005).<sup>5</sup> This differs from the P3 used in WRF and that used in the E3SM v1 in Wang et al. (2021)<sup>3</sup> where the heterogeneous ice nucleation parameterizations are temperature dependent only.</p>"},{"location":"EAM/tech-guide/p3/#namelist-parameters","title":"Namelist parameters","text":"<p>P3 Namelist Parameters</p> <ol> <li> <p>Hugh Morrison and Jason A. Milbrandt. Parameterization of Cloud Microphysics Based on the Prediction of Bulk Ice Particle Properties. Part I: Scheme Description and Idealized Tests. Journal of the Atmospheric Sciences, 72(1):287\u2013311, January 2015. URL: https://journals.ametsoc.org/view/journals/atsc/72/1/jas-d-14-0065.1.xml (visited on 2024-03-29), doi:10.1175/JAS-D-14-0065.1.\u00a0\u21a9\u21a9</p> </li> <li> <p>J. A. Milbrandt and H. Morrison. Parameterization of Cloud Microphysics Based on the Prediction of Bulk Ice Particle Properties. Part III: Introduction of Multiple Free Categories. Journal of the Atmospheric Sciences, 73(3):975\u2013995, March 2016. URL: https://journals.ametsoc.org/view/journals/atsc/73/3/jas-d-15-0204.1.xml (visited on 2024-03-29), doi:10.1175/JAS-D-15-0204.1.\u00a0\u21a9</p> </li> <li> <p>Jingyu Wang, Jiwen Fan, Zhe Feng, Kai Zhang, Erika Roesler, Benjamin Hillman, Jacob Shpund, Wuyin Lin, and Shaocheng Xie. Impact of a New Cloud Microphysics Parameterization on the Simulations of Mesoscale Convective Systems in E3SM. Journal of Advances in Modeling Earth Systems, 13(11):e2021MS002628, November 2021. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2021MS002628 (visited on 2024-03-29), doi:10.1029/2021MS002628.\u00a0\u21a9\u21a9</p> </li> <li> <p>X. Liu, R. C. Easter, S. J. Ghan, R. Zaveri, P. Rasch, X. Shi, J.-F. Lamarque, A. Gettelman, H. Morrison, F. Vitt, A. Conley, S. Park, R. Neale, C. Hannay, A. M. L. Ekman, P. Hess, N. Mahowald, W. Collins, M. J. Iacono, C. S. Bretherton, M. G. Flanner, and D. Mitchell. Toward a minimal representation of aerosols in climate models: description and evaluation in the Community Atmosphere Model CAM5. Geoscientific Model Development, 5(3):709\u2013739, May 2012. URL: https://gmd.copernicus.org/articles/5/709/2012/ (visited on 2024-03-29), doi:10.5194/gmd-5-709-2012.\u00a0\u21a9</p> </li> <li> <p>Xiaohong Liu and Joyce E. Penner. Ice nucleation parameterization for global models. Meteorologische Zeitschrift, pages 499\u2013514, September 2005. URL: https://www.schweizerbart.de/papers/metz/detail/14/54281/Ice_nucleation_parameterization_for_global_models (visited on 2024-03-29), doi:10.1127/0941-2948/2005/0059.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAM/tech-guide/rrtmg/","title":"Rapid Radiative Transfer Model for GCMs","text":""},{"location":"EAM/tech-guide/rrtmg/#overview","title":"Overview","text":"<p>The calculation of radiative energy flux through the atmosphere is done using the RRTMG radiation package (Iacono et al., 2008;<sup>1</sup> Mlawer et al., 1997<sup>2</sup>). The details are consistent with the implementation in CAM5 described in Neale et al. (2012).<sup>3</sup> Radiative fluxes are broadly split into shortwave and longwave and computed by separate codes. The shortwave solver uses the 2-stream approximation, while the longwave is an absorption/emission code. Both shortwave and longwave use the correlated k-distribution method for integration of fluxes. Subgrid cloud overlap is accounted for using the Monte Carlo Independent Column Approximation (MCICA; Pincus and Morcrette, 2003),<sup>4</sup> assuming the cloudy portions of the column are maximally overlapped in vertically contiguous layers and randomly overlapped when two layers are separated by a completely clear layer. Cloud optics are parameterized as described in Neale et al.(2010).<sup>3</sup></p>"},{"location":"EAM/tech-guide/rrtmg/#namelist-parameters","title":"Namelist parameters","text":"<p>RRTMG Namelist Parameters</p> <ol> <li> <p>Michael J. Iacono, Jennifer S. Delamere, Eli J. Mlawer, Mark W. Shephard, Shepard A. Clough, and William D. Collins. Radiative forcing by long\u2010lived greenhouse gases: Calculations with the AER radiative transfer models. Journal of Geophysical Research: Atmospheres, 113(D13):2008JD009944, July 2008. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2008JD009944 (visited on 2024-03-29), doi:10.1029/2008JD009944.\u00a0\u21a9</p> </li> <li> <p>Eli J. Mlawer, Steven J. Taubman, Patrick D. Brown, Michael J. Iacono, and Shepard A. Clough. Radiative transfer for inhomogeneous atmospheres: RRTM, a validated correlated\u2010k model for the longwave. Journal of Geophysical Research: Atmospheres, 102(D14):16663\u201316682, July 1997. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/97JD00237 (visited on 2024-03-29), doi:10.1029/97JD00237.\u00a0\u21a9</p> </li> <li> <p>Richard B. Neale, Andrew Gettelman, Sungsu Park, Chih-Chieh Chen, Peter H. Lauritzen, David L. Williamson, Andrew J. Conley, Doug Kinnison, Dan Marsh, Anne K. Smith, Francis M. Vitt, Rolando Garcia, Jean-Francois Lamarque, Michael J. Mills, Simone Tilmes, Hugh Morrison, Philip Cameron-Smith, William D. Collins, Michael J. Iacono, Richard C. Easter, Xiaohong Liu, Steven J. Ghan, Philip J. Rasch, and Mark A. Taylor. Description of the NCAR Community Atmosphere Model (CAM 5.0). UNKNOWN, 2012. URL: https://opensky.ucar.edu/islandora/object/technotes%3A594/ (visited on 2024-04-25), doi:10.5065/wgtk-4g06.\u00a0\u21a9\u21a9</p> </li> <li> <p>Robert Pincus, Howard W. Barker, and Jean\u2010Jacques Morcrette. A fast, flexible, approximate technique for computing radiative transfer in inhomogeneous cloud fields. Journal of Geophysical Research: Atmospheres, 108(D13):2002JD003322, July 2003. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2002JD003322 (visited on 2024-03-29), doi:10.1029/2002JD003322.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAM/tech-guide/vbs/","title":"Volatility Basis Set (VBS) approach for SOA","text":""},{"location":"EAM/tech-guide/vbs/#overview","title":"Overview","text":"<p>A modified volatility basis set (VBS) approach is used for both SOA precursor gases and particulate SOA that includes gas\u2010phase functionalization/fragmentation and particle\u2010phase oligomerization similar to FragNVSOA configuration of Shrivastava et al. (2015).<sup>1</sup> It includes a detailed treatment of SOA precursor gas chemistry including multigenerational aging via fragmentation and functionalization reactions, particle\u2010phase oligomerization that generates low \u201ceffective volatility\u201d SOA, and particle\u2010phase loss by photolysis. The sources of SOA include natural biogenic, anthropogenic and biomass burning organic gases that are oxidized to form lower volatility species and undergo dynamic gas-particle partitioning to form SOA. Biogenic SOA is formed by oxidation of isoprene (ISOP_VBS) and monoterpene (C10H16) volatile organic compounds (VOCs). Emissions of anthropogenic and biomass burning organic gases in the range of intermediate volatility organics (IVOCs, referred to as SOAG0) are estimated as total primary organic matter (POM) emitted from these sources multiplied by specified tunable factors. IVOCs undergo multigenerational aging with OH radicals forming SOA corresponding to anthropogenic and biomass burning sources. Photolysis of SOA is included as a chemical sink in the particle phase, in addition to dry and wet removal sinks. The photolysis rate constant of particle-phase SOA is assumed to be 0.04% of typical NO2 photolysis frequencies following Hodzic et al. (2016).<sup>2</sup> The emissions of VBS SOA related gas species and oxidants (prescribed) read from a file are documented in the User Guide.</p> <ol> <li> <p>Manish Shrivastava, Richard C. Easter, Xiaohong Liu, Alla Zelenyuk, Balwinder Singh, Kai Zhang, Po\u2010Lun Ma, Duli Chand, Steven Ghan, Jose L. Jimenez, Qi Zhang, Jerome Fast, Philip J. Rasch, and Petri Tiitta. Global transformation and fate of SOA: Implications of low\u2010volatility SOA and gas\u2010phase fragmentation reactions. Journal of Geophysical Research: Atmospheres, 120(9):4169\u20134195, May 2015. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1002/2014JD022563 (visited on 2024-03-29), doi:10.1002/2014JD022563.\u00a0\u21a9</p> </li> <li> <p>Alma Hodzic, Prasad S. Kasibhatla, Duseong S. Jo, Christopher D. Cappa, Jose L. Jimenez, Sasha Madronich, and Rokjin J. Park. Rethinking the global secondary organic aerosol (SOA) budget: stronger production, faster removal, shorter lifetime. Atmospheric Chemistry and Physics, 16(12):7917\u20137941, June 2016. URL: https://acp.copernicus.org/articles/16/7917/2016/ (visited on 2024-03-29), doi:10.5194/acp-16-7917-2016.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAM/tech-guide/zm/","title":"Zhang and McFarlane deep convection scheme","text":""},{"location":"EAM/tech-guide/zm/#overview","title":"Overview","text":"<p>The ZM scheme (Zhang and McFarlane, 1995)<sup>1</sup> used in E3SMv3 is a bulk mass flux-type scheme; it has three components: a trigger for convection initiation, a cloud model including both updrafts and downdrafts, and a closure. The original CAPE-based trigger for convection was replaced by a trigger function based on dynamic CAPE generation by Xie et al. (2019)<sup>2</sup> (see dCAPE-ULL description below for more details). The closure predicts cloud base mass flux using dilute CAPE (Neale et al., 2008).<sup>3</sup> The updraft model is a bulk entraining plume model. Both updrafts and downdrafts are assumed saturated, with downdraft mass flux at the downdraft initiation level set proportional to the updraft cloud base mass flux. The microphysical processes inside the updrafts are represented by a convective microphysics scheme (see ZM convective microphysics description below). An additional adjustment is made to cloud base mass flux to incorporate the effect of large-scale circulation (see mass flux adjustment description below).</p>"},{"location":"EAM/tech-guide/zm/#dcape-ull","title":"dCAPE-ULL","text":"<p>A notable update related to clouds and precipitation in E3SMv2 is the use of a new convective trigger function described by Xie et al. (2019)<sup>2</sup> in ZM to improve the simulation of precipitation and its diurnal cycle. The new convective trigger named as dCAPE-ULL uses the dynamic CAPE (dCAPE) trigger developed by Xie and Zhang (2000)<sup>4</sup> with an unrestricted air parcel launch level (ULL) approach used by Wang et al. (2015).<sup>5</sup> It was designed to address the unrealistically strong coupling of convection to the surface heating in ZM that often results in unrealistically too active model convection during the day in summer season over lands and improve the model capability to capture mid-level convection for nocturnal precipitation.</p>"},{"location":"EAM/tech-guide/zm/#zm-convective-microphysics","title":"ZM convective microphysics","text":"<p>The convective microphysics scheme is based on the work of Song and Zhang (2011)<sup>6</sup> to improve the representation of microphysical processes in convective clouds and their interaction with aerosol and stratiform clouds in GCMs. It explicitly treats the mass mixing ratio and number concentration of five hydrometeor species (cloud water, cloud ice, rain, snow, and graupel). The scheme is linked to stratiform cloud microphysics parameterization through convective detrainment of cloud liquid/ice water content and droplet/crystal number concentration, and to aerosols through cloud droplet activation and ice nucleation processes. Previous evaluations of the scheme showed that it improved the simulation of convective cloud properties and cloud hydrological cycle (Song et al., 2012;<sup>7</sup> Storer et al., 2015<sup>8</sup>). The assessment demonstrates that the convective microphysics scheme not only significantly improves the simulation of tropical variability across multiple scales but also enhances the simulation of climatological mean states.</p>"},{"location":"EAM/tech-guide/zm/#mass-flux-adjustment","title":"Mass flux adjustment","text":"<p>The convective mass flux adjustment (MAdj) is designed to represent the dynamical effects of large-scale vertical motion on convection. With MAdj, convection is enhanced (suppressed) when there is large-scale ascending (descending) motion at the planetary boundary layer top. The coupling of convection with the large-scale circulation significantly improves the simulation of climate variability across multiple scales from diurnal cycle, convectively coupled equatorial waves, to Madden-Julian oscillations (Song et al., 2023).<sup>9</sup></p>"},{"location":"EAM/tech-guide/zm/#mcsp","title":"MCSP","text":"<p>Due to inadequate model resolution, organized mesoscale convection cannot be resolved in general circulation models and thus needs to be parameterized. The Multiscale Coherent Structure Parameterization (MCSP) aims at representing the dynamical and physical effects of organized mesoscale convection.</p> <p>MCSP applies a sinusoidal baroclinic profile in the temperature, moisture, and momentum fields to represent the impact. Moncrieff et al. (2017)<sup>10</sup> and Chen et al. (2021)<sup>11</sup> have found that by adding MCSP, the both the representation of large-scale precipitation systems and the modes of variability from Tropical waves are improved.</p>"},{"location":"EAM/tech-guide/zm/#namelist-parameters","title":"Namelist parameters","text":"<p>ZM Namelist Parameters</p> <ol> <li> <p>G.J. Zhang and Norman A. McFarlane. Sensitivity of climate simulations to the parameterization of cumulus convection in the Canadian climate centre general circulation model. Atmosphere-Ocean, 33(3):407\u2013446, September 1995. URL: http://www.tandfonline.com/doi/abs/10.1080/07055900.1995.9649539 (visited on 2024-03-29), doi:10.1080/07055900.1995.9649539.\u00a0\u21a9</p> </li> <li> <p>Shaocheng Xie, Yi\u2010Chi Wang, Wuyin Lin, Hsi\u2010Yen Ma, Qi Tang, Shuaiqi Tang, Xue Zheng, Jean\u2010Christophe Golaz, Guang J. Zhang, and Minghua Zhang. Improved Diurnal Cycle of Precipitation in E3SM With a Revised Convective Triggering Function. Journal of Advances in Modeling Earth Systems, 11(7):2290\u20132310, July 2019. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2019MS001702 (visited on 2024-03-29), doi:10.1029/2019MS001702.\u00a0\u21a9\u21a9</p> </li> <li> <p>Richard B. Neale, Jadwiga H. Richter, and Markus Jochum. The Impact of Convection on ENSO: From a Delayed Oscillator to a Series of Events. Journal of Climate, 21(22):5904\u20135924, November 2008. URL: https://journals.ametsoc.org/view/journals/clim/21/22/2008jcli2244.1.xml (visited on 2024-03-29), doi:10.1175/2008JCLI2244.1.\u00a0\u21a9</p> </li> <li> <p>Shaocheng Xie and Minghua Zhang. Impact of the convection triggering function on single\u2010column model simulations. Journal of Geophysical Research: Atmospheres, 105(D11):14983\u201314996, June 2000. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2000JD900170 (visited on 2024-03-29), doi:10.1029/2000JD900170.\u00a0\u21a9</p> </li> <li> <p>Yi-Chi Wang, Hua-Lu Pan, and Huang-Hsiung Hsu. Impacts of the triggering function of cumulus parameterization on warm-season diurnal rainfall cycles at the Atmospheric Radiation Measurement Southern Great Plains site: CONVECTIVE TRIGGER ON SGP NOCTURNAL RAIN. Journal of Geophysical Research: Atmospheres, 120(20):10,681\u201310,702, October 2015. URL: http://doi.wiley.com/10.1002/2015JD023337 (visited on 2024-03-29), doi:10.1002/2015JD023337.\u00a0\u21a9</p> </li> <li> <p>Xiaoliang Song and Guang J. Zhang. Microphysics parameterization for convective clouds in a global climate model: Description and single-column model tests. Journal of Geophysical Research, 116(D2):D02201, January 2011. URL: http://doi.wiley.com/10.1029/2010JD014833 (visited on 2024-03-29), doi:10.1029/2010JD014833.\u00a0\u21a9</p> </li> <li> <p>Xiaoliang Song, Guang J. Zhang, and J.-L. F. Li. Evaluation of Microphysics Parameterization for Convective Clouds in the NCAR Community Atmosphere Model CAM5. Journal of Climate, 25(24):8568\u20138590, December 2012. URL: http://journals.ametsoc.org/doi/10.1175/JCLI-D-11-00563.1 (visited on 2024-03-29), doi:10.1175/JCLI-D-11-00563.1.\u00a0\u21a9</p> </li> <li> <p>Rachel L. Storer, Guang J. Zhang, and Xiaoliang Song. Effects of Convective Microphysics Parameterization on Large-Scale Cloud Hydrological Cycle and Radiative Budget in Tropical and Midlatitude Convective Regions. Journal of Climate, 28(23):9277\u20139297, December 2015. URL: https://journals.ametsoc.org/view/journals/clim/28/23/jcli-d-15-0064.1.xml (visited on 2024-03-29), doi:10.1175/JCLI-D-15-0064.1.\u00a0\u21a9</p> </li> <li> <p>Xiaoliang Song, Guang Zhang, Hui Wan, and Shaocheng Xie. Incorporating the Effect of Large\u2010Scale Vertical Motion on Convection Through Convective Mass Flux Adjustment in E3SMv2. Journal of Advances in Modeling Earth Systems, 15(10):e2022MS003553, October 2023. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2022MS003553 (visited on 2024-03-29), doi:10.1029/2022MS003553.\u00a0\u21a9</p> </li> <li> <p>Mitchell W. Moncrieff, Changhai Liu, and Peter Bogenschutz. Simulation, Modeling, and Dynamically Based Parameterization of Organized Tropical Convection for Global Climate Models. Journal of the Atmospheric Sciences, 74(5):1363\u20131380, May 2017. URL: https://journals.ametsoc.org/view/journals/atsc/74/5/jas-d-16-0166.1.xml (visited on 2024-03-29), doi:10.1175/JAS-D-16-0166.1.\u00a0\u21a9</p> </li> <li> <p>C.\u2010C. Chen, J. H. Richter, C. Liu, M. W. Moncrieff, Q. Tang, W. Lin, S. Xie, and P. J. Rasch. Effects of Organized Convection Parameterization on the MJO and Precipitation in E3SMv1. Part I: Mesoscale Heating. Journal of Advances in Modeling Earth Systems, 13(6):e2020MS002401, June 2021. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2020MS002401 (visited on 2024-03-29), doi:10.1029/2020MS002401.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAM/user-guide/","title":"EAM User Guide","text":"<p>This User Guide describes how to set up and run EAM.</p>"},{"location":"EAM/user-guide/#steps-to-build-and-run-eam","title":"Steps to build and run EAM","text":"<p>EAM is not available as a standalone model.  Instead, EAM can be run in an atmosphere-only configuration. The difference when running in atmosphere-only mode (without an interactive ocean or sea-ice) would be to change the compset and grid. See the Case Control System Basic Usage for general descriptions of compsets and grids.</p> <p>Certain namelist paramaters, input data files, and output file specifcations can also be modified. These are described below as ways to customize runs.</p> <p>Step-by-step instructions on how to run and analyze E3SM with a script can be found at E3SM step-by-step guide</p>"},{"location":"EAM/user-guide/#scientifically-supported-compsets-and-grids","title":"Scientifically supported compsets and grids","text":""},{"location":"EAM/user-guide/#compsets","title":"Compsets","text":"<p>All of the compsets below run with the complete set of E3SM atmospheric configuration of EAMV3. For more information on the schemes in EAMv3, see the Technical Guide</p> <p><code>F2010</code> - Climatological present day climate (year 2010)</p> <p><code>F1850</code> - Climatological pre-industrial-day climate (year 1850)</p> <p><code>F20TR</code> - Historical EAM simulation with time varying sea-surface temperatures, aerosol emissions, and greenhouse gas forcings (year 1850-2014)</p>"},{"location":"EAM/user-guide/#grids","title":"Grids","text":"<p>Only one grid combination is currently supported for the above compsets:</p> <p><code>ne30pg2_r05_IcoswISC30E3r5</code> - ne30pg2 atmosphere, 0.5deg x 0.5deg land grid, and Icosahedral 30 km mesh with ice shelves cavities (wISC), E3SMv3 (E3) revision r5</p>"},{"location":"EAM/user-guide/#customizing-runs","title":"Customizing runs","text":""},{"location":"EAM/user-guide/#compile-time-options","title":"Compile-time options","text":"<p>Some customizations require making changes before the model is built.</p>"},{"location":"EAM/user-guide/#run-time-options","title":"Run-time options","text":"<p>Run-time customization is enabled by a Fortran namelist.</p> <p>Namelist parameters can be changed from default values by putting them in the <code>user_nl_eam</code> file in the case directory with the desired new value.</p> <p>This Table of Namelist Parameters includes many of the paramaters that control physics schemes described in the tech-guide</p>"},{"location":"EAM/user-guide/#history-file-namelist-parameters","title":"History File Namelist Parameters","text":"<p>By default, EAM will output a set of monthly-averaged variables. Additional output files can be specified using the following flags in the <code>user_nl_eam</code> file:</p> <p><code>finclX</code> - List of variables (in single quotes and separated by commas) that are added to tape X.</p> <p><code>fexclX</code> - List of variables (in single quotes and separated by commas) that will be excluded in tape X.</p> <p><code>nhtfrq</code> - List of write frequencies for each of the history files. A value of 0 denotes a monthly frequency. Negative values denote hourly frequencies (e.g., <code>-3</code> will write an output every 3 hours). Positive values denotes the frequency in model timesteps (e.g., <code>4</code> will write an output every 4 timesteps).</p> <p><code>mfilt</code> - List that sets the number of timesteps to write in a single file before starting a new file.</p> <p><code>avgflag_pertape</code> - List that sets the type of output to write. Choices are <code>'A'</code> for time-averaged output, <code>'A'</code> for instantaneous output, <code>'M'</code> for time-minimum output, and <code>'X'</code> for time-maximum output.</p>"},{"location":"EAM/user-guide/#example-output-specification","title":"Example output specification","text":"<pre><code>nhtfrq = 0,-24,-6,-3\nmfilt  = 1,30,120,24\navgflag_pertape = 'A','A','A','I'\n\nfexcl1 = 'U10' # Removes U10 output from monthly files\nfincl2 = 'PS','FLUT','PRECT','U200','V200','U850',\n          'V850','TCO','SCO','TREFHT','QREFHT'  # Output files of daily-averaged output, which includes 30 days of output in each file\nfincl3 = 'PS', 'PSL','PRECT','TUQ','TVQ','UBOT',\n          'VBOT','TREFHT','FLUT','OMEGA500','TBOT',\n          'U850','V850','U200','V200','T200','T500',\n          'Z700'  # Output files of 6-hour-averaged output, which includes 30 days of output in each file\nfincl4 = 'PRECT' # Output files of 3-hourly output with 3 days of output in every file\n</code></pre>"},{"location":"EAM/user-guide/#input-datasets","title":"Input datasets","text":"<p>Many properties of the simulated atmosphere are controlled by data sets read in by the model during initialization. Changing the content of these files is another way to customize a run.</p>"},{"location":"EAM/user-guide/#greenhouse-gases-non-reacting","title":"Greenhouse gases (non-reacting)","text":"<p>Greenhouse gas concentration inputs of non-reacting species are taken from CMIP6 Forcing Datasets provided from the input4MIPs data collection. In addition to what is provided by the input4MIPS, 2015 and 2016 have been added by extrapolating from 2013 and 2014.</p> <pre><code>inputdata/atm/cam/ggas/GHG_CMIP-1-2-0_Annual_Global_0000-2014_c20180105.nc\n</code></pre>"},{"location":"EAM/user-guide/#aerosol-physical-properties","title":"Aerosol physical properties","text":"<p>The aerosol properties files provide aerosol refractive index, density, and aerosol hygroscopicty information for each aerosol species, as well as information about lognormal mode definition and lookup tables of polynomial expression coefficients for aerosol optics calculation for each mode. These aerosol physical and chemical properties are used by the radiation, aerosol microphysics and other related source and sink processes, and droplet activation/ice nucleation schemes.</p>"},{"location":"EAM/user-guide/#aerosol-and-gas-emission-and-oxidant-files","title":"Aerosol and gas emission and oxidant files","text":"<p>Details of the aerosol and gas emission and oxidant files used in various historical, present-day, and future scenarios.</p>"},{"location":"EAM/user-guide/#linoz-v3-input-files","title":"Linoz v3 input files","text":"<p>Linozv3 uses the ozone tendency, (net production minus loss) calculated from its climatological mean state (function of month, latitude, altitude) and a first-order Taylor series expansion about the local ozone, temperature, and overhead ozone column. For historical simulation, Linozv3 uses the linozv3 data files with monthly resolution, spanning the dates 1849-01 -- 2014-12.</p>"},{"location":"EAM/user-guide/#historical-files","title":"Historical files","text":"<pre><code> linoz_data_file                = \u2018linv3_1849-2101_CMIP6_Hist_10deg_58km_c20231207.nc\u2019\n linoz_data_path                = '/lcrc/group/e3sm/data/inputdata/atm/cam/chem/trop_mozart/ub'\n linoz_data_type                = 'INTERP_MISSING_MONTHS'\n</code></pre> <p>Refer to this page for more details on Linoz v3 input files.</p>"},{"location":"EAM/user-guide/#topography","title":"Topography","text":"<p>The global elevation on the atmosphere grid is a key input dataset.  The dataset is grid dependent. It contains the geopotential data (on both the GLL dynamics and PG2 physics grids) and two surface roughness quantities, <code>SGH</code> and <code>SGH30</code>.</p> <p>EAMv3 NE30 data:</p> <pre><code>inputdata/atm/cam/topo/USGS-gtopo30_ne30np4pg2_x6t-SGH.c20210614.nc'\n</code></pre> <p>This file is computed via a complex procedure that starts with high resolution dataset (for EAMv3, we use the GTOPO30, a 30 arc-second resolution data set on a lat-lon grid) that is then downsampled to a 3km cubed-sphere grid (cube3000) and then downsampled to the atmosphere  grid on the (GLL nodes), and then smoothed with the same viscosity operator used by the dycore. The smoothed GLL topography is then mapped to the PG2 grid. Finally, two different surface roughness fields are computed:</p> <ul> <li><code>SGH30</code>: the variance between GTOPO30 and GTOPO30-downsampled-to-PG2 (independent of any dycore specific smoothing).     (used by CLUBB, TMS, vertical_diffusion)</li> <li><code>SGH</code>:  the variance between the cube3000 data and the smoothed PG2 data.  (used by GWD parameterizations)</li> </ul>"},{"location":"EAM/user-guide/#land-use-land-cover-change","title":"Land-use / land cover change","text":"<p>Info needed on land-use land cover change / land surface data</p> <p>Refer to ELM documentation.</p>"},{"location":"EAM/user-guide/#oceansea-ice","title":"Ocean/sea ice","text":"<p>The sea surface temperature and sea-ice coverage data used in F-case simulations are based on CMIP6 Forcing Datasets provided from the input4MIPs data collection. The file for the <code>F2010</code> compset is created from taking a monthly climatology of years 2005-2014. The file for the <code>F1850</code> compset is created from taking a monthly climatology of years 1870-1879.*</p> <p>*Provenenance for F1850 file</p> <p><code>F20TR</code></p> <pre><code>inputdata/ocn/docn7/SSTDATA/sst_ice_CMIP6_DECK_E3SM_1x1_c20180213.nc\n</code></pre> <p><code>F2010</code></p> <pre><code>inputdata/ocn/docn7/SSTDATA/sst_ice_CMIP6_DECK_E3SM_1x1_2010_clim_c20190821.nc \n</code></pre> <p><code>F1850</code></p> <pre><code>inputdata/ocn/docn7/SSTDATA/sst_ice_CMIP6_DECK_E3SM_1x1_1850_clim_c20190125.nc\n</code></pre>"},{"location":"EAM/user-guide/#solar-input","title":"Solar input","text":"<p>As with greenhouse gas emissions, solar input files are taken from the input4MIPs data collection that were prepared for CMIP6 Forcing Datasets.</p> <pre><code>inputdata/atm/cam/solar/Solar_1850-2299_input4MIPS_c20181106.nc\n</code></pre>"},{"location":"EAM/user-guide/aerosol_phys_prop/","title":"Aerosol physical properties","text":""},{"location":"EAM/user-guide/aerosol_phys_prop/#description","title":"Description","text":"<p>Key information</p> <ul> <li> <p>Original physical properties of aerosols are documented in Liu et al. (2012).<sup>1</sup> Detailed information is included in the supplement.</p> </li> <li> <p>Physical properties of aerosols used in E3SMv1 are documented in Wang et al. (2020).<sup>2</sup></p> </li> <li> <p>Marine organic aerosol properties are defined in Burrows et al. (2022).<sup>3</sup></p> </li> <li> <p>Dust refractive index and longwave absorption coefficients are updated by Feng et al. (2022).<sup>4</sup></p> </li> <li> <p>BC and POM hygroscopicity values are updated by Shan et al. (2024).</p> </li> <li> <p>Physical properties of the fifth mode aerosols are documented by Ke et al. (2024).</p> </li> </ul>"},{"location":"EAM/user-guide/aerosol_phys_prop/#included-fields","title":"Included fields","text":""},{"location":"EAM/user-guide/aerosol_phys_prop/#mode-properties","title":"Mode properties","text":"<ul> <li> <p>Geometric standard deviation of each lognormal mode</p> </li> <li> <p>Nominal geometric mean diameter and its lower/upper bound of values for each mode</p> </li> <li> <p>Coefficients of polynomial expression (lookup-table) for extinction, absorption, and asymmetry parameter calculations</p> </li> <li> <p>Aerosol refractive index table needed for interpolation (lookup-table) calculation (for different wavelengths)</p> </li> <li> <p>Crystalization and deliquesence relative humidity thresholds for aerosol wateruptake calculations</p> </li> </ul>"},{"location":"EAM/user-guide/aerosol_phys_prop/#species-properties","title":"Species properties","text":"<ul> <li> <p>Aerosol refractive index for each species</p> </li> <li> <p>Density for each species</p> </li> <li> <p>Aerosol hygroscopicity for each species</p> </li> <li> <p>Note that some of variables in the species property file are for bulk aerosols, so we ignore the description for them.</p> </li> </ul>"},{"location":"EAM/user-guide/aerosol_phys_prop/#files","title":"Files","text":"<p>Species properties</p> <pre><code>/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/sulfate_rrtmg_c080918.nc\n/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/ocpho_rrtmg_c130709_kPOM0.04.nc\n/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/ocphi_rrtmg_c100508.nc\n/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/bcpho_rrtmg_c100508.nc\n/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/dust_aeronet_rrtmg_c141106.nc\n/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/ssam_rrtmg_c100508.nc\n/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/poly_rrtmg_c130816.nc\n</code></pre> <p>Mode properties</p> <pre><code>/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/mam4_mode1_rrtmg_aeronetdust_c141106.nc', \n/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/mam4_mode2_rrtmg_c130628.nc',\n/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/mam4_mode3_rrtmg_aeronetdust_c141106.nc', \n/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/mam4_mode4_rrtmg_c130628.nc',\n/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/mam5_mode5_rrtmg_sig1.2_dgnl.40_c03072023.nc'\n</code></pre>"},{"location":"EAM/user-guide/aerosol_phys_prop/#namelist","title":"Namelist","text":"<pre><code> mode_defs = 'mam5_mode1:accum:=', \n         'A:num_a1:N:num_c1:num_mr:+',\n         'A:so4_a1:N:so4_c1:sulfate:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/sulfate_rrtmg_c080918.nc:+', \n         'A:pom_a1:N:pom_c1:p-organic:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/ocpho_rrtmg_c130709_kPOM0.04.nc:+',\n         'A:soa_a1:N:soa_c1:s-organic:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/ocphi_rrtmg_c100508.nc:+', \n         'A:bc_a1:N:bc_c1:black-c:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/bcpho_rrtmg_c100508.nc:+',\n         'A:dst_a1:N:dst_c1:dust:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/dust_aeronet_rrtmg_c141106.nc:+', \n         'A:ncl_a1:N:ncl_c1:seasalt:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/ssam_rrtmg_c100508.nc:+',\n         'A:mom_a1:N:mom_c1:m-organic:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/poly_rrtmg_c130816.nc', \n         'mam5_mode2:aitken:=',\n         'A:num_a2:N:num_c2:num_mr:+', \n         'A:so4_a2:N:so4_c2:sulfate:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/sulfate_rrtmg_c080918.nc:+',\n         'A:soa_a2:N:soa_c2:s-organic:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/ocphi_rrtmg_c100508.nc:+', \n         'A:ncl_a2:N:ncl_c2:seasalt:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/ssam_rrtmg_c100508.nc:+',\n         'A:mom_a2:N:mom_c2:m-organic:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/poly_rrtmg_c130816.nc', \n         'mam5_mode3:coarse:=',\n         'A:num_a3:N:num_c3:num_mr:+', \n         'A:dst_a3:N:dst_c3:dust:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/dust_aeronet_rrtmg_c141106.nc:+',\n         'A:ncl_a3:N:ncl_c3:seasalt:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/ssam_rrtmg_c100508.nc:+', \n         'A:so4_a3:N:so4_c3:sulfate:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/sulfate_rrtmg_c080918.nc:+',\n         'A:bc_a3:N:bc_c3:black-c:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/bcpho_rrtmg_c100508.nc:+', \n         'A:pom_a3:N:pom_c3:p-organic:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/ocpho_rrtmg_c130709_kPOM0.04.nc:+',\n         'A:soa_a3:N:soa_c3:s-organic:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/ocphi_rrtmg_c100508.nc:+', \n         'A:mom_a3:N:mom_c3:m-organic:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/poly_rrtmg_c130816.nc',\n         'mam5_mode4:primary_carbon:=', \n         'A:num_a4:N:num_c4:num_mr:+',\n         'A:pom_a4:N:pom_c4:p-organic:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/ocpho_rrtmg_c130709_kPOM0.04.nc:+', \n         'A:bc_a4:N:bc_c4:black-c:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/bcpho_rrtmg_c100508.nc:+',\n         'A:mom_a4:N:mom_c4:m-organic:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/poly_rrtmg_c130816.nc', \n         'mam5_mode5:strat_coarse:=',\n         'A:num_a5:N:num_c5:num_mr:+', \n         'A:so4_a5:N:so4_c5:sulfate:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/sulfate_rrtmg_c080918.nc'\n rad_climate = 'A:H2OLNZ:H2O', 'N:O2:O2','N:CO2:CO2', 'A:O3:O3',\n         'A:N2OLNZ:N2O', 'A:CH4LNZ:CH4','N:CFC11:CFC11', 'N:CFC12:CFC12',\n         'M:mam5_mode1:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/mam4_mode1_rrtmg_aeronetdust_c141106.nc', \n         'M:mam5_mode2:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/mam4_mode2_rrtmg_c130628.nc',\n         'M:mam5_mode3:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/mam4_mode3_rrtmg_aeronetdust_c141106.nc', \n         'M:mam5_mode4:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/mam4_mode4_rrtmg_c130628.nc',\n         'M:mam5_mode5:/lcrc/group/e3sm/data/inputdata/atm/cam/physprops/mam5_mode5_rrtmg_sig1.2_dgnl.40_c03072023.nc'\n</code></pre> <ol> <li> <p>X. Liu, R. C. Easter, S. J. Ghan, R. Zaveri, P. Rasch, X. Shi, J.-F. Lamarque, A. Gettelman, H. Morrison, F. Vitt, A. Conley, S. Park, R. Neale, C. Hannay, A. M. L. Ekman, P. Hess, N. Mahowald, W. Collins, M. J. Iacono, C. S. Bretherton, M. G. Flanner, and D. Mitchell. Toward a minimal representation of aerosols in climate models: description and evaluation in the Community Atmosphere Model CAM5. Geoscientific Model Development, 5(3):709\u2013739, May 2012. URL: https://gmd.copernicus.org/articles/5/709/2012/ (visited on 2024-03-29), doi:10.5194/gmd-5-709-2012.\u00a0\u21a9</p> </li> <li> <p>Hailong Wang, Richard C. Easter, Rudong Zhang, Po\u2010Lun Ma, Balwinder Singh, Kai Zhang, Dilip Ganguly, Philip J. Rasch, Susannah M. Burrows, Steven J. Ghan, Sijia Lou, Yun Qian, Yang Yang, Yan Feng, Mark Flanner, L. Ruby Leung, Xiaohong Liu, Manish Shrivastava, Jian Sun, Qi Tang, Shaocheng Xie, and Jin\u2010Ho Yoon. Aerosols in the E3SM Version 1: New Developments and Their Impacts on Radiative Forcing. Journal of Advances in Modeling Earth Systems, 12(1):e2019MS001851, January 2020. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2019MS001851 (visited on 2024-03-29), doi:10.1029/2019MS001851.\u00a0\u21a9</p> </li> <li> <p>Susannah M. Burrows, Richard C. Easter, Xiaohong Liu, Po-Lun Ma, Hailong Wang, Scott M. Elliott, Balwinder Singh, Kai Zhang, and Philip J. Rasch. OCEANFILMS (Organic Compounds from Ecosystems to Aerosols: Natural Films and Interfaces via Langmuir Molecular Surfactants) sea spray organic aerosol emissions \u2013 implementation in a global climate model and impacts on clouds. Atmospheric Chemistry and Physics, 22(8):5223\u20135251, April 2022. URL: https://acp.copernicus.org/articles/22/5223/2022/ (visited on 2024-03-29), doi:10.5194/acp-22-5223-2022.\u00a0\u21a9</p> </li> <li> <p>Y. Feng, H. Wang, P. J. Rasch, K. Zhang, W. Lin, Q. Tang, S. Xie, D. S. Hamilton, N. Mahowald, and H. Yu. Global Dust Cycle and Direct Radiative Effect in E3SM Version 1: Impact of Increasing Model Resolution. Journal of Advances in Modeling Earth Systems, 14(7):e2021MS002909, July 2022. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2021MS002909 (visited on 2024-03-29), doi:10.1029/2021MS002909.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAM/user-guide/emission_oxidant_files/","title":"Emission files for EAMv3 gas and aerosol species and oxidant file for VBS SOA and stratosphere sulfate formation","text":""},{"location":"EAM/user-guide/emission_oxidant_files/#overview","title":"Overview","text":"<p>This page documents emissions data for all required aerosols and precursor gases as well as oxidants input data for running EAMv3, mostly for the MAM4 aerosol scheme, from anthropogenic (i.e., industrial, energy, transportation, domestic, and agriculture activity sectors) and natural (i.e., sea spray, vegetation, fire smoke, volcano) sources. Sulfur from agriculture, domestic, transportation, waste, and shipping sectors is emitted at the surface while sulfur from energy and industry sectors is emitted at 100-300 m above the surface, and sulfur from forest fire and grass fire is emitted at higher elevations (0-6 km). POM and BC from forest fire and grass fire are emitted at 0-6 km, while those from other sources (domestic, energy, industry, transportation, waste, and shipping) are emitted at the surface. Injection height profiles for fire emissions are derived from the corresponding AeroCom profiles (Dentener et al., 2006)<sup>1</sup>, which give emissions in 6 altitude ranges (0-0.1, 0.1-0.5, 0.5-1, 1-2, 2-3, and 3-6 km). Otherwise, species emissions are assumed to be at the surface (bottom layer). Number emission fluxes each mode are calculated from mass emission fluxes based on AeroCom prescribed lognormal size distributions.</p>"},{"location":"EAM/user-guide/emission_oxidant_files/#aerosols-and-gas-precursors-common-for-eamv1v2v3","title":"Aerosols and gas precursors (common for EAMv1/v2/v3)","text":"<ul> <li>Species: SO2, SOAG0, DMS, bc_a4, pom_a4, so4_a1, so4_a2, num_a1, num_a2, num_a4</li> <li>Data sources</li> <li>Most of the original data are directly from input4MIPs with the following exceptions (E3SM specific treatments)</li> <li>SO2 takes 97.5% from the input4MIPs data (all SO2-em-anthro_input4MIPs sectors)</li> <li>SO4_a1 surf takes 2.5% from the corresponding surface sectors of input4MIPs data (SO2-em-anthro_input4MIPs sectors: AGR, SLV, WST, SHP)</li> <li>SO4_a2 surf takes 2.5% from the corresponding surface sectors of input4MIPs data (SO2-em-anthro_input4MIPs sectors: TRA, RCO)</li> <li>SO4_a1 elev takes 2.5% from the corresponding elevated sectors of input4MIPs data (SO2-em-anthro_input4MIPs sectors: ENE, IND)</li> <li>SO2 (97.5%) and SO4_a1 (2.5%) also take emissions from AR5 input file for sector contvolc (constant volcanic degassing)</li> <li>SOAG0 emissions are obtained by scaling OC (POM) emissions with a tunable factor.</li> <li>num_a1, num_a2 and num_a4 are determined by mass concentration of aerosols species in the corresponding sectors and modes.</li> </ul>"},{"location":"EAM/user-guide/emission_oxidant_files/#marine-organic-sea-spray","title":"Marine organic sea spray","text":"<p>Marine organic sea spray aerosol contributions are parameterized following the OCEANFILMS parameterization (E3SMv1; Burrows et al., 2014;<sup>2</sup> 2022<sup>3</sup>).  The input file for this parameterization provides a climatology of the ocean surface concentrations of several groups of organic macromolecules.  Briefly, the Parallel Ocean Program (POP; Maltrud et al., 1998)<sup>4</sup> and its biogeochemical elemental cycling (BEC) routines (Moore et al., 2004)<sup>5</sup> were used to simulate marine biogeochemistry fields, including particulate organic matter (POC), chlorophyll, and zooplankton concentrations; these fields were used to generate maps of the estimated surface distributions of classes of macromolecules following the methods described in Burrows et al. (2014).<sup>2</sup>  The scripts used to accomplish this translation are available here.</p> <p>The file used as an input to E3SM is available here: https://web.lcrc.anl.gov/public/e3sm/inputdata/atm/cam/chem/trop_mam/marine_BGC/monthly_macromolecules_0.1deg_bilinear_latlon_year01_merge_date.nc</p> <p>And is also published as a citeable dataset on Zenodo:</p> <p>Elliott, S. M., Maltrud, M., &amp; Burrows, S. M. (2015). Macromolecule distributions input file for the OCEANFILMS parameterization (Version v1) [Data set]. Zenodo.</p>"},{"location":"EAM/user-guide/emission_oxidant_files/#oceanic-dimethyl-sulfide-concentrations","title":"Oceanic dimethyl sulfide concentrations","text":"<p>Dimethyl sulfide (DMS) fluxes to the atmosphere are calculated in E3SM as a function of prescribed surface oceanic DMS concentrations, and an air-sea flux piston velocity that is a function of wind speed.</p> <p>E3SM uses a DMS surface concentration dataset developed from a dynamic ocean biogeochemistry simulation; the methods and underlying assumptions used to produce this dataset are documented in Wang, et al. (2015).  The resolution in the DMS dataset is 1.9x2.5 degrees.</p>"},{"location":"EAM/user-guide/emission_oxidant_files/#new-gas-species-for-chemuci-in-eamv3","title":"New gas species for chemUCI in EAMv3","text":"<ul> <li>Species: C2H4, C2H6, C3H8, CH2O, CH3CHO, CH3COCH3, CO, E90, ISOP, NO, NO2</li> <li>Data sources</li> <li>anthropogenic, biomass burning, and aircraft emissions (NO2) are regridded from NCAR CESM2 emission files. They  are time-dependent during historical period and in the future scenarios.</li> <li>biogenic emissions (C2H4, C2H6, C3H8, CH2O, CH3CHO, CH3COCH3, CO, ISOP) are from MEGAN-MACC offline data<ul> <li>1850-1979: monthly input cycled yearly from 30-year mean (1980-2009)</li> <li>1980-2014: time-varying MEGAN-MACC data (historical)</li> <li>2015-2100: monthly input cycled yearly from 30-year mean (1980-2009)</li> </ul> </li> <li>natural emissions from oceans (C2H4, C2H6, C3H8, CO) and soil (NO) are regridded from NCAR CESM2 emission files. Just cycled yearly during the historical period and in the future scenarios.</li> <li>E90 emissions?</li> </ul>"},{"location":"EAM/user-guide/emission_oxidant_files/#oxidants-file-needed-for-vbs-soa-and-stratosphere-sulfate-formation","title":"Oxidants file needed for VBS SOA and stratosphere sulfate formation","text":"<ul> <li>Species: prsd_O3, prsd_NO3, prsd_OH</li> <li>Data sources</li> <li>the file for historical simulation is the same as v1 and v2, inherited from CESM</li> <li>files for SSPs are regridded from NCAR CESM2 tracer files</li> </ul>"},{"location":"EAM/user-guide/emission_oxidant_files/#namelist-setting-for-emissions-input","title":"Namelist setting for emissions input","text":""},{"location":"EAM/user-guide/emission_oxidant_files/#historical-wcycl20tramip-f20tr","title":"Historical (WCYCL20TR)/AMIP (F20TR)","text":"<pre><code> ext_frc_specifier              = 'NO2         -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_NO2_aircraft_vertical_1750-2015_1.9x2.5_c20170608.nc',\n         'SO2         -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_so2_elev_1850-2014_c180205_kzm_1850_2014_volcano.nc',\n         'SOAG0       -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/emissions-cmip6_e3sm_SOAG0_elev_1850-2014_1.9x2.5_c20230201.nc',\n         'bc_a4       -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_bc_a4_elev_1850-2014_c180205.nc',\n         'num_a1      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_num_a1_elev_1850-2014_c180205.nc',\n         'num_a2      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_num_a2_elev_1850-2014_c180205.nc',\n         'num_a4      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_num_a4_elev_1850-2014_c180205.nc',\n         'pom_a4      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_pom_a4_elev_1850-2014_c180205.nc',\n         'so4_a1      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_so4_a1_elev_1850-2014_c180205.nc',\n         'so4_a2      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_so4_a2_elev_1850-2014_c180205.nc'\n\n srf_emis_specifier             = 'C10H16 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_MTERP_surface_1850-2014_1.9x2.5_c20230126.nc',\n         'C2H4      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_C2H4_surface_1850-2014_1.9x2.5_c20210323.nc',\n         'C2H6      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_C2H6_surface_1850-2014_1.9x2.5_c20210323.nc',\n         'C3H8      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_C3H8_surface_1850-2014_1.9x2.5_c20210323.nc',\n         'CH2O   -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_CH2O_surface_1850-2014_1.9x2.5_c20210323.nc',\n         'CH3CHO    -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_CH3CHO_surface_1850-2014_1.9x2.5_c20210323.nc',\n         'CH3COCH3  -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_CH3COCH3_surface_1850-2014_1.9x2.5_c20210323.nc',\n         'CO     -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_CO_surface_1850-2014_1.9x2.5_c20210323.nc',\n         'DMS    -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DMSflux.1850-2100.1deg_latlon_conserv.POPmonthlyClimFromACES4BGC_c20160727.nc',\n         'E90       -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions_E90_surface_1750-2015_1.9x2.5_c20210408.nc',\n         'ISOP   -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_ISOP_surface_1850-2014_1.9x2.5_c20210323.nc',\n         'ISOP_VBS -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_ISOP_surface_1850-2014_1.9x2.5_c20210323.nc',\n         'NO     -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_NO_surface_1850-2014_1.9x2.5_c20220425.nc',\n         'SO2    -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_so2_surf_1850-2014_c180205.nc',\n         'SOAG0  -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/emissions-cmip6_e3sm_SOAG0_surf_1850-2014_1.9x2.5_c20230201.nc',\n         'bc_a4  -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_bc_a4_surf_1850-2014_c180205.nc',\n         'num_a1 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_num_a1_surf_1850-2014_c180205.nc',\n         'num_a2 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_num_a2_surf_1850-2014_c180205.nc',\n         'num_a4 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_num_a4_surf_1850-2014_c180205.nc',\n         'pom_a4 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_pom_a4_surf_1850-2014_c180205.nc',\n         'so4_a1 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_so4_a1_surf_1850-2014_c180205.nc',\n         'so4_a2 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_so4_a2_surf_1850-2014_c180205.nc'\n\n tracer_cnst_datapath           = '\\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/oxid'\n tracer_cnst_file               = 'oxid_1.9x2.5_L26_1850-2015_c20181106.nc'\n tracer_cnst_filelist           = ''\n tracer_cnst_specifier          = 'prsd_O3:O3','prsd_NO3:NO3','prsd_OH:OH'\n tracer_cnst_type               = 'INTERP_MISSING_MONTHS'\n</code></pre>"},{"location":"EAM/user-guide/emission_oxidant_files/#f2010","title":"F2010","text":"<pre><code> ext_frc_cycle_yr               = 2010\n ext_frc_specifier              = 'NO2         -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_NO2_aircraft_vertical_2010_clim_1.9x2.5_c20230213.nc',\n         'SO2         -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_so2_elev_1x1_2010_clim_c20190821.nc',\n         'SOAG0       -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/emissions-cmip6_e3sm_SOAG0_elev_2010_clim_1.9x2.5_c20230213.nc',\n         'bc_a4       -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_bc_a4_elev_1x1_2010_clim_c20190821.nc',\n         'num_a1      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_num_a1_elev_1x1_2010_clim_c20190821.nc',\n         'num_a2      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_num_a2_elev_1x1_2010_clim_c20190821.nc',\n         'num_a4      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_num_a4_elev_1x1_2010_clim_c20190821.nc',\n         'pom_a4      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_pom_a4_elev_1x1_2010_clim_c20190821.nc',\n         'so4_a1      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_so4_a1_elev_1x1_2010_clim_c20190821.nc',\n         'so4_a2      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_so4_a2_elev_1x1_2010_clim_c20190821.nc'\n ext_frc_type           = 'CYCLICAL'\n\n srf_emis_cycle_yr              = 2010\n srf_emis_specifier             = 'C10H16 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_MTERP_surface_2010_clim_1.9x2.5_c20230213.nc',\n         'C2H4      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_C2H4_surface_2010_clim_1.9x2.5_c20230213.nc',\n         'C2H6      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_C2H6_surface_2010_clim_1.9x2.5_c20230213.nc',\n         'C3H8      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_C3H8_surface_2010_clim_1.9x2.5_c20230213.nc',\n         'CH2O   -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_CH2O_surface_2010_clim_1.9x2.5_c20230213.nc',\n         'CH3CHO    -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_CH3CHO_surface_2010_clim_1.9x2.5_c20230213.nc',\n         'CH3COCH3  -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_CH3COCH3_surface_2010_clim_1.9x2.5_c20230213.nc',\n         'CO     -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_CO_surface_2010_clim_1.9x2.5_c20230213.nc',\n         'DMS    -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DMSflux.2010.1deg_latlon_conserv.POPmonthlyClimFromACES4BGC_c20190220.nc',\n         'E90       -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions_E90_surface_2010_clim_1.9x2.5_c20230213.nc',\n         'ISOP   -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_ISOP_surface_2010_clim_1.9x2.5_c20230213.nc',\n         'ISOP_VBS -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_ISOP_surface_2010_clim_1.9x2.5_c20230213.nc',\n         'NO     -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/chem_gases/2degrees/emissions-cmip6_e3sm_NO_surface_2010_clim_1.9x2.5_c20230213.nc',\n         'SO2    -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_so2_surf_1x1_2010_clim_c20190821.nc',\n         'SOAG0  -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/emissions-cmip6_e3sm_SOAG0_surf_2010_clim_1.9x2.5_c20230213.nc',\n         'bc_a4  -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_bc_a4_surf_1x1_2010_clim_c20190821.nc',\n         'num_a1 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_num_a1_surf_1x1_2010_clim_c20190821.nc',\n         'num_a2 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_num_a2_surf_1x1_2010_clim_c20190821.nc',\n         'num_a4 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_num_a4_surf_1x1_2010_clim_c20190821.nc',\n         'pom_a4 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_pom_a4_surf_1x1_2010_clim_c20190821.nc',\n         'so4_a1 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_so4_a1_surf_1x1_2010_clim_c20190821.nc',\n         'so4_a2 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DECK_ne30/cmip6_mam4_so4_a2_surf_1x1_2010_clim_c20190821.nc'\n srf_emis_type          = 'CYCLICAL'\n\n tracer_cnst_cycle_yr           = 2015\n tracer_cnst_datapath           = '\\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/oxid'\n tracer_cnst_file               = 'oxid_1.9x2.5_L26_1850-2015_c20181106.nc'\n tracer_cnst_filelist           = ''\n tracer_cnst_specifier          = 'prsd_O3:O3','prsd_NO3:NO3','prsd_OH:OH'\n tracer_cnst_type               = 'CYCLICAL'\n ```\n\n### Future Scenarios\n\n#### SSP370\n\n```fortran\next_frc_specifier              = 'NO2         -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_NO2_aircraft_vertical_2015-2100_1.9x2.5_c20240208.nc',\n         'SO2         -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_so2_elev_2015-2100_c210216.nc',\n         'SOAG0       -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_SOAG0_elev_2015-2100_1.9x2.5_c20240208.nc',\n         'bc_a4       -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_bc_a4_elev_2015-2100_c210216.nc',\n         'num_a1      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_num_a1_elev_2015-2100_c210216.nc',\n         'num_a2      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_num_a2_elev_2015-2100_c210216.nc',\n         'num_a4      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_num_a4_elev_2015-2100_c210216.nc',\n         'pom_a4      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_pom_a4_elev_2015-2100_c210216.nc',\n         'so4_a1      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_so4_a1_elev_2015-2100_c210216.nc',\n         'so4_a2      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_so4_a2_elev_2015-2100_c210216.nc'\n\nsrf_emis_specifier             = 'C10H16 -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_MTERP_surface_2015-2100_1.9x2.5_c20240208.nc',\n         'C2H4      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_C2H4_surface_2015-2100_1.9x2.5_c20240208.nc',\n         'C2H6      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_C2H6_surface_2015-2100_1.9x2.5_c20240208.nc',\n         'C3H8      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_C3H8_surface_2015-2100_1.9x2.5_c20240208.nc',\n         'CH2O      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_CH2O_surface_2015-2100_1.9x2.5_c20240208.nc',\n         'CH3CHO    -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_CH3CHO_surface_2015-2100_1.9x2.5_c20240208.nc',\n         'CH3COCH3  -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_CH3COCH3_surface_2015-2100_1.9x2.5_c20240208.nc',\n         'CO        -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_CO_surface_2015-2100_1.9x2.5_c20240208.nc ',\n         'DMS       -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/DMSflux.1850-2100.1deg_latlon_conserv.POPmonthlyClimFromACES4BGC_c20160727.nc',\n         'E90       -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart/ub/emissions_E90_surface_1750-2101_1.9x2.5_c20231222.nc',\n         'ISOP      -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_ISOP_surface_2015-2100_1.9x2.5_c20240208.nc',\n         'ISOP_VBS  -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_ISOP_surface_2015-2100_1.9x2.5_c20240208.nc',\n         'NO        -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_NO_surface_2015-2100_1.9x2.5_c20240208.nc',\n         'SO2       -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_so2_surf_2015-2100_c210216.nc',\n         'SOAG0     -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/emissions-cmip6_ssp370_e3sm_SOAG0_surf_2015-2100_1.9x2.5_c20240208.nc',\n         'bc_a4     -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_bc_a4_surf_2015-2100_c210216.nc',\n         'num_a1    -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_num_a1_surf_2015-2100_c210216.nc',\n         'num_a2    -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_num_a2_surf_2015-2100_c210216.nc',\n         'num_a4    -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_num_a4_surf_2015-2100_c210216.nc',\n         'pom_a4    -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_pom_a4_surf_2015-2100_c210216.nc',\n         'so4_a1    -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_so4_a1_surf_2015-2100_c210216.nc',\n         'so4_a2    -&gt; \\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/emis/CMIP6_SSP370_ne30/cmip6_ssp370_mam4_so4_a2_surf_2015-2100_c210216.nc'\n\n tracer_cnst_datapath           = '\\$DIN_LOC_ROOT/atm/cam/chem/trop_mozart_aero/oxid'\n tracer_cnst_file               = 'oxid_SSP370_1.9x2.5_L70_1849-2101_c20240228.nc'\n tracer_cnst_filelist           = ''\n tracer_cnst_specifier          = 'prsd_O3:O3','prsd_NO3:NO3','prsd_OH:OH'\n tracer_cnst_type               = 'INTERP_MISSING_MONTHS'\n</code></pre> <ol> <li> <p>F. Dentener, S. Kinne, T. Bond, O. Boucher, J. Cofala, S. Generoso, P. Ginoux, S. Gong, J. J. Hoelzemann, A. Ito, L. Marelli, J. E. Penner, J.-P. Putaud, C. Textor, M. Schulz, G. R. van der Werf, and J. Wilson. Emissions of primary aerosol and precursor gases in the years 2000 and 1750 prescribed data-sets for AeroCom. Atmospheric Chemistry and Physics, 6(12):4321\u20134344, 2006. URL: https://acp.copernicus.org/articles/6/4321/2006/acp-6-4321-2006.html (visited on 2024-04-24), doi:10.5194/acp-6-4321-2006.\u00a0\u21a9</p> </li> <li> <p>S. M. Burrows, O. Ogunro, A. A. Frossard, L. M. Russell, P. J. Rasch, and S. M. Elliott. A physically based framework for modeling the organic fractionation of sea spray aerosol from bubble film Langmuir equilibria. Atmospheric Chemistry and Physics, 14(24):13601\u201313629, December 2014. URL: https://acp.copernicus.org/articles/14/13601/2014/ (visited on 2024-03-29), doi:10.5194/acp-14-13601-2014.\u00a0\u21a9\u21a9</p> </li> <li> <p>Susannah M. Burrows, Richard C. Easter, Xiaohong Liu, Po-Lun Ma, Hailong Wang, Scott M. Elliott, Balwinder Singh, Kai Zhang, and Philip J. Rasch. OCEANFILMS (Organic Compounds from Ecosystems to Aerosols: Natural Films and Interfaces via Langmuir Molecular Surfactants) sea spray organic aerosol emissions \u2013 implementation in a global climate model and impacts on clouds. Atmospheric Chemistry and Physics, 22(8):5223\u20135251, April 2022. URL: https://acp.copernicus.org/articles/22/5223/2022/ (visited on 2024-03-29), doi:10.5194/acp-22-5223-2022.\u00a0\u21a9</p> </li> <li> <p>Mathew E. Maltrud, Richard D. Smith, Albert J. Semtner, and Robert C. Malone. Global eddy\u2010resolving ocean simulations driven by 1985\u20131995 atmospheric winds. Journal of Geophysical Research: Oceans, 103(C13):30825\u201330853, December 1998. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/1998JC900013 (visited on 2024-03-29), doi:10.1029/1998JC900013.\u00a0\u21a9</p> </li> <li> <p>J. Keith Moore, Scott C. Doney, and Keith Lindsay. Upper ocean ecosystem dynamics and iron cycling in a global three\u2010dimensional model. Global Biogeochemical Cycles, 18(4):2004GB002220, December 2004. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1029/2004GB002220 (visited on 2024-03-29), doi:10.1029/2004GB002220.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAM/user-guide/namelist_parameters/","title":"Namelist parameters associated with atmosphere schemes","text":""},{"location":"EAM/user-guide/namelist_parameters/#chemuci-and-linoz-v3","title":"chemUCI and Linoz v3","text":"Parameter Description Default value* <code>airpl_emis_file</code> Aviation emission <code>chlorine_loading_file</code> Chlorine loading <code>chlorine_loading_fixed_ymd</code> <code>chlorine_loading_type</code> <code>ext_frc_specifier</code> 3-D emissions <code>ext_frc_cycle_yr</code> <code>ext_frc_type</code> <code>srf_emis_specifier</code> Surface emissions <code>srf_emis_cycle_yr</code> <code>srf_emis_type</code> Upper bound of mean raindrop diameter <code>linoz_data_file</code> Linoz data file <code>linoz_data_cycle_yr</code> <code>linoz_data_path</code> <code>linoz_data_type</code> <code>lght_no_prd_factor</code> Lightning NOx emission factor <code>5.0</code> <code>fstrat_efold_list</code> Tracer (from troposphere) list with e-folding decay in the stratosphere <ul> <li>Many of these namelist parameters specify input data files. Check the <code>atm_in</code> file for examples or refer to the Users' Guide.</li> </ul>"},{"location":"EAM/user-guide/namelist_parameters/#cloud-layers-unified-by-binormals","title":"Cloud Layers Unified By Binormals","text":"Parameter Description Default value <code>gamma_coef</code> Width of vertical velocity within a Gaussian PDF component at low skewness <code>0.12</code> <code>gamma_coefb</code> Width of vertical velocity within a Gaussian PDF component at high skewness <code>0.28</code> <code>C8</code> Coefficient of damping of third moment of vertical velocity, w\u20193 <code>5.2</code> <code>C1</code> Coefficient of damping of second vertical moment of vertical velocity, w\u20192, at low skewness <code>2.4</code> <code>C14</code> Coefficient of damping of second horizontal moments of vertical velocity, u\u20192 and v\u20192 <code>2.0</code> <code>c_k10</code> Ratio of diffusivity of momentum to heat <code>0.35</code>"},{"location":"EAM/user-guide/namelist_parameters/#dust-aerosol","title":"Dust aerosol","text":"Parameter Description Default value <code>dust_emis_scheme</code>* The v3 dust emission scheme (Kok et al., 2014) <code>2</code>  (set to 1 to switch to the v1/v2 scheme) <p>*This parameter is set in <code>user_nl_drv</code></p>"},{"location":"EAM/user-guide/namelist_parameters/#homme","title":"HOMME","text":"Parameter Description Default value <code>se_tstep</code> Main dycore timestep. Additional parameters control the hyper viscsosity, trancer and vertical remap timesteps, which are derived from se_tstep.  units = seconds Scales linearly with horizontal resolution.  NE30 default: <code>300</code> <code>nu</code> Tensor hyperviscosity coefficient, independent of spatial resolution.  units = 1/s <code>3.4e-8</code> <code>nu_top</code> Scalar viscosity at model top.  units = m^2/s Horizontal resolution dependent  NE30 default: <code>2.5e5</code> <code>transport_alg</code> Select between semi-lagrangian and Eulerian based transport schemes <code>12</code> = semi-lagranian method with monotinicity and mass preservation <code>statefreq</code> print a varieity of dycore metrics to the atm.log file every \u201cstatefreq\u201d timesteps <code>480</code> <code>vert_remap_alg</code> Algorithm used to remap the vertically lagrangian levels back to the reference levels <code>10</code> = strict monotonicity applied on top of a 2nd order accurate PPM method <code>se_ftype</code> Controls how physics tendencies are applied.  0=\u201ddribbled\u201d in during dynamics timesteps.  1=\u201dhard adjustment\u201d after each physics timestep.  2=hybrid approach: hard adjustment for tracers, dribbled for remaining tendencies <code>2</code>"},{"location":"EAM/user-guide/namelist_parameters/#modal-aerosol-module","title":"Modal Aerosol Module","text":"Parameter Description Default value <code>is_output_interactive_volc</code> Switch for diagnostic output of the stratospheric aerosol optics <code>.false.</code> <code>mam_amicphys_optaa</code> Recommended option of the new time-splitting treatment of H2SO4 production and loss <code>1</code>  (0 to turn it off) <code>n_so4_monolayers_pcage</code> Number of monolayers required to age primary-carbon mode particles <code>3</code> <code>seasalt_emis_scale</code> Tuning parameter for sea salt emission <code>0.55</code>"},{"location":"EAM/user-guide/namelist_parameters/#oceanfilms","title":"OCEANFILMS","text":"Parameter Description Default value <code>mam_mom_cycle_yr</code> <code>1</code> <code>mam_mom_datapath</code> Full pathname of the directory that contains the files specified in mam_mom_filelist <code>'atm/cam/chem/trop_mam/marine_BGC/'</code> <code>mam_mom_filename</code> Filename of file that contains a sequence of filenames for prescribed marine organic matter ocean concentrations.  The filenames in this file are relative to the directory specified by mam_mom_datapath. <code>'monthly_macromolecules_0.1deg_bilinear_latlon_year01_merge_date.nc'</code> <code>mam_mom_rmfile</code> Remove the file containing prescribed aerosol deposition fluxes from local disk when no longer needed. <code>FALSE</code> <code>mam_mom_specifier</code> Names of variables containing aerosol data in the prescribed aerosol datasets. <code>'chla:CHL1','mpoly:TRUEPOLYC','mprot:TRUEPROTC','mlip:TRUELIPC'</code> <code>mam_mom_datatype</code> Type of time interpolation for data in mam_mom files. Can be set to <code>'CYCLICAL'</code>, <code>'SERIAL'</code>, <code>'INTERP_MISSING_MONTHS'</code>, or <code>'FIXED'</code>. <code>'CYCLICAL'</code> <code>mam_mom_cycle_yr</code> The  cycle year of the prescribed aerosol flux data if mam_mom_type is <code>'CYCLICAL'</code>. Format: YYYY <code>1</code> <code>mam_mom_fixed_ymd</code> The date at which the prescribed aerosol flux data is fixed if mam_mom_type is <code>'FIXED'</code>. Format: YYYYMMDD <code>0</code> <code>mam_mom_fixed_tod</code> The time of day (seconds) corresponding to mam_mom_fixed_ymd at which the prescribed aerosol flux data is fixed if mam_mom_type is 'FIXED'. <code>0</code> <code>mam_mom_bubble_thickness</code> Bubble film thickness (in m) for marine organic aerosol emission mechanism.  The physically reasonable range is approximately (0.1 - 1) x 10^ -6. <code>0.1e-6</code> <code>mam_mom_mixing_state</code> Switch to select mixing state assumption in marine organic aerosol code. Currently implemented options: 0 : total external mixture, add to mass; 1 : total external mixture, replace mass; 2 : total internal mixture, add to mass; 3 : total internal mixture, replace mass. <code>0</code> [Note: set to 3 in the atm_in namelist] <code>mam_mom_parameterization</code> Selection of alternate parameterizations for marine organic matter emissions.  Set fmoa=1 for Burrows et al. (2014) <sup>1</sup> parameterization; fmoa=2 for Gantt et al. (2011) <sup>2</sup> parameterization; fmoa=3 for simple parameterization based on Quinn et al., 2014; <sup>3</sup> fmoa=4 for Rinaldi et al. (JGR, 2013).* <sup>4</sup> <code>1</code> <p>*Note: non-default values have not been carefully tested and may not work as expected.</p>"},{"location":"EAM/user-guide/namelist_parameters/#predicted-particle-properties","title":"Predicted Particle Properties","text":"Parameter Description Default value <code>do_prescribed_ccn</code> Turn on the prescribed CCN if true <code>false</code> <code>micro_aerosolactivation</code> Turn on aerosol activation if true <code>true</code> <code>micro_p3_lookup_dir</code> Directory of P3 look-up tables <code>inputdata/atm/cam/physprops</code> <code>micro_p3_tableversion</code> P3 look-up table Version <code>4.1.2</code> <code>micro_subgrid_cloud</code> Sub-grid cloud properties <code>true</code> <code>micro_tend_output</code> Output of P3 microphysical process rates <code>false</code> <code>p3_accret_coeff</code> Tunable parameter for adjusting rain accretion efficiency <code>117.25</code> <code>p3_autocon_coeff</code> Tunable parameter for adjusting droplet autoconversion efficiency <code>30500</code> <code>p3_embryonic_rain_size</code> Radius of embryomic raindrops from auto-conversion <code>0.000025</code> (m) <code>p3_max_mean_rain_size</code> Upper bound of mean raindrop diameter <code>0.005</code> (m) <code>p3_mincdnc</code> Lower bound of droplet number concentration <code>20.d6</code> (# m-3) <code>p3_nc_autocon_expon</code> Nc exponent in droplet auto-conversion <code>-1.1</code> <code>p3_qc_accret_expon</code> Qc exponent in rain accretion <code>1.15</code> <code>p3_qc_autocon_expon</code> Qc exponeent in droplet autoconversion <code>3.19</code> <code>p3_wbf_coeff</code> Tunable parameter for adjusting WBF efficiency <code>1.0</code> <code>do_cooper_inp3</code> Turn on Cooper ice nucleation scheme if true <code>false</code>"},{"location":"EAM/user-guide/namelist_parameters/#rapid-radiative-transfer-model-for-gcms","title":"Rapid Radiative Transfer Model for GCMs","text":"Parameter Description Default value <code>iradsw</code> Frequency for updating shortwave fluxes and heating rate; iradsw &gt; 0 interpreted as number of timesteps, iradsw &lt; 0 interpreted as hours; iradsw = 0 disables shortwave radiation entirely <code>-1</code> <code>iradlw</code> Frequency for updating longwave fluxes and heating rate; iradlw &gt; 0 interpreted as number of timesteps, iradlw &lt; 0 interpreted as hours; iradlw = 0 disables longwave radiation entirely <code>-1</code> <code>irad_always</code> Length of time in timesteps (irad_always &gt; 0) or in hours (irad_always &lt; 0) SW/LW radiation will be run continuously from the start of an initial or restart run <code>0</code> <code>use_rad_dt_cosz</code> If true, use the radiation dt for all cosz calculations; calculates solar zenith angle averaged over a time step. In default model solar zenith angle is held constant over time <code>.true.</code>  (set by namelist_defaults_eam.xml for default physics) <code>spectralflux</code> Calculate fluxes (up and down) per band <code>.false.</code> <code>liqcldoptics</code> Choice of cloud optical property parameterization for liquid clouds. Valid options are \u2018slingo\u2019 or \u2018gammadist\u2019 <code>gammadist</code> <code>icecldoptics</code> Choice of cloud optical property parameterization for ice clouds. Valid options are \u2018ebertcurry\u2019 or \u2018mitchell\u2019 <code>mitchell</code>"},{"location":"EAM/user-guide/namelist_parameters/#zhang-and-mcfarlane-deep-convection-scheme","title":"Zhang and McFarlane deep convection scheme","text":"ZM Parameters Description Default value <code>zmconv_ke</code> Tunable evaporation efficiency in ZM deep convection scheme <code>2.5E-6</code> <code>zmconv_tau</code> Relaxation time in ZM deep convection scheme <code>3600</code> <code>zmconv_dmpdz</code> Parcel fractional mass entrainment rate <code>-0.7E-3</code> <code>zmconv_alfa</code> Initial downdraft mass flux fraction <code>0.14D0</code> <code>zmconv_tiedke_add</code> Temperature perturbation of an air parcel <code>0.8D0</code> <code>zmconv_cape_cin</code> Number of negative buoyancy regions that are allowed <code>1</code> dCAPE-ULL Parameters Description Default value <code>zmconv_trigdcape_ull</code> DCAPE trigger along with unrestricted launching level for ZM deep convection scheme <code>.true.</code> <code>zmconv_trig_dcape_only</code> DCAPE only trigger for ZM deep convection scheme <code>.false.</code>  If true, zmconv_trigdcape_ull must be false to use the dcape only trigger. <code>zmconv_trig_ull_only</code> Use unrestricted launching level (ULL) only trigger for ZM deep convection scheme <code>.false.</code>  If true, zmconv_trigdcape_ull must be false to use the ull only trigger. Conv. micro. Parameters Description Default value <code>zmconv_microp</code> Convective microphysics option in ZM convection scheme <code>true</code> <code>zmconv_auto_fac</code> Cloud droplet-rain autoconversion enhancement factor in the convective microphysics scheme <code>7.0</code> <code>zmconv_accr_fac</code> Cloud droplet-rain accretion enhancement factor in the convective microphysics scheme <code>1.5</code> <code>zmconv_micro_dcs</code> Autoconversion size threshold for cloud ice to snow (m) <code>150.E-6</code> Mass flux adj. Parameters Description Default value <code>zmconv_clos_dyn_adj</code> Apply mass flux adjustment to ZM convection scheme <code>true</code> MCSP Parameters Description Default value <code>zmconv_mcsp_heat_coeff</code> MCSP heating coefficient <code>0.3</code> <code>zmconv_mcsp_moisture_coeff</code> MCSP moisture coefficient <code>0.0</code> <code>zmconv_mcsp_uwind_coeff</code> MCSP zonal wind coefficient <code>0.0</code> <code>zmconv_mcsp_vwind_coeff</code> MCSP meridional wind coefficient <code>0.0</code>"},{"location":"EAM/user-guide/namelist_parameters/#cloud-feedback-model-intercomparison-project-cfmip-observation-simulator-package","title":"Cloud Feedback Model Intercomparison Project (CFMIP) Observation Simulator Package","text":"Parameter Description Default value <code>cosp_lite</code> This namelist sets cosp_ncolumns=10 and cosp_nradsteps=3 (appropriate for COSP statistics derived from seasonal averages), and runs MISR, ISCCP, MODIS, and CALIPSO lidar simulators (cosp_lmisr_sim=.true.,cosp_lisccp_sim=.true., cosp_lmodis_sim=.true.,cosp_llidar_sim=.true.). <code>false</code> <ol> <li> <p>S. M. Burrows, O. Ogunro, A. A. Frossard, L. M. Russell, P. J. Rasch, and S. M. Elliott. A physically based framework for modeling the organic fractionation of sea spray aerosol from bubble film Langmuir equilibria. Atmospheric Chemistry and Physics, 14(24):13601\u201313629, December 2014. URL: https://acp.copernicus.org/articles/14/13601/2014/ (visited on 2024-03-29), doi:10.5194/acp-14-13601-2014.\u00a0\u21a9</p> </li> <li> <p>B. Gantt, N. Meskhidze, M. C. Facchini, M. Rinaldi, D. Ceburnis, and C. D. O'Dowd. Wind speed dependent size-resolved parameterization for the organic mass fraction of sea spray aerosol. Atmospheric Chemistry and Physics, 11(16):8777\u20138790, August 2011. URL: https://acp.copernicus.org/articles/11/8777/2011/acp-11-8777-2011.html (visited on 2024-04-25), doi:10.5194/acp-11-8777-2011.\u00a0\u21a9</p> </li> <li> <p>Patricia K. Quinn, Timothy S. Bates, Kristen S. Schulz, D. J. Coffman, A. A. Frossard, L. M. Russell, W. C. Keene, and D. J. Kieber. Contribution of sea surface carbon pool to organic matter enrichment in sea spray aerosol. Nature Geoscience, 7(3):228\u2013232, March 2014. URL: https://www.nature.com/articles/ngeo2092 (visited on 2024-04-25), doi:10.1038/ngeo2092.\u00a0\u21a9</p> </li> <li> <p>Matteo Rinaldi, Sandro Fuzzi, Stefano Decesari, Salvatore Marullo, Rosalia Santoleri, Antonello Provenzale, Jost Von Hardenberg, Darius Ceburnis, Aditya Vaishya, Colin D. O'Dowd, and Maria Cristina Facchini. Is chlorophyll\u2010 \\textit a the best surrogate for organic matter enrichment in submicron primary marine aerosol? Journal of Geophysical Research: Atmospheres, 118(10):4964\u20134973, May 2013. URL: https://agupubs.onlinelibrary.wiley.com/doi/10.1002/jgrd.50417 (visited on 2024-04-25), doi:10.1002/jgrd.50417.\u00a0\u21a9</p> </li> </ol>"},{"location":"EAMxx/","title":"The C++ E3SM Atmosphere Model (EAMxx)","text":"<p>Some nice introductory text goes here! Maybe some figures, too. Who knows?!</p> <ul> <li>The User Guide explains how to run EAMxx, both in   its standalone configuration and within E3SM.</li> <li>The Developer Guide contains all the information needed   to contribute to the development of EAMxx.</li> <li>The Technical Guide contains all the technical   information about EAMxx.</li> </ul>"},{"location":"EAMxx/common/eamxx_params/","title":"EAMxx runtime configurable parameters","text":""},{"location":"EAMxx/common/eamxx_params/#atmosphere-processes-parameters","title":"Atmosphere Processes Parameters","text":""},{"location":"EAMxx/common/eamxx_params/#sc_import","title":"sc_import","text":"<ul> <li>sc_import::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>sc_import::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>sc_import::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>sc_import::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>sc_import::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>sc_import::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#sc_export","title":"sc_export","text":"<ul> <li>sc_export::prescribed_constants::fields:  <ul> <li>description: MISSING </li> <li>type: array(string)  </li> </ul> </li> <li> <p>sc_export::prescribed_constants::values:  </p> <ul> <li>description: MISSING </li> <li>type: array(real)  </li> </ul> </li> <li> <p>sc_export::prescribed_from_file::fields:  </p> <ul> <li>description: MISSING </li> <li>type: array(string)  </li> </ul> </li> <li>sc_export::prescribed_from_file::files:  <ul> <li>description: MISSING </li> <li>type: array(string)  </li> </ul> </li> <li> <p>sc_export::prescribed_from_file::fields_alt_name:  </p> <ul> <li>description: MISSING </li> <li>type: array(string)  </li> </ul> </li> <li> <p>sc_export::number_of_subcycles:  </p> <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>sc_export::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>sc_export::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>sc_export::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>sc_export::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>sc_export::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#homme","title":"homme","text":"<ul> <li>homme::Moisture:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>homme::BfbHash:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>homme::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>homme::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>homme::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>homme::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>homme::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>homme::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#p3","title":"p3","text":"<ul> <li>p3::do_prescribed_ccn:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>p3::do_predict_nc:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>p3::enable_column_conservation_checks:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>p3::max_total_ni:  <ul> <li>description: maximum total ice concentration (sum of all categories)  </li> <li>type: real  </li> <li>constraints: gt 0  </li> </ul> </li> <li>p3::tables:  <ul> <li>description: MISSING </li> <li>type: array(file)  </li> </ul> </li> <li>p3::p3_autoconversion_prefactor:  <ul> <li>description: P3 autoconversion_prefactor (scale factor in autoconversion)  </li> <li>type: real  </li> </ul> </li> <li>p3::p3_mu_r_constant:  <ul> <li>description: P3 mu_r_constant (rain shape parameter in gamma drop-size distribution)  </li> <li>type: real  </li> </ul> </li> <li>p3::p3_spa_to_nc:  <ul> <li>description: P3 spa_to_nc (scaling factor for turning CCN into nc in SPA)  </li> <li>type: real  </li> </ul> </li> <li>p3::p3_k_accretion:  <ul> <li>description: P3 k_accretion (scaling factor on accretion)  </li> <li>type: real  </li> </ul> </li> <li>p3::p3_eci:  <ul> <li>description: P3 eci (liquid/ice collision/collection coefficient)  </li> <li>type: real  </li> </ul> </li> <li>p3::p3_eri:  <ul> <li>description: P3 eri (ice/rain collision/collection coefficient)  </li> <li>type: real  </li> </ul> </li> <li>p3::p3_rho_rime_min:  <ul> <li>description: P3 rho_rime_min (riming density maximum)  </li> <li>type: real  </li> </ul> </li> <li>p3::p3_rho_rime_max:  <ul> <li>description: P3 rho_rime_max (riming density minimum)  </li> <li>type: real  </li> </ul> </li> <li>p3::p3_a_imm:  <ul> <li>description: P3 a_imm (drop freezing exponent )  </li> <li>type: real  </li> </ul> </li> <li>p3::p3_dep_nucleation_exponent:  <ul> <li>description: P3 dep_nucleation_exponent (deposition nucleation)  </li> <li>type: real  </li> </ul> </li> <li>p3::p3_ice_sed_knob:  <ul> <li>description: P3 ice_sed_knob (ice fall speed)  </li> <li>type: real  </li> </ul> </li> <li>p3::p3_d_breakup_cutoff:  <ul> <li>description: P3 d_breakup_cutoff (rain self collection and breakup)  </li> <li>type: real  </li> </ul> </li> <li>p3::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>p3::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>p3::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>p3::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>p3::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>p3::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#shoc","title":"shoc","text":"<ul> <li>shoc::enable_column_conservation_checks:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>shoc::check_flux_state_consistency:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>shoc::lambda_low:  <ul> <li>description: minimum value of stability correction.  </li> <li>type: real  </li> </ul> </li> <li>shoc::lambda_high:  <ul> <li>description: maximum value of stability correction.  </li> <li>type: real  </li> </ul> </li> <li>shoc::lambda_slope:  <ul> <li>description: slope of change from lambda_low to lambda_high.  </li> <li>type: real  </li> </ul> </li> <li>shoc::lambda_thresh:  <ul> <li>description: stability threshold for which to apply more stability correction.  </li> <li>type: real  </li> </ul> </li> <li>shoc::thl2tune:  <ul> <li>description: Temperature variance tuning factor  </li> <li>type: real  </li> </ul> </li> <li>shoc::qw2tune:  <ul> <li>description: Moisture variance tuning factor  </li> <li>type: real  </li> </ul> </li> <li>shoc::qwthl2tune:  <ul> <li>description: Temperature moisture covariance  </li> <li>type: real  </li> </ul> </li> <li>shoc::w2tune:  <ul> <li>description: Vertical velocity variance  </li> <li>type: real  </li> </ul> </li> <li>shoc::length_fac:  <ul> <li>description: Length scale factor  </li> <li>type: real  </li> </ul> </li> <li>shoc::c_diag_3rd_mom:  <ul> <li>description: Third moment vertical velocity damping factor  </li> <li>type: real  </li> </ul> </li> <li>shoc::Ckh:  <ul> <li>description: Eddy diffusivity coefficient for heat  </li> <li>type: real  </li> </ul> </li> <li>shoc::Ckm:  <ul> <li>description: Eddy diffusivity coefficient for momentum  </li> <li>type: real  </li> </ul> </li> <li>shoc::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>shoc::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>shoc::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>shoc::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>shoc::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>shoc::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#cldfraction","title":"cldFraction","text":"<ul> <li>cldFraction::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>cldFraction::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>cldFraction::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>cldFraction::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>cldFraction::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>cldFraction::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#mam4_optics","title":"mam4_optics","text":"<ul> <li>mam4_optics::mam4_mode1_physical_properties_file:  <ul> <li>description: File containing optical properties for MAM4 mode 1, accumulation mode  </li> <li>type: file  </li> </ul> </li> <li>mam4_optics::mam4_mode2_physical_properties_file:  <ul> <li>description: File containing optical properties for MAM4 mode 2, Aitken mode  </li> <li>type: file  </li> </ul> </li> <li>mam4_optics::mam4_mode3_physical_properties_file:  <ul> <li>description: File containing optical properties for MAM4 mode 3, coarse mode  </li> <li>type: file  </li> </ul> </li> <li>mam4_optics::mam4_mode4_physical_properties_file:  <ul> <li>description: File containing optical properties for MAM4 mode 4, p-carbon mode  </li> <li>type: file  </li> </ul> </li> <li>mam4_optics::mam4_water_refindex_file:  <ul> <li>description: File containing optical properties for aerosol water  </li> <li>type: file  </li> </ul> </li> <li>mam4_optics::mam4_soa_physical_properties_file:  <ul> <li>description: File containing optical properties for secondary organic aerosol  </li> <li>type: file  </li> </ul> </li> <li>mam4_optics::mam4_dust_physical_properties_file:  <ul> <li>description: File containing optical properties for dust  </li> <li>type: file  </li> </ul> </li> <li>mam4_optics::mam4_nacl_physical_properties_file:  <ul> <li>description: File containing optical properties for sea salt  </li> <li>type: file  </li> </ul> </li> <li>mam4_optics::mam4_so4_physical_properties_file:  <ul> <li>description: File containing optical properties for sulfate  </li> <li>type: file  </li> </ul> </li> <li>mam4_optics::mam4_pom_physical_properties_file:  <ul> <li>description: File containing optical properties for primary organic aerosol  </li> <li>type: file  </li> </ul> </li> <li>mam4_optics::mam4_bc_physical_properties_file:  <ul> <li>description: File containing optical properties for black carbon  </li> <li>type: file  </li> </ul> </li> <li>mam4_optics::mam4_mom_physical_properties_file:  <ul> <li>description: File containing optical properties for marine organic aerosol  </li> <li>type: file  </li> </ul> </li> <li>mam4_optics::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>mam4_optics::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>mam4_optics::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>mam4_optics::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>mam4_optics::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>mam4_optics::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#nudging","title":"nudging","text":"<ul> <li>nudging::nudging_filenames_patterns:  <ul> <li>description: MISSING </li> <li>type: array(string)  </li> </ul> </li> <li>nudging::nudging_fields:  <ul> <li>description: List of fields to be nudged.  Note, syntax of 'A:B' represents nudging field A with data from field B in files, syntax of 'A' assumes that nudging file has the same variables name as EAMxx  </li> <li>type: array(string)  </li> </ul> </li> <li>nudging::nudging_timescale:  <ul> <li>description: Timescale to apply nudging tendencies, 0: full replacement, &gt;0: actual timescale  </li> <li>type: integer  </li> </ul> </li> <li>nudging::use_nudging_weights:  <ul> <li>description: Flag for nudging weights option  </li> <li>type: logical  </li> </ul> </li> <li>nudging::nudging_weights_file:  <ul> <li>description: weights that relax the nudging fields update  </li> <li>type: string  </li> </ul> </li> <li>nudging::skip_vert_interpolation:  <ul> <li>description: Flag for skipping vertical interpolation  </li> <li>type: logical  </li> </ul> </li> <li>nudging::source_pressure_type:  <ul> <li>description: Flag for how source pressure levels are handled in the nudging dataset.     TIME_DEPENDENT_3D_PROFILE: The dataset contains a time-varying pressure profile, variable name 'p_mid' with dimensions (time,ncol,nlev).     STATIC_1D_VERTICAL_PROFILE: The dataset uses a fixed in time single pressure profile, variable name 'p_lev' with dimension (nlev).  </li> <li>type: string  </li> <li>valid values: TIME_DEPENDENT_3D_PROFILE,STATIC_1D_VERTICAL_PROFILE  </li> </ul> </li> <li>nudging::source_pressure_file:  <ul> <li>description: If STATIC_1D_VERTICAL_PROFILE, this is an optional arg to point to a file with the source pressure levels defined.     Default is to look for p_levs in the first nudging_filenames_patterns file  </li> <li>type: string  </li> </ul> </li> <li>nudging::nudging_refine_remap_mapfile:  <ul> <li>description: Refine-remapping mapfile from the source nudging dataset to the physics grid  </li> <li>type: string  </li> </ul> </li> <li>nudging::nudging_refine_remap_vert_cutoff:  <ul> <li>description: A vertical cutoff to go with refine-remap logic (in units of p_mid) where the nudging is turned off above it (closer to the surface)  </li> <li>type: real  </li> </ul> </li> <li>nudging::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>nudging::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>nudging::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>nudging::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>nudging::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>nudging::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#mlcorrection","title":"mlcorrection","text":"<ul> <li>mlcorrection::ML_model_path_tq:  <ul> <li>description: Path to pre-trained ML model for temperature and specific humidity  </li> <li>type: string  </li> </ul> </li> <li>mlcorrection::ML_model_path_uv:  <ul> <li>description: Path to pre-trained ML model for wind fields  </li> <li>type: string  </li> </ul> </li> <li>mlcorrection::ML_model_path_sfc_fluxes:  <ul> <li>description: Path to pre-trained ML model for surface fluxes  </li> <li>type: string  </li> </ul> </li> <li>mlcorrection::ML_output_fields:  <ul> <li>description: ML correction output variables, the following variables are supported: T_mid,qv,u,v  </li> <li>type: array(string)  </li> </ul> </li> <li>mlcorrection::ML_correction_unit_test:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>mlcorrection::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>mlcorrection::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>mlcorrection::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>mlcorrection::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>mlcorrection::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>mlcorrection::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#testonly","title":"testOnly","text":"<ul> <li>testOnly::my_param:  <ul> <li>description: MISSING </li> <li>type: array(integer)  </li> </ul> </li> <li>testOnly::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>testOnly::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>testOnly::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>testOnly::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>testOnly::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>testOnly::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#spa","title":"spa","text":"<ul> <li>spa::spa_remap_file:  <ul> <li>description: File containing mapping data from the grid of spa_data_file to the model grid. Unused if the grid is the same.  </li> <li>type: file  </li> </ul> </li> <li>spa::spa_data_file:  <ul> <li>description: File containing aerosol data. Must be on same grid as the atm, or a coarser one  </li> <li>type: file  </li> </ul> </li> <li>spa::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>spa::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>spa::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>spa::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>spa::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>spa::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#rrtmgp","title":"rrtmgp","text":"<ul> <li>rrtmgp::rrtmgp_coefficients_file_sw:  <ul> <li>description: MISSING </li> <li>type: file  </li> </ul> </li> <li>rrtmgp::rrtmgp_coefficients_file_lw:  <ul> <li>description: MISSING </li> <li>type: file  </li> </ul> </li> <li>rrtmgp::rrtmgp_cloud_optics_file_sw:  <ul> <li>description: MISSING </li> <li>type: file  </li> </ul> </li> <li>rrtmgp::rrtmgp_cloud_optics_file_lw:  <ul> <li>description: MISSING </li> <li>type: file  </li> </ul> </li> <li>rrtmgp::column_chunk_size:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>rrtmgp::active_gases:  <ul> <li>description: MISSING </li> <li>type: array(string)  </li> </ul> </li> <li>rrtmgp::ch4vmr:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>rrtmgp::co2vmr:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>rrtmgp::n2ovmr:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>rrtmgp::f11vmr:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>rrtmgp::f12vmr:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>rrtmgp::n2vmr:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>rrtmgp::covmr:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>rrtmgp::orbital_year:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>rrtmgp::orbital_eccentricity:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>rrtmgp::orbital_obliquity:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>rrtmgp::orbital_mvelp:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>rrtmgp::rad_frequency:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>rrtmgp::do_aerosol_rad:  <ul> <li>description: Flag to turn on/off considering aerosols in radiation calculations  </li> <li>type: logical  </li> </ul> </li> <li>rrtmgp::enable_column_conservation_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>rrtmgp::extra_clnclrsky_diag:  <ul> <li>description: Flag to turn on/off an extra clean-clear-sky (with neither clouds nor aerosols) radiation call  </li> <li>type: logical  </li> </ul> </li> <li>rrtmgp::extra_clnsky_diag:  <ul> <li>description: Flag to turn on/off an extra clean-sky (with no aerosols) radiation call  </li> <li>type: logical  </li> </ul> </li> <li>rrtmgp::do_subcol_sampling:  <ul> <li>description: Flag to turn on/off subcolumn sampling of optical properties; if false treat cells as either completely clear or cloudy  </li> <li>type: logical  </li> </ul> </li> <li>rrtmgp::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>rrtmgp::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>rrtmgp::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>rrtmgp::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>rrtmgp::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>rrtmgp::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#mac_aero_mic","title":"mac_aero_mic","text":"<ul> <li>mac_aero_mic::atm_procs_list:  <ul> <li>description: List of atm processes in this atm process group  </li> <li>type: array(string)  </li> </ul> </li> <li>mac_aero_mic::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> </ul> </li> <li>mac_aero_mic::Type:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>mac_aero_mic::schedule_type:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> <li>valid values: Sequential  </li> </ul> </li> <li>mac_aero_mic::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>mac_aero_mic::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>mac_aero_mic::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>mac_aero_mic::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>mac_aero_mic::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#cosp","title":"cosp","text":"<ul> <li>cosp::cosp_subcolumns:  <ul> <li>description: Number of subcolumns to use for COSP simulators; cosp_subcolumns=1 implies no subcolumn sampling  </li> <li>type: MISSING </li> </ul> </li> <li>cosp::cosp_frequency:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>cosp::cosp_frequency_units:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> <li>valid values: steps,hours  </li> </ul> </li> <li>cosp::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>cosp::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>cosp::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>cosp::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>cosp::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>cosp::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#tms","title":"tms","text":"<ul> <li>tms::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>tms::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>tms::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>tms::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>tms::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>tms::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#physics","title":"physics","text":"<ul> <li>physics::atm_procs_list:  <ul> <li>description: List of atm processes in this atm process group  </li> <li>type: array(string)  </li> </ul> </li> <li>physics::Type:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>physics::schedule_type:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> <li>valid values: Sequential  </li> </ul> </li> <li>physics::number_of_subcycles:  <ul> <li>description: how many times to subcycle this atm process  </li> <li>type: MISSING </li> <li>constraints: gt 0  </li> </ul> </li> <li>physics::enable_precondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>physics::enable_postcondition_checks:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>physics::repair_log_level:  <ul> <li>description: MISSING </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn  </li> </ul> </li> <li>physics::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>physics::compute_tendencies:  <ul> <li>description: list of computed fields for which this process will back out tendencies  </li> <li>type: array(string)  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#initial-conditions-parameters","title":"Initial Conditions Parameters","text":"<ul> <li>initial_conditions::Filename:  <ul> <li>description: MISSING </li> <li>type: file  </li> </ul> </li> <li>initial_conditions::topography_filename:  <ul> <li>description: MISSING </li> <li>type: file  </li> </ul> </li> <li>initial_conditions::phis:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::restart_casename:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::surf_evap:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::precip_liq_surf_mass:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::precip_ice_surf_mass:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::cldfrac_liq:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::sgs_buoy_flux:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::eddy_diff_mom:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::T_prev_micro_step:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::qv_prev_micro_step:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::qr:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::nr:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::qm:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::bm:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::ni_activated:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::nc_nuceat_tend:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::tke:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::sfc_alb_dir_vis:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::sfc_alb_dir_nir:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::sfc_alb_dif_vis:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::sfc_alb_dif_nir:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::surf_sens_flux:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::surf_lw_flux_up:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::surf_mom_flux:  <ul> <li>description: MISSING </li> <li>type: array(real)  </li> </ul> </li> <li>initial_conditions::qc:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::qi:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::nc:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::ni:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::o3_volume_mix_ratio:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>initial_conditions::perturbed_fields:  <ul> <li>description: IC fields (with level dimension) to apply a random perturbation to based on the parameters below.  </li> <li>type: array(string)  </li> </ul> </li> <li>initial_conditions::generate_perturbation_random_seed:  <ul> <li>description: Whether or not to generate a random seed for perturbation.  </li> <li>type: logical  </li> </ul> </li> <li>initial_conditions::perturbation_random_seed:  <ul> <li>description: Random seed used for perturbation. Will be overridded by generate_perturbation_random_seed=true.  </li> <li>type: integer  </li> </ul> </li> <li>initial_conditions::perturbation_limit:  <ul> <li>description: Defines a range [1-x, 1+x] which perturbation will be taken from.  </li> <li>type: real  </li> </ul> </li> <li>initial_conditions::perturbation_minimum_pressure:  <ul> <li>description: Minimum pressure (relative to a reference level pressure profile) for which perturbation will be applied.  </li> <li>type: real  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#atmosphere-driver-parameters","title":"Atmosphere Driver Parameters","text":"<ul> <li>driver_options::atmosphere_dag_verbosity_level:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>driver_options::atm_log_level:  <ul> <li>description: Verbosity level for the atm logger  </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn,error  </li> </ul> </li> <li>driver_options::atm_flush_level:  <ul> <li>description: Verbosity level that triggers automatic flush of the atm logger  </li> <li>type: string  </li> <li>valid values: trace,debug,info,warn,error  </li> </ul> </li> <li>driver_options::output_to_screen:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>driver_options::mass_column_conservation_error_tolerance:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>driver_options::energy_column_conservation_error_tolerance:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>driver_options::column_conservation_checks_fail_handling_type:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>driver_options::check_all_computed_fields_for_nans:  <ul> <li>description: MISSING </li> <li>type: logical  </li> </ul> </li> <li>driver_options::property_check_data_fields:  <ul> <li>description: list of additional data fields to output in property checks (only for physics grid)  </li> <li>type: array(string)  </li> </ul> </li> <li>driver_options::enable_iop:  <ul> <li>description: Enable intensive observation period. Currently the only use case is DP-EAMxx  </li> <li>type: logical  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#scorpio-parameters","title":"Scorpio Parameters","text":"<ul> <li>Scorpio::output_yaml_files:  <ul> <li>description: MISSING </li> <li>type: array(string)  </li> </ul> </li> <li>Scorpio::model_restart::filename_prefix:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> </ul>"},{"location":"EAMxx/common/eamxx_params/#homme-namelist","title":"Homme namelist","text":"<ul> <li>ctl_nl::cubed_sphere_map:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::disable_diagnostics:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::dt_remap_factor:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> <li>constraints: ge 1  </li> </ul> </li> <li>ctl_nl::dt_tracer_factor:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> <li>constraints: ge 1  </li> </ul> </li> <li>ctl_nl::hv_ref_profiles:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::hypervis_order:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::hypervis_scaling:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::hypervis_subcycle:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::hypervis_subcycle_tom:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::hypervis_subcycle_q:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::nu:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::nu_top:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::pgrad_correction:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::se_ftype:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> <li>valid values: 0,2  </li> </ul> </li> <li>ctl_nl::se_geometry:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::se_limiter_option:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::se_ne:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::se_ne_x:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::se_ne_y:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::se_lx:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::se_ly:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::se_nsplit:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::se_partmethod:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::se_topology:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::se_tstep:  <ul> <li>description: MISSING </li> <li>type: real  </li> </ul> </li> <li>ctl_nl::statefreq:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::theta_advect_form:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::theta_hydrostatic_mode:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::tstep_type:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::vert_remap_q_alg:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::transport_alg:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::vtheta_thresh:  <ul> <li>description: MISSING </li> <li>type: MISSING </li> </ul> </li> <li>ctl_nl::internal_diagnostics_level:  <ul> <li>description: MISSING </li> <li>type: integer  </li> </ul> </li> <li>ctl_nl::mesh_file:  <ul> <li>description: MISSING </li> <li>type: file  </li> </ul> </li> </ul>"},{"location":"EAMxx/common/installation/","title":"Installation","text":"<p>Follow these simple instructions to build and test EAMxx's standalone configuration for yourself. This document makes use of the following paths:</p> <ul> <li><code>${RUN_ROOT_DIR}</code>: the root directory where EAMxx is built and run</li> <li><code>${EAMXX_SRC_DIR}</code>: the directory into which you've cloned the <code>scream</code> repo</li> </ul> <p>EAMxx's configuration and build system is based on CMake. CMake has been around a while and has gained a lot of traction in recent years, especially in the HPC community. It has good reference documentation, but it can be tricky to use if you've never encountered it. Ask a EAMxx team member for help if you're stuck on something CMake-related.</p> <p>If you see a <code>CMakeLists.txt</code> files or a file with a <code>.cmake</code> suffix, that's just part of the build system. You might also see files with <code>CTest</code> as part of their name. These files are related to CTest, CMake's testing tool.</p>"},{"location":"EAMxx/common/installation/#prerequisites","title":"Prerequisites","text":"<p>First, make sure you're on one of the machines supported by EAMxx, or that you have the following software installed:</p> <ul> <li>A working MPI installation (typically MPICH or Open-MPI)</li> <li>CMake and GNU Make</li> <li>A working set of C, C++, and Fortran compilers</li> <li>A recent version of Git</li> <li>A working installation of NetCDF,   including both C and   Fortran libraries.</li> </ul>"},{"location":"EAMxx/common/installation/#setting-up-your-environment","title":"Setting Up Your Environment","text":""},{"location":"EAMxx/common/installation/#configuring-and-building-scream","title":"Configuring and Building Scream","text":""},{"location":"EAMxx/common/installation/#1-start-from-a-trustworthy-commit","title":"1. Start From a Trustworthy Commit","text":"<p>First, make sure you've cloned the EAMxx repo (including all submodules) to <code>EAMXX_SRC_DIR</code> using the following command:</p> <pre><code>git clone --recurse-submodules https://github.com/E3SM-Project/scream\n</code></pre> <p>If you have already cloned the project and forgot to type <code>--recurse-submodules</code>, you can change to <code>$EAMXX_SRC_DIR</code> and using the following command to initialize, fetch and checkout all submodules:</p> <pre><code>git submodule update --init --recursive\n</code></pre> <p>If you're running a branch that's not <code>master</code>, check out this branch with</p> <pre><code>git checkout &lt;branch&gt;\n</code></pre>"},{"location":"EAMxx/common/installation/#2-configure-your-eamxx-build","title":"2. Configure Your EAMxx Build","text":"<p>Change to your <code>$RUN_ROOT_DIR</code> directory and use CMake to configure your build.</p> <p>If you're building SCREAM on one of our supported platforms, you can tell CMake to use the appropriate machine file using the <code>-C</code> flag. Machine files are located in <code>$EAMXX_SRC_DIR/components/eamxx/cmake/machine-files</code>. Take a look and see whether your favorite machine has one.</p> <p>For example, to configure SCREAM on the Quartz machine at LLNL:</p> <pre><code>cd $RUN_ROOT_DIR\ncmake \\\n    -DCMAKE_CXX_COMPILER=$(which mpicxx) \\\n    -DCMAKE_BUILD_TYPE=Debug \\\n    -C ${EAMXX_SRC_DIR}/components/eamxx/cmake/machine-files/quartz.cmake \\\n    ${EAMXX_SRC_DIR}/components/eamxx\n</code></pre> <p>If you're building on a machine that doesn't have a ready-made machine file, you can try configuring your build by manually passing options to CMake. This usually looks something like the following, which configures EAMxx to compile CPU code using Kokkos's OpenMP backend: <pre><code>cd $RUN_ROOT_DIR\ncmake \\\n    -D CMAKE_BUILD_TYPE=Debug \\\n    -D CMAKE_C_COMPILER=mpicc \\\n    -D CMAKE_CXX_COMPILER=mpicxx \\\n    -D CMAKE_Fortran_COMPILER=mpif90 \\\n    -D MPIEXEC_EXECUTABLE=`which mpiexec` \\\n    -D EKAT_MPI_NP_FLAG:STRING=-n \\\n    -D SCREAM_DYNAMICS_DYCORE=HOMME \\\n    -D SCREAM_DOUBLE_PRECISION:BOOL=ON \\\n    -D SCREAM_INPUT_ROOT:PATH=/path/to/scream-input \\\n    -D Kokkos_ENABLE_DEBUG=TRUE \\\n    -D Kokkos_ENABLE_AGGRESSIVE_VECTORIZATION=OFF \\\n    -D Kokkos_ENABLE_SERIAL=ON \\\n    -D Kokkos_ENABLE_OPENMP=ON \\\n    -D Kokkos_ENABLE_LIBDL=OFF \\\n    -D Kokkos_ENABLE_PROFILING=OFF \\\n    -D Kokkos_ENABLE_DEPRECATED_CODE=OFF \\\n    -D KOKKOS_ENABLE_ETI:BOOL=OFF \\\n    -D NetCDF_C_PATHS=/path/to/netcdf-c-dir \\\n    -D NetCDF_Fortran_PATHS=/path/to/netcdf-f90-dir \\\n    -D PnetCDF_C_PATHS=/path/to/pnetcdf-dir \\\n    -D PnetCDF_Fortran_PATHS=/path/to/pnetcdf-f90-dir \\\n    ${EAMXX_SRC_DIR}/components/eamxx\n</code></pre></p> <p>In either case, EAMxx requires MPI-aware compilers. Let's examine these options (only some of which are required on any given machine) to make sure we know what they do:</p> <ul> <li><code>CMAKE_BUILD_TYPE</code>: specifies whether you are building EAMxx in a   developer-friendly configuration (<code>Debug</code>), for a production run (<code>Release</code>)   or for performance profiling or some other specialized purpose. Typically,   you'll set this option to <code>Debug</code> or <code>Release</code>.</li> <li><code>CMAKE_{C,CXX,Fortran}_COMPILER</code>: the name of the command used to invoke an   MPI-enabled C, C++, or Fortran compiler to build EAMxx</li> <li><code>MPIEXEC_EXECUTABLE</code>: the name of the command used to run EAMxx using MPI,   typically <code>mpiexec</code> or <code>mpirun</code>, but possibly different depending on your   desired machine</li> <li><code>EKAT_MPI_NP_FLAG</code>: the flag passed to <code>MPIEXEC_EXECUTABLE</code> that you use to   specify the number of desired MPI processes. This is typically <code>-n</code> for   <code>mpiexec</code> and <code>-np</code> for <code>mpirun</code>.</li> <li><code>SCREAM_DYNAMICS_DYCORE</code>: specifies the dycore used for configuring EAMxx,   which is <code>NONE</code> if you are not configuring EAMxx to run its dycore-related   tests, or <code>HOMME</code> if you want to use HOMMExx</li> <li><code>SCREAM_DOUBLE_PRECISION</code>: indicates whether EAMxx's <code>Real</code> type is a   double-precision (<code>ON</code>) or single-precision (<code>OFF</code>) floating point type</li> <li><code>SCREAM_INPUT_ROOT</code>: specifies the location of the top-level folder that   stores input data files for EAMxx. This folder is populated with input files   which are downloaded automatically during EAMxx's build process.</li> <li>The Kokkos-related build options (most of which begin with <code>Kokkos_</code>) are   described in the Kokkos Wiki</li> <li><code>NetCDF_C_PATHS</code>: specifies one or more folders in which the NetCDF C library   and headers are installed. In the simplest configuration, the headers should   be located in <code>${NetCDF_C_PATHS}/include</code> and the library should live in   <code>${NetCDF_C_PATHS}/lib</code>.</li> <li><code>NetCDF_Fortran_PATHS</code>: specifies one or more folders in which the NetCDF   Fortran library and modules are installed. Analogous to <code>${NetCDF_C_PATHS}</code>,   <code>.mod</code> files should be in <code>${NetCDF_Fortran_PATHS}/include</code>, and the library   should be installed in <code>${NetCDF_Fortran_PATHS}/lib</code>.</li> <li><code>PnetCDF_C_PATHS</code>: specifies one or more folders in which the pNetCDF C   library and headers are installed, analogous to <code>NetCDF_C_PATHS</code>.</li> <li><code>PnetCDF_Fortran_PATHS</code>: specifies one or more folders in which the pNetCDF   Fortran library and modules are installed, analogous to   <code>NetCDF_Fortran_PATHS</code>.</li> </ul> <p>Above, we've configured <code>Debug</code> builds to make it easier to find and fix errors. For performance testing, you should configure a <code>Release</code> build and make use of other options, depending on your architecture.</p>"},{"location":"EAMxx/common/installation/#3-build-scream","title":"3. Build SCREAM","text":"<p>Now you can build SCREAM from that same directory:</p> <pre><code>make -j\n</code></pre> <p>The <code>-j</code> flag tells Make to use threads to compile in parallel. If you like, you can set the number of threads by passing it as an argument to <code>-j</code> (e.g. <code>make -j8</code>).</p>"},{"location":"EAMxx/common/installation/#running-tests","title":"Running Tests","text":"<p>You can run EAMxx's tests to make sure your build works by following the instructions here.</p>"},{"location":"EAMxx/developer/","title":"SCREAM Developer Guide","text":""},{"location":"EAMxx/developer/ci_nightly/","title":"Continuous Integration and Nightly Testing","text":"<ul> <li>Autotester quick overview</li> <li>Nightly overview, CDash</li> </ul>"},{"location":"EAMxx/developer/cime_testing/","title":"Full Model Testing","text":"<p>Quickly review CIME test infrastructure and how EAMxx uses it</p> <ul> <li>test types, specifiers (<code>_LnX</code>,<code>_D</code>,<code>_PMxN</code>,..), grids, compsets, test-mods</li> <li>available grids/compsets for EAMxx, and where to find them</li> <li>how to add atmchange in <code>shell_commands</code> test mods</li> </ul>"},{"location":"EAMxx/developer/field/","title":"Fields","text":""},{"location":"EAMxx/developer/field/#field","title":"Field","text":"<p>In EAMxx, a <code>Field</code> is a data structure holding two things: pointers to the data and pointers to metadata. Both the data and metadata are stored in <code>std::shared_ptr</code> instances, to ensure consistency across all copies of the field. This allows for fast shallow copy semantic for this class.</p> <p>The data is stored on both CPU and device memory (these may be the same, depending on the Kokkos backend). In EAMxx, we always assume and guarantee that the device data is up to date. That implies that the data be explicitly synced to host before using it on host, and explicitly synced to device after host manipulation, in order to ensure correctness. In order to access the data, users must use the <code>get_view</code> method, which takes two template arguments: the data type, and an enum specifying whether CPU or device data is needed. The data type is used to reinterpret the generic pointer stored inside to a view of the correct scalar type and layout. It is a possibly const-qualified type, and if the field was marked as \"read-only\", the method ensures that the provided data type is const. A read-only field can be created via the <code>getConst</code> method, which returns an identical copy of the field, but marked as read-only. The enum specifying host or device data is optional, with device being the default.</p> <p>The metadata is a collection of information on the field, such as name, layout, units, allocation size, and more. Part of the metadata is immutable after creation (e.g., name, units, or layout), while some metadata can be partially or completely modified. The metadata is contained in the <code>FieldHeader</code> data structure, which contains four parts:</p> <ul> <li><code>FieldIdentifier</code>: stores the field's name, layout, units, data type, and name of the grid where it's defined.   These information are condensed in a single string, that can be used to uniquely identify a field,   allowing to distinguish between different version of the same field. The layout is stored in the <code>FieldLayout</code>   data structure, which includes:<ul> <li>the field tags: stored as a <code>std::vector&lt;FieldTag&gt;</code>, they give context to the field's extents.</li> <li>the field dims: stored both as a <code>std::vector&lt;int&gt;</code>, as well as a 1d <code>Kokkos::View</code>.</li> </ul> </li> <li><code>FieldTracking</code>: stores information on the usage of the field, as well as its possible connections to other   fields. In particular, the tracked items are:<ul> <li>the field time stamp: the time stamp when the field was last updated.</li> <li>the field accumulation start time: used for fields that are accumulated over several time steps   (or time step subcycles). For instance, it allows to reconstruct fluxes from raw accumulations.</li> <li>the providers/customers: lists of atmosphere processes (see below) that respectively require/compute   the field in their calculations.</li> <li>the field groups: a list of field groups that this field belongs too. Field groups are used to access   a group of fields without explicit prior knowledge about the number and/or names of the fields.</li> </ul> </li> <li><code>FieldAllocProp</code>: stores information about the allocation. While the field is not yet allocated, users can   request special allocations for the field, for instance to accommodate packing (for SIMD), which may   require padding. Upon allocation, this information is then used by the Field structure to extract the   actual data, wrapped in a properly shaped <code>Kokkos::View</code>. The alloc props are also responsible of tracking   additional information in case the field is a \"slice\" of a higher-dimensional one, a fact that can affect   how the data is accessed.</li> <li>Extra data: stored as a <code>std::map&lt;std::string,ekat::any&gt;</code>, allows to catch any metadata that does not fit   in the above structures. This is a last resort structure, intended to accommodate the most peculiar   corner cases, and should be used sparingly.</li> </ul>"},{"location":"EAMxx/developer/grid/","title":"Grids and Remappers","text":""},{"location":"EAMxx/developer/grid/#grids-and-remappers","title":"Grids and Remappers","text":"<p>In EAMxx, the <code>AbstractGrid</code> is an interface used to access information regarding the horizontal and vertical discretization. The most important information that the grid stores is:</p> <ul> <li>the number of local/global DOFs: these are the degrees of freedom of the horizontal grid only. Here,   local/global refers to the MPI partitioning.</li> <li>the DOFs global IDs (GIDs): a list of GIDs of the DOFs on the current MPI rank, stored as a Field</li> <li>the local IDs (LIDs) to index list: this list maps the LID of a DOF (that is, the position of the DOF   in the GID list) to a \"native\" indexing system for that DOF. For instance, a <code>PointGrid</code> (a class derived from   <code>AbstractGrid</code>) is a simple collection of points, so the \"native\" indexing system coincides with the LIDs.   However, for a <code>SEGrid</code> (a derived class, for spectral element grids), the \"native\" indexing is a triplet   <code>(ielem,igp,jgp)</code>, specifying the element index, and the two indices of the Gauss point within the element.</li> <li>geometry data: stored as a <code>std::map&lt;std::string,Field&gt;</code>, this represent any data that is intrinsically   linked to the grid (either along the horizontal or vertical direction), such as lat/lon coordinates,   vertical coordinates, area associated with the DOF.</li> </ul> <p>Grids can also be used to retrieve the layout of a 2d/3d scalar/vector field, which allows certain downstream classes to perform certain operations without assuming anything on the horizontal grid.</p> <p>In general, grid objects are passed around the different parts of EAMxx as const objects (read-only). The internal data can only be modified during construction, which usually is handled by a <code>GridsManager</code> object.</p>"},{"location":"EAMxx/developer/io/","title":"Input-Output","text":"<p>In EAMxx, I/O is handled through the SCORPIO library, currently a submodule of E3SM. The <code>scream_io</code> library within eamxx allows to interface the EAMxx infrastructure classes with the SCORPIO library.</p>"},{"location":"EAMxx/developer/kokkos_ekat/","title":"Building Blocks","text":"<p>Here we can discuss EKAT, Kokkos, and all of the highly-technical non-scientific stuff that makes our heads hurt.</p>"},{"location":"EAMxx/developer/kokkos_ekat/#kokkos-views","title":"Kokkos Views","text":""},{"location":"EAMxx/developer/kokkos_ekat/#vectorization-packs","title":"Vectorization: Packs","text":""},{"location":"EAMxx/developer/kokkos_ekat/#fields-and-the-field-manager","title":"Fields and the Field Manager","text":""},{"location":"EAMxx/developer/kokkos_ekat/#preconditions-postconditions-and-invariants","title":"Preconditions, Postconditions, and Invariants","text":""},{"location":"EAMxx/developer/managers/","title":"Managers","text":""},{"location":"EAMxx/developer/managers/#fieldmanager-and-gridsmanager","title":"FieldManager and GridsManager","text":""},{"location":"EAMxx/developer/processes/","title":"Atmospheric Processes","text":"<p>In EAMxx, the <code>AtmosphereProcess</code> (AP) is a class representing a portion of the atmosphere timestep algorithm. In simple terms, an AP is an object that given certain input fields performs some calculations to compute some output fields.</p> <p>TODO: describe init sequcene (e.g., the process of requesting fields), base class main       interfaces/capabilities (e.g., subcycling), class expectations (e.g., must update fields on physics grid)</p> <p>Here is a list of currently implemented atmosphere processes. TODO: add links to papers/github-repos, and a SMALL description * p3: Microphysics, blah blah * SHOC: Macrophysics/Turbulence, blah * rrtmgp: Radiation, blah * spa: prescribed aerosols, blah blah * surface coupling: blah * mam: prognostic aerosols, blah blah * nudging: This process is responsible for nudging the model simulation given a set of files with a target nudged state.</p>"},{"location":"EAMxx/developer/source_tree/","title":"EAMxx's Source Tree","text":"<p>All EAMxx-specific code can be found in <code>components/eamxx</code> within the EAMxx repo. Here's how things are organized:</p> <ul> <li><code>cime_config</code>: Tools and XML files for integrating EAMxx with E3SM via the   CIME framework.</li> <li><code>cmake</code>: CMake functions and macros used by the configuration/build system.</li> <li><code>data</code>: Data files used by our tests.</li> <li><code>docs</code>: Documentation for the EAMxx project, including design documents,   instructions for building and testing EAMxx, and this document.</li> <li><code>scripts</code>: Miscellaneous scripts that implement workflows for running tests   and analyzing performance.</li> <li><code>src</code>: All C++ source code (and any bridges to Fortran) for EAMxx are stored   here. We describe the contents of this directory in greater detail below.</li> <li><code>tests</code>: Implements standalone, end-to-end tests for various EAMxx   components (RRTMG, HOMME, P3, SHOC, etc).</li> </ul> <p>In addition, you'll notice the following files in <code>components/eamxx</code>:</p> <ul> <li><code>CMakeLists.txt</code>: The CMake file that defines EAMxx's configuration/build   system.</li> <li><code>CTestConfig.cmake</code>: This CTest file contains parameters that determine how   our test results are reported to the E3SM CDash Site.</li> <li><code>README.md</code>: EAMxx's top-level README file, which describes the project and   its purpose.</li> <li><code>mkdocs.yml</code>: The configuration file for mkdocs,   the tool we currently use to build and publish our documentation.</li> </ul>"},{"location":"EAMxx/developer/source_tree/#the-src-directory","title":"The <code>src</code> Directory","text":"<p>Herein l\u0456es the source code for EAMxx. Broadly, here's where things are:</p> <ul> <li><code>control</code>: Contains the atmosphere driver and basic tests for it.</li> <li><code>dynamics</code>: Here's where HOMME lives within EAMxx, along with code for   interfacing with it using EAMxx's data structures.</li> <li><code>mct_coupling</code>: Glue code for embedding EAMxx within E3SM as an atmosphere   component using the MCT coupler.</li> <li><code>physics</code>: Source code for physics-related atmospheric processes, including</li> <li><code>p3</code>: The C++/Kokkos implementation of P3 microphysics within EAMxx.</li> <li><code>shoc</code>: The C++/Kokkos implementation of SHOC macrophysics within EAMxx.</li> <li><code>rrtmgp</code>: A stub for the radiation processes as represented in EAMxx.</li> <li><code>share</code>: Utilities and data structures common to these processes.</li> <li><code>share</code>: Utilities used by various components within EAMxx. Of note:</li> <li><code>io</code>: EAMxx's interface to the SCORPIO     library.</li> <li><code>diagnostics</code>: A collection of simple classes used to compute diagnostic   quantities.</li> </ul> <p>Each of these directories contains a <code>CMakeLists.txt</code> file for defining how things are build, and a <code>tests/</code> subdirectory that houses relevant unit and verification tests.</p> <p>You'll also see some other files in the <code>src/</code> directory itself, such as</p> <ul> <li><code>scream_config.h.in</code>: A template for generating a C++ header file with   EAMxx configuration information.</li> </ul>"},{"location":"EAMxx/developer/standalone_testing/","title":"Standalone EAMxx Testing","text":"<p>In this section we describe our testing methodology for standalone EAMxx configurations. We use several types of tests</p> <ul> <li>Unit tests are individual test programs that demonstrate that a small set   of code performs a single function or a set of related functions. We use   a C++ unit testing framework called Catch2   to implement unit tests.</li> <li>Property (verification) tests are test programs that configure code that   demonstrates that a part of EAMxx (for example, an atmospheric physics   parameterization or the dynamical core) is able to produce an answer that   satisfies some physical constraint or matches a known solution under specific   circumstances.</li> <li>Fortran-C++ \"bit-for-bit\" (BFB) tests are test programs, often implemented   as unit tests, that demonstrate that a set of C++ code ported from Fortran   produces bit-for-bit identical results to its Fortran counterpart, provided   certain compiler options are enabled (such as \"strict\" floating-point   arithmetic).</li> <li>Test Suites are named collections of tests that can be run on demand using   the ctest command.</li> </ul> <p>We also support a <code>test-all-scream</code> configuration that runs all of the standalone tests for an EAMxx configuration.</p>"},{"location":"EAMxx/developer/standalone_testing/#running-eamxxs-tests-with-ctest","title":"Running EAMxx's Tests with CTest","text":"<p>Before running the tests, generate a baseline file:</p> <pre><code>cd $RUN_ROOT_DIR\nmake baseline\n</code></pre> <p>The tests will run, automatically using the baseline file, which is located in the CMake-configurable path <code>${SCREAM_BASELINES_DIR}</code>. By default, this path is set to an invalid string. If baselines tests are enabled, we check that a valid path has been provided.</p> <p>To run all of SCREAM's tests, make sure you're in <code>$RUN_ROOT_DIR</code> and type</p> <pre><code>ctest -VV\n</code></pre> <p>This runs everything and reports results in an extra-verbose (<code>-VV</code>) manner.</p> <p>You can also run subsets of the SCREAM tests. For example, to run only the P3 regression tests (again, from the <code>$RUN_ROOT_DIR</code> directory), use</p> <pre><code>ctest -R p3_regression\n</code></pre>"},{"location":"EAMxx/developer/standalone_testing/#grouping-tests-with-labels","title":"Grouping Tests with Labels","text":"<p>We can create groupings of tests by using labels. For example, we have a <code>driver</code> label that runs tests for SCREAM's standalone driver. You can see a list of available labels by typing</p> <pre><code>ctest --print-labels\n</code></pre> <p>To see which tests are associated with a given label (e.g. <code>driver</code>), use</p> <pre><code>ctest -L driver -N\n</code></pre>"},{"location":"EAMxx/developer/standalone_testing/#eamxx-test-suites","title":"EAMxx Test Suites","text":""},{"location":"EAMxx/developer/standalone_testing/#the-p3_regression-suite","title":"The <code>p3_regression</code> Suite","text":"<p><code>p3_regression</code> uses a baseline file to compare any new or altered implementations with our P3 Fortran reference implementation. If you're working on the C++/Kokkos implementation, you can invoke any new tests to the function <code>Baseline::run_and_cmp</code> in <code>${SCREAM_SRC_DIR}/components/eamxx/p3/tests/p3_run_and_cmp.cpp</code>.</p> <p>If the reference Fortran implementation changes enough that a new baseline file is required, make sure to let other SCREAM team members know, in order to minimize disruptions.</p>"},{"location":"EAMxx/developer/style_guide/","title":"SCREAM C++ Style Guide","text":"<p>Here's our style guide. Let the holy wars begin!</p>"},{"location":"EAMxx/developer/style_guide/#types","title":"Types","text":""},{"location":"EAMxx/developer/style_guide/#functions-and-methods","title":"Functions and Methods","text":""},{"location":"EAMxx/developer/style_guide/#variables","title":"Variables","text":""},{"location":"EAMxx/technical/","title":"SCREAM Technical Guide","text":"<p>SCREAM contributors and maintainers will add detailed technical information about SCREAM here.</p>"},{"location":"EAMxx/technical/aerocom_cldtop/","title":"The AeroCOM algorithm","text":"<p>The goal of the AeroCOM algorithm is to calculate properties at cloud top based on the AeroCOM recommendation. There are two main parts of the algorithm: probabilistically determining \"cloud top\" and then \"calculating properties\" at said cloud top.</p> <p>We treat model columns independently, so we loop over all columns in parallel. We then loop over all layers in serial (due to needing an accumulative product), starting at 2 (second highest) layer because the highest is assumed to have no clouds. Let's take a photonic approach from above the model top. Let's say that \\(p_{k}\\) is the probability of a photon passing through the layer \\(k\\). We follow the maximum-random overlap assumption. In all cases, we assume the cloudiness (or cloudy fraction) is completely opaque.</p> <p>We assume the highest layer has no clouds, thus the \\(p_{k} = 1\\) for the highest layer. Note that \\(p_{k}\\) is initialized as 1 for all layers. We also clip the cloudy fraction \\(C_{i,k}\\) to ensure that \\(C_{i,k} \\in [0+\\epsilon, 1-\\epsilon]\\), where \\(\\epsilon = 0.001\\). Starting at the second highest layer, \\(k+1\\), we check if some \"cloudy\" conditions are met. These conditions are now arbitrarily defined by a cloudiness threshold of \\(\\epsilon\\) (i.e., \\(C_{i,k}&gt;\\epsilon\\)) and a non-zero threshold on the total (both liquid and ice) droplet number concentration (i.e., \\(cQ_{i,k} + iQ_{i,k} &gt; 0\\)). If the conditions are met, we estimate the cloud-top cloud fraction using an accumulative product following the maximum-random overlap assumption.</p> \\[c_{i} = 1 - \\prod_{k=2}^{K} p_{k} = 1 - \\prod_{k=2}^{K} \\frac{1 - \\max(C_{i,k}, C_{i,k-1})}{1-C_{i,k-1}}\\] <p>In order to estimate cloud-top properties, we weight by the probability of \"remaining cloudiness\" or \\(p_{k-1} - p_{k}\\).</p> Type Equation cloud property \\(x_{i} = \\sum_{k=2}^{K} X_{i,k} \\Phi_{i,k} (p_{k-1} - p_{k})\\) cloud content \\(x_{i} = \\sum_{k=2}^{K} \\Phi_{i,k} (p_{k-1} - p_{k})\\) other property \\(x_{i} = \\sum_{k=2}^{K} X_{i,k} (p_{k-1} - p_{k})\\) <p>In the above, \\(\\Phi_{i,k}\\) is the thermodynamic phase defined by the cloud droplet number concentration ratios.</p> \\[i\\Phi_{i,k} = \\frac{iQ_{i,k}}{iQ_{i,k} + cQ_{i,k}}\\] \\[c\\Phi_{i,k} = \\frac{cQ_{i,k}}{iQ_{i,k} + cQ_{i,k}}\\] <p>The thermodynamic phase is used only for cloud properties (e.g., cloud-top cloud droplet number concentration) or cloud content (e.g., cloud liquid content). Further, \\(X_{i,k}\\) is the three-dimensional cloud property of interest which is needed if we are converting a property from three-dimensional (\\(X\\)) to its two-dimensional counterpart (\\(x\\)). \"Other\" properties here include temperature and pressure which are not dependent on the thermodynamic phase.</p> <p>A helpful references: R\u00e4is\u00e4nen, P., Barker, H. W., Khairoutdinov, M. F., Li, J., &amp; Randall, D. A. (2004). Stochastic generation of subgrid\u2010scale cloudy columns for large\u2010scale models. Quarterly Journal of the Royal Meteorological Society: A journal of the atmospheric sciences, applied meteorology and physical oceanography, 130(601), 2047-2067.</p>"},{"location":"EAMxx/technical/clean_clear_sky/","title":"Clean- and clean-clear-sky diagnostics","text":"<p>In order to decompose the aerosol effective radiative forcing, additional diagnostic radiation calls are needed. These extra diagnostics are optionally added to the main radiation call. The extra diagnostics are:</p> <ul> <li>Clean-clear-sky fluxes: the fluxes that would be present if there were neither aerosols nor clouds, and are calculated by adding an additional radiation call at the very beginning of the logic before the optics class is endowed with aerosol and cloud properties.</li> <li>Clean-sky fluxes: the fluxes that would be present if there were no aerosols, and are calculated by adding an additional radiation call after substantiating an additional optics class, but not endowing it with aerosol properties.</li> </ul> <p>It was necessary to add an additional optics class because the original optics class is endowed with aerosols before clouds (in order to calculate the clear-sky fluxes). The extra calls are controlled by runtime flags <code>extra_clnclrsky_diag</code> and <code>extra_clnsky_diag</code> (they take either <code>true</code> or <code>false</code> as their values).</p>"},{"location":"EAMxx/user/","title":"SCREAM User Guide","text":"<p>For the time being, see our public confluence EAMxx user guide</p>"},{"location":"EAMxx/user/coarse_nudging/","title":"Nudging from coarse data","text":"<p>Because EAMxx is designed to support ultra-high resolutions (in fact, that was the initial reason for its inception), it is not feasible to produce nudging data at the same resolution. Instead, in EAMxx, it is possible to nudge from coarse data. This is done by remapping the coarse data provided by the user to the runtime physics grid of EAMxx. In order to enable nudging from coarse data, the user must provide nudging data at the coarse resolution desired and an appropriate     ncremap-compatible mapping file.</p>"},{"location":"EAMxx/user/coarse_nudging/#example-setup","title":"Example setup","text":"<p>A user can produce coarse nudging data from running EAMxx or EAM at a ne30pg2 or any other applicable resolution. Additionally, several users in the E3SM projects have produced nudging data at the ne30pg2 resolution from the MERRA2 and ERA5 datasets. A limitation for now is that the nudging data must be provided explicitly, either as one file or as a list of files. This can be problematic for long list of files, but we are working on a solution to this problem.</p> <p>Let's say that the nudging data is provided as one file in the following path: <code>/path/to/nudging_data_ne4pg2_L72.nc</code>. Then, a mapping file is provided as <code>/another/path/to/mapping_file_ne4pg2_to_ne120pg2.nc</code>. Then if the physics grid is ne120pg2, the user must enable the nudging process, specify the nudging files, and provide the specifies the nudging data and a remap file. In other words, the following options are needed:</p> <pre><code>./atmchange atm_procs_list=(sc_import,nudging,homme,physics,sc_export)\n./atmchange nudging_fields=U,V\n./atmchange nudging_filenames_patterns=/path/to/nudging_data_ne4pg2_L72.nc\n./atmchange nudging_refine_remap_mapfile=/another/path/to/mapping_file_ne4pg2_to_ne120pg2.nc\n</code></pre>"},{"location":"EAMxx/user/model_input/","title":"Model input","text":"<p>TODO: explain how defaults XML, atmchange/atmquery, buildml, and input.yaml work.</p> <p>Here is a list of the currently configurable runtime parameters for EAMxx.</p>"},{"location":"EAMxx/user/model_output/","title":"Model output","text":"<p>EAMxx allows the user to configure the desired model output via YAML files, with each YAML file associated to a different output file.</p>"},{"location":"EAMxx/user/model_output/#basic-output-yaml-file-syntax","title":"Basic output YAML file syntax","text":"<p>The following is an example of a simple output request.</p> <pre><code>%YAML 1.1\n---\nfilename_prefix: my_output\nAveraging Type: Average\nMax Snapshots Per File: 10\nFields:\n  Physics:\n    Field Names:\n      - T_mid\n      - qv\n  Dynamics:\n    Field Names:\n      - dp3d_dyn\n      - omega_dyn\noutput_control:\n  Frequency: 6\n  frequency_units: nhours\n</code></pre> <p>Notice that lists can be equivalently specified in YAML as <code>Field Names: [f1, f2, f3]</code>. The user can specify fields to be outputted from any of the grids used in the simulation. In the example above, we requested fields from both the Physics and Dynamics grid. The other parameters are</p> <ul> <li> <p><code>Averaging Type</code>: how the fields are integrated in time before being saved. Valid   options are</p> <ul> <li>Instant: no integration, each time frame saved corresponds to instantaneous values   of the fields</li> <li>Average/Max/Min: the fields undergo the corresponding operation over the time   interval specified in the <code>output_control</code> section. In the case above, each snapshot   saved to file corresponds to an average of the output fields over 6h windows.</li> </ul> </li> <li> <p><code>filename_prefix</code>: the prefix of the output file, which will be created in the run   directory. The full filename will be <code>$prefix.$avgtype.$frequnits_x$freq.$timestamp.nc</code>,   where $timestamp corresponds to the first snapshot saved in the file for Instant output,   or the beginning of the first averaging window for the other averaging types</p> </li> <li><code>Max Snapshots Per File</code>: specifies how many time snapshots can be put in a file. Once   this number is reached, EAMxx will close the file and open a new one.</li> <li><code>Frequency</code>: how many units of time are between two consecutive writes to file. For   Instant output the fields are \"sampled\" at this frequency, while for other averaging   types the fields are \"integrated\" in time over this window</li> <li><code>frequency_units</code>: units of the output frequency. Valid options are <code>nsteps</code> (the   number of atmosphere time steps), <code>nsecs</code>, <code>nmins</code>, <code>nhours</code>, <code>ndays</code>, <code>nmonths</code>,   <code>nyears</code>.</li> </ul>"},{"location":"EAMxx/user/model_output/#diagnostic-output","title":"Diagnostic output","text":"<p>In addition to the fields computed by EAMxx as part of the timestep, the user can request to output derived quantities, which will be computed on the fly by the I/O interface of EAMxx. There are two types of diagnostic outputs:</p> <ul> <li> <p>quantities computed as a function of EAMxx fields. These are simply physical quantities   that EAMxx does not keep in persistent storage. As of August 2023, the available   derived quantities are (case sensitive):</p> <ul> <li><code>PotentialTemperature</code></li> <li><code>AtmosphereDensity</code></li> <li><code>Exner</code></li> <li><code>VirtualTemperature</code></li> <li><code>z_int</code></li> <li><code>z_mid</code></li> <li><code>geopotential_int</code></li> <li><code>geopotential_mid</code></li> <li><code>dz</code></li> <li><code>DryStaticEnergy</code></li> <li><code>SeaLevelPressure</code></li> <li><code>LiqWaterPath</code></li> <li><code>IceWaterPath</code></li> <li><code>VapWaterPath</code></li> <li><code>RainWaterPath</code></li> <li><code>RimeWaterPath</code></li> <li><code>ShortwaveCloudForcing</code></li> <li><code>LongwaveCloudForcing</code></li> <li><code>RelativeHumidity</code></li> <li><code>ZonalVapFlux</code></li> <li><code>MeridionalVapFlux</code></li> <li><code>precip_liq_surf_mass_flux</code></li> <li><code>precip_ice_surf_mass_flux</code></li> <li><code>precip_total_surf_mass_flux</code></li> <li><code>surface_upward_latent_heat_flux</code></li> </ul> </li> <li> <p>lower-dimensional slices of a field. These are hyperslices of an existing field or of   another diagnostic output. As of August 2023, given a field X, the available options   are:</p> <ul> <li><code>X_at_lev_N</code>: slice the field <code>X</code> at the N-th vertical level index. Recall that   in EAMxx N=0 corresponds to the model top.</li> <li><code>X_at_model_bot</code>, <code>X_at_model_top</code>: special case for top and bottom of the model.</li> <li><code>X_at_Ymb</code>, <code>X_at_YPa</code>, <code>X_at_YhPa</code>: interpolates the field <code>X</code> at a vertical position   specified by the give pressure <code>Y</code>. Available units are <code>mb</code> (millibar), <code>Pa</code>, and <code>hPa</code>.</li> <li><code>X_at_Ym</code>: interpolates the field <code>X</code> at a vertical height of <code>Y</code> meters.</li> </ul> </li> </ul>"},{"location":"EAMxx/user/model_output/#remapped-output","title":"Remapped output","text":"<p>The following options can be used to to save fields on a different grid from the one they are computed on.</p> <ul> <li><code>horiz_remap_file</code>: a path to a map file (as produced by <code>ncremap</code>) between the grid   where the fields are defined and a coarser grid. EAMxx will use this to remap fields   on the fly, allowing to reduce the size of the output file. Note: with this feature,   the user can only specify fields from a single grid.</li> <li><code>vertical_remap_file</code>: similar to the previous option, this map file is used to   refine/coarsen fields in the vertical direction.</li> <li><code>IOGrid</code>: this parameter can be specified inside one of the grids sections, and will   denote the grid (which must exist in the simulation) where the fields must be remapped   before being saved to file. This feature is really only used to save fields on the   dynamics grid without saving twice the DOFs at the interface of two spectral elements.   In fact, native output from the Dynamics grid would produce <code>6*num_elems*ngp*ngp</code>,   where <code>ngp</code> is the number of Gauss points along each axis in the 2d spectral element.   Note: this feature cannot be used along with the horizontal/vertical remapper.</li> </ul>"},{"location":"EAMxx/user/model_output/#add-output-stream-to-a-cime-case","title":"Add output stream to a CIME case","text":"<p>In order to tell EAMxx that a new output stream is needed, one must add the name of the yaml file to be used to the list of yaml files that EAMxx will process. From the case folder, after <code>case.setup</code> has run, one can do</p> <pre><code>./atmchange output_yaml_files=/path/to/my/yaml/file\n</code></pre> <p>to specify a single yaml file, or</p> <pre><code>./atmchange output_yaml_files+=/path/to/my/yaml/file\n</code></pre> <p>to append to the list of yaml files.</p>"},{"location":"EAMxx/user/model_output/#important-notes","title":"Important notes","text":"<ul> <li>The user should not specify a path to a file in <code>$RUNDIR/data</code>. EAMxx will put a copy of the specified yaml files in that directory, pruning any existing copy of that file. This happens every time that <code>buildnml</code> runs; in particular, it happens during <code>case.submit</code>.</li> <li>As a consequence of the above, the user should not modify the generated yaml files   that are in <code>$RUNDIR/data</code>, since any modification will be lost on the next run   of <code>buildnml</code>. To modify output parmeters, the user should modify the yaml file   that was specified with the <code>atmchange</code> command.</li> <li>EAMxx will parse the yaml file and expand any string of the form $VAR, by looking   for the value of the variable VAR in the CIME case. If VAR is not a valid CIME   variable, an error will be raised.</li> </ul>"},{"location":"ELM/","title":"The E3SM Land Model (ELM)","text":"<p>Some introductory text here</p> <ul> <li>The ELM User Guide explains how to control ELM when its running within E3SM and how to run in Coupler-bypass mode</li> <li>The ELM Developer Guide explains ELM data structures and how to develop new code.</li> <li>The ELM Technical Guide explains the science behind ELM's code</li> </ul>"},{"location":"ELM/dev-guide/","title":"Developer Guide","text":"<p>This guide contains information for developing ELM and MOSART.</p>"},{"location":"ELM/dev-guide/#_1","title":"Developer Guide","text":"<ul> <li>Testing development branches: Generating baselines and comparing new development against baselines</li> </ul>"},{"location":"ELM/dev-guide/testing/","title":"Testing","text":"<p>When a developer is ready to issue a PR to integrate their new developments into E3SM's <code>master</code> branch, they need to test their code development to ensure the new development does not introduce unexpected bugs. A land developer needs to atleast run the <code>e3sm_land_developer</code> test suite that involves following two steps: </p> <ul> <li>Step-1: Generate the baselines using the hash on <code>master</code> that was the starting point of the    development branch, and</li> <li>Step-2: Switch to the development branch and re-run the test suite to compare against    the baselines generated in Step-1.</li> </ul> <p>For the purpose of these document, let's assume the developer branch is <code>bishtgautam/lnd/emi-example</code>.</p>"},{"location":"ELM/dev-guide/testing/#step-1-generate-baselines","title":"Step-1: Generate Baselines","text":"<p>Find the starting hash on <code>master</code> by switching to the developer branch and looking at the Git graph.</p> <pre><code>cd &lt;e3sm-dir&gt;\n\n# Switch to your branch\ngit checkout bishtgautam/lnd/emi-example\n\n# Let's look at the graph\ngit log --oneline --decorate --graph\n* 9a2cd8459 (HEAD -&gt; bishtgautam/lnd/emi-example, origin/bishtgautam/lnd/emi-example) Updates the Stub EM code\n* d11fb8c52 Adds a readme and makefile for EMI Demo code\n* 15a0e4b8d Minor update to the EMI demo code\n* 63e2f6dcd Minor fix to ELM configure script\n* 551fc79cc Updates ELM stub and demo code to use CNCarbonStateType\n* 8c9d41f87 Adds code to exchange CNCarbonStateType\n* 0000ded51 Minor fix\n* 2baa4ebec Adds fixes to cmake\n* f77ae2cea Rename few cmake files\n* b48b66dd6 Adds a demo for a Stub EM\n* fa94aea0d Fixes length of variable to store name of EMI data\n* cca0e0be1 Adds capability to print all EMI Data in a list\n* beb1fe9ee Adds .gitignore files for EMI\n* 301acfe7a Renames ExternalModelInterfaceDataMod.F90\n* f0eb5b40b Renames ExternalModelInterfaceDataDimensionMod.F90\n* 076100882 Restructures ELM's EMI directory\n*   cfb7fc2b2 Merge branch 'qzhu-lbl/lnd/ch4_inundation_bugfix' (PR #2814)\n|\\\n| * ec99b1cb4 (origin/qzhu-lbl/lnd/ch4_inundation_bugfix)  - fix ch4 inundatation parameter read in bug\n* |   c59c98116 Merge branch 'darincomeau/mpaso/enable_eddystats' (PR #2821)\n|\\ \\\n| * | c21bb46a4 Turn on eddy stats for oEC60to30v3 and oEC60to30v3wLI ocn grids by default\n* | |   a2dd2fce5 Merge pull request #2811 from E3SM-Project/jayeshkrishna/pio2_cime_changes\n</code></pre> <p>The above Git graph tells us that <code>bishtgautam/lnd/emi-example</code> started with the <code>cfb7fc2b2</code> hash on the <code>master</code>. So, we will generate the baselines using <code>cfb7fc2b2</code>. Checkout <code>cfb7fc2b2</code> and update the submodels via:</p> <pre><code>git checkout cfb7fc2b2\nNote: checking out 'cfb7fc2b2'.\n\nYou are in 'detached HEAD' state. You can look around, make experimental\nchanges and commit them, and you can discard any commits you make in this\nstate without impacting any branches by performing another checkout.\n\nIf you want to create a new branch to retain commits you create, you may\ndo so (now or later) by using -b with the checkout command again. Example:\n\n  git checkout -b &lt;new-branch-name&gt;\n\nHEAD is now at cfb7fc2b2... Merge branch 'qzhu-lbl/lnd/ch4_inundation_bugfix' (PR #2814)\n\ngit submodule update --init\n</code></pre> <p>Now we will use <code>cime/scripts/create_test</code> to generate baseline for the <code>e3sm_land_developer</code> test suite.</p> <pre><code>cd cime/scripts\n</code></pre> <p>A few things that you need to decide at this stage include the directory location where the baselines will be saved, the name and ID for the baselines, the project allocation that you will use for running the simulation, if you would like to receive email notifications about tests, etc.</p> <pre><code># Define the directory to hold the baseline \nexport MY_BASELINE_DIR=/global/cscratch1/sd/gbisht/e3sm_baselines\n\n# Do you want to use a name for the baseline? \n# One choice could be the git hash that is being used to generate the baselines.\nexport BASELINE_NAME=cfb7fc2b2\n\n# Let's set TEST_ID to be same as BASELINE_NAME\nexport TEST_ID=${BASELINE_NAME}\n\n# If you are a member of E3SM, you could use 'e3sm' project allocation\nexport PROJECT=e3sm\n\n# Set your email\nexport MAIL_USER=&lt;your-mail@something&gt;\n</code></pre> <p>Use <code>./create_test --help</code> to get a complete list of arguments. Below are some additional useful arguments for <code>./create_test</code>:</p> <pre><code># Other arguments\n# -v         : Verbose option\n# -g         : Generate the baseline\n# -q         : If you want to use a particular job queue (e.g. 'debug' queue on NERSC)\n# --walltime : Specify the wall time for jobs (e.g. 30 min is max allowable for 'debug' queue on NERSC)\n# --mail-user: If you want to receive emails about your jobs\n# --mail-type: When to receive emails. Options are: never, all, begin, end, fail.\n# -j         : Number of parallel jobs\n</code></pre> <p>Now run the <code>e3sm_land_developer</code></p> <pre><code>./create_test e3sm_land_developer  \\\n--baseline-root ${MY_BASELINE_DIR} \\\n-b ${BASELINE_NAME}                \\\n-t ${TEST_ID}                      \\\n-q regular                         \\\n-p ${PROJECT}                      \\\n--walltime 00:30:00                \\\n--mail-user $MAIL_USER             \\\n--mail-type all                    \\\n-g                                 \\\n-v                                 \\\n-j 4\n</code></pre> <p>The cases would be named <code>*.G.*</code> to denote one is generating the baselines. It will take a while to compile all the cases and submit the code. It can take a long time (&gt;30mins) for the test suite to run. To avoid interrupting the test suite in the middle, one can run the test suite within a <code>screen</code> command. After the cases have been successfully compiled and submitted, you can check that  status of test by running the <code>cs.status.${TEST_ID}</code> file that was created in the scratch directory.</p>"},{"location":"ELM/dev-guide/testing/#step-2-compare-against-previously-generated-baselines","title":"Step-2: Compare against previously generated baselines","text":"<p>Now, switch to the development branch and be sure to update submodules.</p> <pre><code>cd &lt;e3sm-dir&gt;\ngit checkout bishtgautam/lnd/emi-example\nPrevious HEAD position was cfb7fc2b2... Merge branch 'qzhu-lbl/lnd/ch4_inundation_bugfix' (PR #2814)\nSwitched to branch 'bishtgautam/lnd/emi-example'\nYour branch is up-to-date with 'origin/bishtgautam/lnd/emi-example'.\n\n# Checkout the appropriate submodules\ngit submodule update --init\n</code></pre> <p>Again initialize few settings.</p> <pre><code>cd cime/scripts\n\n# Let's use the settings as the last time\nexport MY_BASELINE_DIR=/global/cscratch1/sd/gbisht/e3sm_baselines\n\n# IMPORTANT: One needs to use the same BASELINE_NAME as in Step-1 because one wants\n#            to compare against the baselines previously generated in Step-1.\nexport BASELINE_NAME=cfb7fc2b2\n\n# You can use the hash at the tip of your branch as the ID\nexport TEST_ID=9a2cd8459\n</code></pre> <p>Run the test suite and compare (via <code>-c</code>) against previously generated baselines.</p> <pre><code>./create_test e3sm_land_developer  \\\n--baseline-root ${MY_BASELINE_DIR} \\\n-b ${BASELINE_NAME}                \\\n-t ${TEST_ID}                      \\\n-q debug                           \\\n--walltime 00:30:00                \\\n--mail-user $MAIL_USER             \\\n--mail-type all                    \\\n-c                                 \\\n-v                                 \\\n-j 4\n</code></pre> <p>The cases would be named <code>*.C.*</code> to denote one is comparing against previously generated baselines. Similar to the last time, a new <code>cs.status.${TEST_ID}</code> would be created and you can check the status of test by running it.</p>"},{"location":"ELM/tech-guide/","title":"Technical Guide","text":"<p>This Technical Guide describes the physics of ELM.</p> <ul> <li>TOP Parameterization: Parameterization of sub-grid topographical effects on solar radiation.</li> </ul>"},{"location":"ELM/tech-guide/top_solar_parameterization/","title":"Top solar parameterization","text":"<p>The TOP solar radiation parameterization in ELM accounts for the effects of sub-grid topography on solar radiation flux, including the shadow effects and multi-scattering between adjacent terrain<sup>1</sup>.</p>"},{"location":"ELM/tech-guide/top_solar_parameterization/#overview","title":"Overview","text":"<p>The incoming solar radiation for a flat surface is composed of direct radiation (\\(F_{dir}^{PP}\\)) from sun, diffuse radiation (\\(F_{dif}^{PP}\\)) from sky, and coupled radiation (\\(F_{couple}^{PP}\\)) that represents surface reflected radiation that is further reflected or scattered by atmospheric particles. ELM v1.0 and ELM v2.0 assume flat surfaces and accounts for \\(F_{dir}^{PP}\\) and \\(F_{dif}^{PP}\\), while neglecting \\(F_{couple}^{PP}\\). The solar radiation scheme of ELM v1.0 and  ELM v2.0 uses the two-stream approximations<sup>2</sup>. In contrast, the incoming solar radiation parametrization of Lee et al. (2011)<sup>3</sup> over mountainous regions includes five components (illustrated in Fig. 1): </p> <ol> <li>direct flux (\\(F_{dir}^{TOP}\\)) represents photons that are transmitted from the sun to the ground surface without encountering any reflection or scattering, </li> <li>the direct-reflected flux (\\(F_{rdir}^{TOP}\\)) represents photons that are not scattered photons reflected by surrounding terrain, </li> <li>diffuse flux (\\(F_{dif}^{TOP}\\)) represents photons that are scattered by atmospheric particles but are not reflected by the ground surface, </li> <li>diffuse-reflected flux (\\(F_{rdif}^{TOP}\\)) represents scattered photons reflected by surrounding terrain, and </li> <li>coupled flux (\\(F_{couple}^{TOP}\\)) represents remaining photons that are reflected multiple times or scattered by ground surface and atmospheric particles.</li> </ol> <p> </p>    Fig 1.: A schematic diagram of the five components of incoming solar radiation over mountains adapted from Lee et al. (2011)[^3]. The components of incoming solar radiation included are (1) direct flux, (2) diffuse flux, (3) direct-reflected flux, (4) diffuse-reflected flux, and (5) coupled flux. Local solar zenith angle (\u03b8), sky view factor (V<sub>d</sub>), and terrain configuration factor (C<sub>T</sub>) are also marked.    <p>\\(F_{dir}^{TOP}\\) is different from \\(F_{dir}^{PP}\\) because of the adjustment of solar illumination geometry and shadowing effects. \\(F_{dif}^{PP}\\) is different from \\(F_{dif}^{TOP}\\) because the sky hemisphere is occluded by adjacent terrain. Lee et al. (2011)<sup>3</sup> used the radiation fluxes over flat surfaces (i.e., \\(F_{dir}^{PP}\\) and \\(F_{dif}^{PP}\\)) to calculate the radiation fluxes over mountainous terrain based on sub-grid topographic factors. The relative deviation (\\(f_{dir}\\)) of direct flux between flat surfaces and mountains under the same atmospheric condition is defined as follows</p> \\[ \\label{eqn_fdir} f_{dir} = \\frac{F_{dir}^{TOP} - F_{dir}^{PP}}{F_{dir}^{PP}} \\] <p>The relative deviation (\\(f_{rdir}\\)) of direct-reflected flux over mountains to direct flux over flat surfaces is defined as follows:</p> \\[ \\label{eqn_frdir} f_{rdir} = \\frac{F_{rdir}^{TOP}}{F_{dir}^{PP}} \\] <p>Similarly, the relative deviations (\\(f_{dif}\\) and \\(f_{rdif}\\)) of diffuse and diffuse-reflected fluxes are expressed as follows:</p> \\[ \\label{eqn_fdif} f_{dif} = \\frac{F_{dif}^{TOP} - F_{dif}^{PP}}{F_{dir}^{PP}} \\] \\[ \\label{eqn_frdif} f_{rdif} = \\frac{F_{rdif}^{TOP}}{F_{dif}^{PP}} \\]"},{"location":"ELM/tech-guide/top_solar_parameterization/#multiple-linear-regression-model-of-lee-et-al-2011","title":"Multiple Linear Regression Model of Lee et al. (2011)","text":"<p>In theory, these four relative deviations (i.e., \\(f_{dir}\\), \\(f_{rdir}\\), \\(f_{dif}\\) and \\(f_{rdif}\\)) depend on solar illumination geometry and sub-grid topographic distribution. Based on a series of 3D Monte Carlo photon tracing simulations, Lee et al. (2011)<sup>3</sup> built a multiple linear regression parameterization to predict these four relative deviations well. The parameterization of Lee et al. (2011)<sup>3</sup> uses four variables that include the standard deviation of elevation (\\(\\sigma_h\\)) within a grid cell, grid-averaged values of cosine of the local solar incident angle (\\(\\mu\\)), sky view factor (\\(\\overline{V_d}\\)), and terrain configuration factor (\\(\\overline{C_T}\\)). Lee et al. (2011)<sup>3</sup> parameterization is given as follows:</p> \\[\\begin{bmatrix} f_{dir} \\\\ f_{dif} \\\\ f_{rdir} \\\\ f_{rdif} \\end{bmatrix} = \\mathbf{A} \\cdot  \\begin{bmatrix} \\overline{\\mu} \\\\ \\sigma_h \\\\ \\overline{V_d} \\\\ \\overline{C_T} \\\\ 1 \\end{bmatrix} \\] <p>where \\(\\mathbf{A}\\) represents the fitted parameter matrix, which was obtained based on the data generated by the 3D Monte Carlo simulations. The sky view factor (\\(V_d\\)) represents the portion of visible sky limited by surrounding terrain<sup>4</sup>, while the terrain configuration factor (\\(C_T\\)), the counterpart of the sky view factor, represents the portion of surrounding terrain which is visible to the ground target<sup>5</sup>. For an unobstructed infinite slope with the slope of \\(\\alpha\\) and aspect of \\(\\beta\\) and a given solar illumination geometry (i.e., solar zenith angle, \\(SZA\\), and solar azimuth angle, \\(SAA\\)), the cosine of the local solar incident angle (\\(\\mu\\)) can be calculated by</p> \\[ \\mu = \\cos(SZA) \\cos(\\alpha) + \\sin(SZA) \\sin(\\alpha) \\cos(SAA-\\beta) \\] <p>The \\(SZA\\) and \\(SAA\\) are assumed to be constant within a grid cell, but \\(\\alpha\\) and \\(\\beta\\) vary within a grid cell. The grid cell average solar incident angle, , can be expressed as follows:</p> \\[ \\begin{eqnarray} \\overline{\\mu} &amp;=&amp; \\overline{\\cos(SZA) \\cos(\\alpha)} + \\overline{\\sin(SZA) \\sin(\\alpha) \\cos(SAA-\\beta)} \\nonumber \\\\ &amp;=&amp; \\cos(SZA)  \\overline{\\cos(\\alpha)} +  \\sin(SZA) \\cos(SAA) + \\overline{\\sin(\\alpha) \\cos(\\beta)} + \\nonumber \\\\ &amp; &amp; \\sin(SZA) \\sin(SAA) + \\overline{\\sin(\\alpha) \\sin(\\beta)} \\end{eqnarray} \\] <p>where overlines represent grid-averaged values. To further improve the regression parameterization, \\(\\mu\\), \\(V_d\\), and \\(C_T\\) are normalized by \\(\\cos(\\alpha)\\). The land surface albedo is adjusted, instead of modifying incoming solar radiation, to maintain the surface energy conservation and the consistency between the surface and the first levels of atmosphere above the surface (Lee et al., 2015). Specifically, to keep the absorbed solar radiation of the ground surface unchanged, Lee et al. (2015) built the relationship between direct (\\(\\alpha_{dir}^{TOP}\\)) and diffuse (\\(\\alpha_{dif}^{TOP}\\)) albedo over mountains and those (\\(\\alpha_{dir}^{PP}\\) and \\(\\alpha_{dif}^PP\\)) over flat surfaces as follows:</p> \\[ \\begin{eqnarray} F_{dir}^{PP} (1 - \\alpha_{dir}^{TOP}) &amp;=&amp; (F_{dir}^{TOP} + F_{rdir}^{TOP})(1 - \\alpha_{dir}^{PP}) \\label{eqn_fdir_pp} \\\\ F_{dif}^{PP} (1 - \\alpha_{dif}^{TOP}) &amp;=&amp; (F_{dif}^{TOP} + F_{rdif}^{TOP})(1 - \\alpha_{dif}^{PP}) \\label{eqn_fdif_pp} \\end{eqnarray} \\] <p>Substituting Eqns \\eqref{eqn_fdir}-\\eqref{eqn_frdif} into Eqs \\eqref{eqn_fdir_pp}-\\eqref{eqn_fdif_pp} leads to</p> \\[ \\begin{eqnarray} \\alpha_{dir}^{TOP} &amp;=&amp; 1 - (1 + f_{dir} + f_{rdir}) (1 - \\alpha_{dir}^{PP}) \\label{eqn_alb_dir_top} \\\\ \\alpha_{dif}^{TOP} &amp;=&amp; 1 - (1 + f_{dif} + f_{rdif}) (1 - \\alpha_{dif}^{PP}) \\label{eqn_alb_dif_top} \\end{eqnarray} \\] <p>The parameterizations represented by Eqs. \\eqref{eqn_linear_reg}, \\eqref{eqn_alb_dir_top}, and \\eqref{eqn_alb_dif_top} are implemented in ELM to account for the sub-grid topographic effects on solar radiation fluxes.</p> <ol> <li> <p>Dalei Hao, Gautam Bisht, Yu Gu, Wei-Liang Lee, Kuo-Nan Liou, and L Ruby Leung. A parameterization of sub-grid topographical effects on solar radiation in the e3sm land model (version 1.0): implementation and evaluation over the tibetan plateau. Geoscientific Model Development, 14(10):6273\u20136289, 2021. doi:https://doi.org/10.5194/gmd-14-6273-2021.\u00a0\u21a9</p> </li> <li> <p>K. Oleson, D. Lawrence, G. Bonan, B. Drewniak, M. Huang, C. Koven, Z. M. Subin, and S. C. Swenson. Technical description of version 4.5 of the community land model (clm), ncar technical note. Technical Report NCAR/TN-503+ STR, National Center for Atmospheric Research (NCAR), Boulder, CO, USA, 2013. doi:https://doi.org/10.5065/D6RR1W7M.\u00a0\u21a9</p> </li> <li> <p>Wei-Liang Lee, KN Liou, and Alex Hall. Parameterization of solar fluxes over mountain surfaces for application to climate models. Journal of Geophysical Research: Atmospheres, 2011. doi:https://doi.org/10.1029/2010JD014722.\u00a0\u21a9\u21a9\u21a9\u21a9\u21a9</p> </li> <li> <p>Klemen Zak\u0161ek, Kristof O\u0161tir, and \u017diga Kokalj. Sky-view factor as a relief visualization technique. Remote sensing, 3(2):398\u2013415, 2011. doi:https://doi.org/10.3390/rs3020398.\u00a0\u21a9</p> </li> <li> <p>Jeff Dozier and James Frew. Rapid calculation of terrain parameters for radiation modeling from digital elevation data. IEEE Transactions on geoscience and remote sensing, 28(5):963\u2013969, 1990. doi:https://doi.org/10.1109/36.58986.\u00a0\u21a9</p> </li> </ol>"},{"location":"ELM/user-guide/","title":"User Guide","text":"<p>start of the ELM User's Guide</p>"},{"location":"MOSART/","title":"Model for Scale Adaptive River Transport (MOSART)","text":"<p>Some introductory text here</p> <ul> <li>The MOSART User Guide explains how to control MOSART when its running within E3SM</li> <li>The MOSART Developer Guide explains MOSART data structures and how to develop new code.</li> <li>The MOSART Technical Guide explains the science behind MOSART's code</li> </ul>"},{"location":"MOSART/dev-guide/","title":"Developer Guide","text":"<p>Please refer to the ELM's Developer Guide for MOSART development.</p>"},{"location":"MOSART/tech-guide/","title":"Technical Guide","text":"<p>start of the MOSART Technical Guide</p>"},{"location":"MOSART/user-guide/","title":"User Guide","text":"<p>start of the MOSART User's Guide</p>"},{"location":"generate_domain_files/","title":"Generating Domain Files","text":"<p>Domain files are needed at runtime by the coupler, data models, and land model. The land model uses the mask to determine where to run and the coupler use the land fraction to merge fluxes from multiple surface types to the atmosphere above them.</p> <p>Domain files are created from a conservative, monotone mapping file from the ocean grid (where the mask is defined) to the atmosphere grid.</p>"},{"location":"generate_domain_files/#environment","title":"Environment","text":"<p>The new domain generation tool requires a few special packages, such as xarray, numba, and itertools. These are all included in the E3SM unified environment: https://e3sm.org/resources/tools/other-tools/e3sm-unified-environment/</p> <p>Alternatively, a simple conda environment can be created with the following command:</p> <pre><code>conda create --name example_env --channel conda-forge xarray numpy numba scikit-learn netcdf4\n</code></pre>"},{"location":"generate_domain_files/#map-file-generation","title":"Map File Generation","text":"<p>The map file used to generate the domain files can be created a few different ways. For a typical E3SM configuration we recommend using a conservative, monotone map. Here is an example command that can be used to generate one (as of NCO version 5.2.2)</p> <pre><code>ncremap -5 -a traave --src_grd=${OCN_GRID} --dst_grd=${ATM_GRID} --map_file=${MAP_FILE}\n</code></pre> <p>Note that existing ocean grid files can be found in the inputdata repository: <code>inputdata/ocn/mpas-o/&lt;ocn_grid_name&gt;/</code></p> <p>The atmosphere grid file should be on the \"pg2\" grid. These grid files are easily generated with three TempestRemap commands as follows:</p> <pre><code>NE=30\nGenerateCSMesh --alt --res ${NE} --file ${GRID_FILE_PATH}/ne${NE}.g\nGenerateVolumetricMesh --in ${GRID_FILE_PATH}/ne${NE}.g --out ${GRID_FILE_PATH}/ne${NE}pg2.g --np 2 --uniform\nConvertMeshToSCRIP --in ${GRID_FILE_PATH}/ne${NE}pg2.g --out ${GRID_FILE_PATH}/ne${NE}pg2_scrip.nc\n</code></pre> <p>For RRM grids the last two commands would be used on the exodus file produced by SQuadGen (See the Adding Support for New Grids tutorial for more information.).</p>"},{"location":"generate_domain_files/#running-the-domain-generation-tool","title":"Running the Domain Generation Tool","text":"<p>Below is a typical example of how to invoke the domain generation tool from the command line:</p> <pre><code>NE=30\nMAP_FILE=${MAP_FILE_ROOT}/map_oEC60to30v3_to_ne${NE}pg2_traave.20240313.nc\npython generate_domain_files_E3SM.py -m ${MAP_FILE} -o oEC60to30v3 -l ne${NE}pg2 --date-stamp=9999 --output-root=${OUTPUT_ROOT}\n</code></pre>"}]}