name: CI/CD Build Workflow

on:
  push:
    branches: [master]

  pull_request:
    branches: [master]

env:
  UVCDAT_ANONYMOUS_LOG: False

jobs:
  check-jobs-to-skip:
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
    steps:
      - id: skip_check
        uses: fkirc/skip-duplicate-actions@master
        with:
          cancel_others: true
          paths_ignore: '["**/README.md", "**/docs/**", "**/examples/**", "**/misc/**"]'

  pre-commit-hooks:
    needs: check-jobs-to-skip
    if: ${{ needs.check-jobs-to-skip.outputs.should_skip != 'true' }}
    runs-on: ubuntu-latest
    timeout-minutes: 2
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v2

      - name: Set up Python 3.7
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      # Run all pre-commit hooks on all the files.
      # Getting only staged files can be tricky in case a new PR is opened
      # since the action is run on a branch in detached head state
      - name: Install and Run Pre-commit
        uses: pre-commit/action@v2.0.0

  build:
    needs: check-jobs-to-skip
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
    name: ${{ matrix.os }} Build
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    timeout-minutes: 20
    steps:
      # if conditional must be repeated in order to skip matrix jobs that are required PR checks
      # https://github.com/fkirc/skip-duplicate-actions/issues/44#issuecomment-723430339
      - if: ${{ needs.check-jobs-to-skip.outputs.should_skip != 'true' }}
        uses: actions/checkout@v2

      - if: ${{ needs.check-jobs-to-skip.outputs.should_skip != 'true' }}
        name: Cache Conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if conda/e3sm_diags_env_dev.yml has not changed in the workflow
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('conda/e3sm_diags_env_dev.yml') }}

      - if: ${{ needs.check-jobs-to-skip.outputs.should_skip != 'true' }}
        name: Build Conda Environment
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: e3sm_diags_env_dev
          environment-file: conda/e3sm_diags_env_dev.yml
          channel-priority: strict
          auto-update-conda: true
          # IMPORTANT: This needs to be set for caching to work properly!
          use-only-tar-bz2: true

      - if: ${{ needs.check-jobs-to-skip.outputs.should_skip != 'true' }}
        name: Show Conda Environment Info
        run: |
          conda config --set anaconda_upload no
          conda info
          conda list

      - if: ${{ needs.check-jobs-to-skip.outputs.should_skip != 'true' }}
        name: Install `e3sm-diags` Package
        run: pip install .

      - if: ${{ needs.check-jobs-to-skip.outputs.should_skip != 'true' }}
        name: Run Tests
        run: |
          bash tests/test.sh

  publish-docs:
    needs: [check-jobs-to-skip, pre-commit-hooks, build]
    if: ${{ needs.check-jobs-to-skip.outputs.should_skip != 'true' && github.event_name == 'push' }}
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7

      - name: Cache pip
        uses: actions/cache@v2
        with:
          # This path is specific to Ubuntu
          path: ~/.cache/pip
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-pip-publish-docs
          restore-keys: |
            ${{ runner.os }}-pip-
            ${{ runner.os }}-

      # Using pip for Sphinx dependencies because it takes too long to reproduce a conda environment (~10 secs vs. 3-4 mins)
      # Low risk trade-off with mismatching dependencies in `e3sm_diags_env_dev.yml`
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install sphinx==3.5.1 sphinx_rtd_theme==0.5.1 sphinx-multiversion==0.2.4

      - name: Build Sphinx Docs
        run: |
          cd docs
          sphinx-multiversion source _build/html

      - name: Copy Docs and Commit
        run: |
          # gh-pages branch must already exist
          git clone https://github.com/E3SM-Project/e3sm_diags.git --branch gh-pages --single-branch gh-pages

          cd gh-pages
          rm -r *

          touch .nojekyll
          # Add index.html to point to `master` branch automatically
          printf '<meta http-equiv="refresh" content="0; url=./_build/html/master/index.html" />' >> index.html

          cp -r ../docs/_build .
          # Old builds must be siblings to current build to correctly load static content such as images and custom fonts
          cp -r ../docs/_build_old .

          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          # The below command will fail if no changes were present, so we ignore it
          git add .
          git commit -m "Update documentation" -a || true

      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          directory: gh-pages
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
