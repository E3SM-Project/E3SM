#! /bin/csh -f

#-------------------------------------------------------------------------------
# Modules and library paths
#-------------------------------------------------------------------------------

#
# As of 1/29/15 modules were not unloading and reloading properly on
# eos - this incomplete list of unloads seems to avoid the problem: JPE
#

set COMPILER = `./xmlquery COMPILER -value`
set MPILIB = `./xmlquery MPILIB -value`
set DEBUG = `./xmlquery DEBUG -value`
if (-e /opt/modules/default/init/csh) then
  source /opt/modules/default/init/csh
#  module rm PrgEnv-cray 
#  module rm PrgEnv-gnu
  module rm intel
  module rm cray
  module rm cray-parallel-netcdf
  module rm cray-libsci
  module rm cray-netcdf
  module rm cray-netcdf-hdf5parallel
#  module rm cray-mpich
  module rm netcdf
#  module rm PrgEnv-intel
	
endif

if ( $COMPILER == "intel" ) then
#    module load PrgEnv-intel/5.2.40
    module load    intel/14.0.2.144
endif    
if ( $COMPILER == "cray" ) then
    module load PrgEnv-cray
    module switch cce      cce/8.1.9
    module load cray-libsci/12.1.00
endif    
if ( $COMPILER == "gnu" ) then
    module load PrgEnv-gnu
    module switch gcc       gcc/4.8.0
    module load cray-libsci/12.1.00
endif    

module load cray-mpich/7.0.4
if ( $MPILIB == "mpi-serial") then
  module load cray-netcdf/4.3.2
else
  module load cray-netcdf-hdf5parallel/4.3.2
  module load cray-parallel-netcdf/1.5.0
endif

module load cmake/2.8.11.2



#-------------------------------------------------------------------------------
# Runtime environment variables
#-------------------------------------------------------------------------------

setenv MPICH_ENV_DISPLAY 1
setenv MPICH_VERSION_DISPLAY 1

limit coredumpsize unlimited
limit stacksize unlimited

# The environment variable below increase the stack size, which is necessary for
# CICE to run threaded on this machine.  
setenv OMP_STACKSIZE 64M
if ( $?PERL ) then
  printenv
endif
