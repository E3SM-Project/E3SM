#!/bin/csh
# cesm_prerun with performance data archiving: 
#  ./cesm_prerun.perf_archive with the following argument keyword/value pairs, in any order
#   -machine <system name>
#   -compiler <compiler name> 
#   -case <case name>
#   -jobid <should be same as $PBS_JOBID for PBS and $COBALT_JOBID> for Cobalt>
#   -cesmid <$LID in cesm-lingo>
#   -user <should be same as $LOGNAME>
#   -caseroot <directory from which job script was submitted>
#   -rundir <run directory>
#   -save <TRUE|true|anything else>
#   -archive <performance archive root directory>
#   -sampling <sampling interval in seconds>

set machine = 'unknown'
set compiler = 'unknown'
set case = 'unknown'
set app_jobid = 'unknown'
set lid = 'unknown'
set user = 'unknown'
set caseroot = '.'
set run_dir = '.'
set save_timing = 'FALSE'
set save_timing_dir = '/UNSET'
set sample_interval = 0

set i = 1
while ($i < $#argv)
  if      ("X$argv[$i]" == 'X-machine') then
    @ i = $i + 1
    set machine = $argv[$i]
  else if ("X$argv[$i]" == 'X-compiler') then
    @ i = $i + 1
    set compiler = $argv[$i]
  else if ("X$argv[$i]" == 'X-case') then
    @ i = $i + 1
    set case = $argv[$i]
  else if ("X$argv[$i]" == 'X-jobid') then
    @ i = $i + 1
    set app_jobid = $argv[$i]
  else if ("X$argv[$i]" == 'X-cesmid') then
    @ i = $i + 1
    set lid = $argv[$i]
  else if ("X$argv[$i]" == 'X-user') then
    @ i = $i + 1
    set user = $argv[$i]
  else if ("X$argv[$i]" == 'X-caseroot') then
    @ i = $i + 1
    set caseroot = $argv[$i]
  else if ("X$argv[$i]" == 'X-rundir') then
    @ i = $i + 1
    set run_dir = $argv[$i]
  else if ("X$argv[$i]" == 'X-save') then
    @ i = $i + 1
    set save_timing = $argv[$i]
  else if ("X$argv[$i]" == 'X-archive') then
    @ i = $i + 1
    set save_timing_dir = $argv[$i]
  else if ("X$argv[$i]" == 'X-sampling') then
    @ i = $i + 1
    set sample_interval = $argv[$i]
  endif
  @ i = $i + 1
end

if (-e $run_dir/cesm_prerun_done) then
  /bin/rm $run_dir/cesm_prerun_done
endif

if ($app_jobid == 'unknown') then
  if (($machine == 'edison') || ($machine == 'titan')) then

    set app_jobid = $PBS_JOBID

  else if ($machine == 'mira') then

    set app_jobid = $COBALT_JOBID

  endif  
endif

if (($machine == 'edison') || ($machine == 'titan')) then

  set string = `qstat -f $app_jobid | grep ctime`
  echo "job $app_jobid created: $string" >>& $caseroot/CaseStatus

  set string = `qstat -f $app_jobid | grep qtime`
  echo "job $app_jobid queued: $string" >>& $caseroot/CaseStatus

  set string = `qstat -f $app_jobid | grep etime`
  echo "job $app_jobid eligible to run: $string" >>& $caseroot/CaseStatus

  set string = `qstat -f $app_jobid | grep start_time`
  echo "job $app_jobid started: $string" >>& $caseroot/CaseStatus

else if ($machine == 'mira') then

  set string = `qstat -lf $app_jobid | grep SubmitTime`
  echo "job $app_jobid submitted: $string" >>& $caseroot/CaseStatus

  set string = `qstat -lf $app_jobid | grep StartTime`
  echo "job $app_jobid started: $string" >>& $caseroot/CaseStatus

endif

if (($save_timing == 'TRUE') || ($save_timing == 'true')) then

  if (-d $save_timing_dir) then
    cd $save_timing_dir

    if !(-d performance_archive) then
      mkdir performance_archive
      chmod 777 performance_archive
      chmod +s performance_archive
    endif
    cd performance_archive

    if !(-d $user) then
      mkdir $user
      chmod 775 $user
      chmod +s $user
    endif
    cd $user

    if !(-d $case) then
      mkdir $case
      chmod 775 $case
      chmod +s $case
    endif
    cd $case

    if !(-d $lid) then
      mkdir $lid
      chmod 775 $lid
      chmod +s $lid
    endif
    cd $lid

    if !(-d checkpoints) then
      mkdir checkpoints
      chmod 775 checkpoints
      chmod +s checkpoints
    endif

    if ($machine == 'mira') then
      qstat -lf > qstatf.$lid
      qstat -lf $app_jobid > qstatf_jobid.$lid
      chmod a+r *
      gzip qstatf.$lid qstatf_jobid.$lid
    else if ($machine == 'edison') then
      xtprocadmin > xtprocadmin.$lid
      qstat -f > qstatf.$lid
      qstat -f $app_jobid > qstatf_jobid.$lid
      xtnodestat > xtnodestat.$lid
      showq > showq.$lid
      chmod a+r *
      gzip xtprocadmin.$lid qstatf.$lid qstatf_jobid.$lid xtnodestat.$lid showq.$lid
    else if ($machine == 'titan') then
      xtdb2proc -f xtdb2proc.$lid
      qstat -f > qstatf.$lid
      qstat -f $app_jobid > qstatf_jobid.$lid
      xtnodestat > xtnodestat.$lid
      showq > showq.$lid
      chmod a+r *
      gzip xtdb2proc.$lid qstatf.$lid qstatf_jobid.$lid xtnodestat.$lid showq.$lid
    endif

    mkdir CaseDocs.$lid
    chmod 775 CaseDocs.$lid
    chmod +s CaseDocs.$lid
    cd CaseDocs.$lid
    cp -p $caseroot/CaseDocs/* .
    cp -p $caseroot/*.run .
    cp -p $caseroot/*.xml .
    cp -p $caseroot/user_nl_* .
    cp -p $caseroot/env_mach_specific .
    cp -p $caseroot/Macros .
    cp -p $caseroot/README.case .
    if (-f $caseroot/Depends.$machine) then
      cp -p $caseroot/Depends.$machine .
    endif
    if (-f $caseroot/Depends.$compiler) then
      cp -p $caseroot/Depends.$compiler .
    endif
    if (-f $caseroot/Depends.$machine.$compiler) then
      cp -p $caseroot/Depends.$machine.$compiler .
    endif
    chmod a+r *

    if ($machine == 'titan') then
      cd $caseroot/Tools
      ./mdiag_reduce.csh > mdiag_reduce.$lid
      chmod a+r mdiag_reduce.$lid
      gzip mdiag_reduce.$lid
      mv mdiag_reduce.$lid.gz $save_timing_dir/performance_archive/$user/$case/$lid/mdiag_reduce.$lid.gz
    endif

    if ($app_jobid != 'unknown') then
      if ($sample_interval > 0) then
        touch $run_dir/cesm.log.$lid
        cd $caseroot/Tools
        ./mach_syslog $sample_interval $app_jobid $lid $run_dir $run_dir/timing/checkpoints $save_timing_dir/performance_archive/$user/$case/$lid/checkpoints &
        set syslog_jobid = $!
        cat >> $run_dir/syslog_jobid.$app_jobid << EOF1
$syslog_jobid
EOF1
      endif
    endif

  endif

endif

sleep 10

set sdate = `date +"%Y-%m-%d %H:%M:%S"`
echo "model run started $sdate" >>& $caseroot/CaseStatus

touch $run_dir/cesm_prerun_done

