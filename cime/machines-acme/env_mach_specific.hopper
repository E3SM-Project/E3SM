#! /bin/csh -f

#-------------------------------------------------------------------------------
# Modules and library paths
#-------------------------------------------------------------------------------

set CESM_REPO = `./xmlquery CCSM_REPOTAG -value`
if($status == 0) then
  set COMPILER = `./xmlquery COMPILER -value`
  set MPILIB   = `./xmlquery MPILIB   -value`
  set DEBUG    = `./xmlquery DEBUG    -value`
else
  echo $0 using settings from environment:
endif
echo "COMPILER=$COMPILER"
echo "MPILIB=$MPILIB"
echo "DEBUG=$DEBUG"

if (-e /opt/modules/default/init/csh) then
  source /opt/modules/default/init/csh
  module rm PrgEnv-intel
  module rm PrgEnv-pgi
  module rm PrgEnv-cray 
  module rm PrgEnv-gnu
  module rm PrgEnv-pathscale
  module rm intel
  module rm pgi
  module rm cray
  module rm pathscale
  module rm parallel-netcdf
  module rm netcdf
  module rm cmake
  module rm cray-mpich
  module rm cray-netcdf
  module rm cray-netcdf-hdf5parallel
  module rm cray-parallel-netcdf
  module load subversion/1.8.11
endif

if ( $COMPILER == "pgi" ) then
    module load PrgEnv-pgi/5.2.40
    module switch pgi pgi/14.7.0
endif    
if ( $COMPILER == "intel" ) then
    module load PrgEnv-intel 
    module switch intel      intel/12.1.5.339
endif    
if ( $COMPILER == "cray" ) then
    module load PrgEnv-cray
    module switch cce      cce/8.0.7
endif    
if ( $COMPILER == "pathscale" ) then
    module load PrgEnv-pathscale
    module switch pathscale       pathscale/4.0.9
endif    
if ( $COMPILER == "gnu" ) then
    module load PrgEnv-gnu
    module switch gcc       gcc/4.7.1
endif    
module load cray-mpich/7.1.1
if ( $COMPILER != "intel" ) then
  module switch cray-libsci cray-libsci/12.1.3
endif

if ( $MPILIB == "mpi-serial") then
  module load cray-netcdf/4.3.2
else
  module load cray-netcdf-hdf5parallel/4.3.2
  module load cray-parallel-netcdf/1.5.0
endif

module load cmake/3.1.3

module use /global/project/projectdirs/ccsm1/modulefiles/hopper
if( $DEBUG == "TRUE" ) then
   module load esmf/6.2.0-defio-mpi-g
else
  module load esmf/6.2.0-defio-mpi-O
endif

module list >& software_environment.txt

#-------------------------------------------------------------------------------
# Runtime environment variables
#-------------------------------------------------------------------------------

limit coredumpsize unlimited
limit stacksize unlimited

# Capture logical to physics PE assignment and active environment variable
# settings
setenv MPICH_ENV_DISPLAY 1
setenv MPICH_VERSION_DISPLAY 1
setenv MPICH_CPUMASK_DISPLAY 1

# The environment variable below increase the stack size, which is necessary for
# CICE to run threaded on this machine.  
setenv OMP_STACKSIZE 64M
if ( $?PERL ) then
  printenv
endif
