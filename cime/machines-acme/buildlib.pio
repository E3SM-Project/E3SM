#! /bin/csh -fx

cd $CASEROOT

set CIMEROOT  = `./xmlquery  CIMEROOT	-value `
set CASETOOLS = `./xmlquery  CASETOOLS	-value `
set GMAKE     = `./xmlquery  GMAKE	-value ` 
set GMAKE_J   = `./xmlquery  GMAKE_J	-value ` 
set BLDROOT = $1
# directory in which pio is built
set pio_dir=$BLDROOT/pio
cd $pio_dir

# ----------------------------------------------------------------------
# Set options to cmake
# ----------------------------------------------------------------------
# Note that some other generic CMAKE options are set in the Makefile
#set cmake_opts=" -D USER_CMAKE_MODULE_PATH=$CIMEROOT/externals/CMake"
#set cmake_opts="$cmake_opts -D GENF90_PATH=$CIMEROOT/externals/genf90"
set cmake_opts=" -D GENF90_PATH=$CIMEROOT/externals/genf90"

# ----------------------------------------------------------------------
# create the pio makefile by running cmake (done via a rule
# in the system-level makefile)
# ----------------------------------------------------------------------
$GMAKE  $pio_dir/Makefile MODEL=pio USER_CMAKE_OPTS="$cmake_opts" \
       PIO_LIBDIR=$pio_dir -f $CASETOOLS/Makefile || exit 1

# ----------------------------------------------------------------------
# create the pio library (or libraries), using the makefile
# created by cmake
# ----------------------------------------------------------------------
$GMAKE -j $GMAKE_J || exit 2
if ( -d "$pio_dir/src" ) then
  cp -p $pio_dir/src/clib/libpioc.* $BLDROOT/lib
  cp -p $pio_dir/src/flib/libpiof.* $BLDROOT/lib
  cp -p $pio_dir/src/clib/*.h $pio_dir/src/flib/*.mod $BLDROOT/include
else
  if( -d "$pio_dir/pio" ) then
    cd pio
  endif
  pwd
  cp -p lib*.a $BLDROOT/lib
  cp -p *.h *.mod $BLDROOT/include
endif
exit 0

