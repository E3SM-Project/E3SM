#! /bin/tcsh -f

#
# example mkbatch script for a machine without a batch system (e.g. a laptop)
#

#################################################################################
if ($PHASE == set_batch) then
#################################################################################
source ./Tools/ccsm_getenv || exit -1

# Determine tasks and threads for the job

set maxthrds = 0
set minthrds = $MAX_TASKS_PER_NODE
@ n = 0
foreach model ($MODELS)
  @ n = $n + 1
  if ($NTHRDS[$n] > $MAX_TASKS_PER_NODE ) then
     echo "ERROR, NTHRDS maximum is $MAX_TASKS_PER_NODE"
     echo "you have set NTHRDS = ( $NTHRDS[$n] ) - must reset"
     exit 1
  endif   
  if ($NTHRDS[$n] > $maxthrds) then
     set maxthrds = $NTHRDS[$n]
  endif
  if ($NTHRDS[$n] < $minthrds) then
     set minthrds = $NTHRDS[$n]
  endif
end


./xmlchange -noecho -file env_mach_pes.xml -id COST_PES -val 0
# This is the maximum number of mpi tasks we want on a node.
@ ptile = ${MAX_TASKS_PER_NODE} / 2
set ntasks_tot = `${CASEROOT}/Tools/taskmaker.pl -sumtasks`

if ($maxthrds > $minthrds) then
# We don't need this if all we are doing is exploiting hyperthreading
  if ( $maxthrds > 2) then
    set task_geo   = `${CASEROOT}/Tools/taskmaker.pl`
  endif
  set thrd_geo   = `${CASEROOT}/Tools/taskmaker.pl -thrdgeom`
else
  if ($maxthrds > 1) then
    @ ptile = $MAX_TASKS_PER_NODE / $maxthrds
  endif 
endif

@ nodes = ${ntasks_tot} / ${ptile}
if ( ${ntasks_tot} % ${ptile} > 0) then
  @ nodes = $nodes + 1
endif
# costpes is the number of nodes used * the number of cores per node
# or the total number of cores used, that needs to be set for cost
@ costpes = ${nodes} * ${PES_PER_NODE}

./xmlchange -noecho -file env_mach_pes.xml -id COST_PES -val ${costpes}

if ($?TESTMODE) then
 set file = $CASEROOT/${CASE}.test 
else
 set file = $CASEROOT/${CASE}.run 
endif

cat >! $file << EOF1
#! /bin/tcsh -f
EOF1

#################################################################################
else if ($PHASE == set_exe) then
#################################################################################
    source ./Tools/ccsm_getenv || exit -1

    set maxthrds = `${CASEROOT}/Tools/taskmaker.pl -maxthrds`
    set maxtasks = `${CASEROOT}/Tools/taskmaker.pl -sumtasks`

    cat >> ${CASEROOT}/${CASE}.run << EOF1
# -------------------------------------------------------------------------
# Run the model
# -------------------------------------------------------------------------

set maxthrds = $maxthrds
set maxtasks = $maxtasks

cd \$RUNDIR
echo "\`date\` -- CSM EXECUTION BEGINS HERE" 
setenv MP_LABELIO yes
setenv OMP_NUM_THREADS \$maxthrds
if ( "\$MPILIB" == "mpi-serial" ) then
    \$EXEROOT/cesm.exe >&! cesm.log.\$LID
else
    /usr/local/bin/mpiexec -np \$maxtasks \$EXEROOT/cesm.exe >&! cesm.log.\$LID
endif

wait
echo "\`date\` -- CSM EXECUTION HAS FINISHED" 

# -------------------------------------------------------------------------
# For Postprocessing
# -------------------------------------------------------------------------
EOF1


#################################################################################
else if ($PHASE == set_larch) then
#################################################################################

    echo " Archiving not supported on this machine."

#################################################################################
else
#################################################################################

    echo "  PHASE setting of $PHASE is not an accepted value"
    echo "  accepted values are set_batch, set_exe and set_larch"
    exit 1

#################################################################################
endif
#################################################################################
 

