#!/usr/bin/env python

"""
build data model namelist input
"""
import sys, os, time, shutil, glob

_CIMEROOT = os.environ.get("CIMEROOT")
if _CIMEROOT is None:
    raise SystemExit("ERROR: must set CIMEROOT environment variable")
sys.path.append(os.path.join(os.environ["CIMEROOT"],"scripts","Tools"))

from standard_script_setup import *
from CIME.case             import Case
from CIME.buildnml         import create_namelist_infile, parse_input
from CIME.utils            import expect, run_cmd, get_model

logger = logging.getLogger(__name__)

###############################################################################
def _main_func():
###############################################################################

    caseroot = parse_input(sys.argv)

    with Case(caseroot) as case:
        cimeroot = case.get_value("CIMEROOT")
        caseroot = case.get_value("CASEROOT")
        casebuild = case.get_value("CASEBUILD")
        rundir = case.get_value("RUNDIR")
        grid = case.get_value("GRID")
        atm_grid = case.get_value("ATM_GRID")
        lnd_grid = case.get_value("LND_GRID")
        ocn_grid = case.get_value("OCN_GRID")
        rof_grid = case.get_value("ROF_GRID")
        wav_grid = case.get_value("WAV_GRID")
        comp_atm = case.get_value("COMP_ATM")
        pio_version = case.get_value("PIO_VERSION")

        confdir = os.path.join(casebuild, "cplconf")
        if not os.path.isdir(confdir):
            os.makedirs(confdir)

        # create cplconf/namelist
        infile_text = ""
        if comp_atm == 'cam':
            # *** FIXME - this is confusing!!!***
            # cam is actually changing the driver namelist settings
            cam_config_opts = case.get_value("CAM_CONFIG_OPTS")
            if "adiabatic" in cam_config_opts:
                infile_text = "atm_adiabatic = .true."
            if "ideal" in cam_config_opts:
                infile_text = "atm_ideal_phys = .true."
            if "aquaplanet" in cam_config_opts:
                infile_text = "aqua_planet = .true. \n aqua_planet_sst = 1"

        user_nl_file = os.path.join(caseroot, "user_nl_cpl")
        namelist_infile = os.path.join(confdir, "namelist")
        create_namelist_infile(case, user_nl_file, namelist_infile, infile_text)

    # call build-namelist

    bldnamelist = os.path.join(cimeroot, "driver_cpl", "bld", "build-namelist")

    cime_model = get_model()

    cmd = "%s -cime_model %s -caseroot %s -cimeroot %s  -infile %s -pio_version %s" \
        % (bldnamelist, cime_model, caseroot, cimeroot, namelist_infile, pio_version)

    cmd = cmd + " -grid %s -atm_grid %s -lnd_grid %s -rof_grid %s -ocn_grid %s -wav_grid %s" \
        % (grid, atm_grid, lnd_grid, rof_grid, ocn_grid, wav_grid)

    rc, out, err = run_cmd(cmd, from_dir=confdir)
    expect(rc==0,"Command %s failed rc=%d\nout=%s\nerr=%s"%(cmd,rc,out,err))

    # copy drv_in, drv_flds_in, seq_maps.rc and all *modio* files to rundir

    shutil.copy(os.path.join(confdir,"drv_in"), rundir)

    shutil.copy(os.path.join(confdir,"drv_flds_in"), rundir)

    shutil.copy(os.path.join(confdir,"seq_maps.rc"), rundir)

    for filename in glob.glob(os.path.join(confdir, "*modelio*")):
        shutil.copy(filename, rundir)

###############################################################################

if __name__ == "__main__":
    _main_func()
