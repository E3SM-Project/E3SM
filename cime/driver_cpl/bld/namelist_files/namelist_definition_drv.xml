<?xml version="1.0"?>

<?xml-stylesheet type="text/xsl" href="http://www.cgd.ucar.edu/~cam/namelist/namelist_definition.xsl"?>

<namelist_definition>

<!-- Each namelist variable is defined in an <entry> element.  The
     content of the element is the documentation of how the variable is
     used.  Other aspects of the variable's definition are expressed as
     attributes of the <entry> element.  Note that it is an XML requirement
     that the attribute values are enclosed in quotes.  The attributes are:

     id
          The variable's name.  *** N.B. *** The name must be lower case.
          The module convert all namelist variable names to lower case
          since Fortran is case insensitive.

     type
          An abbreviation of the fortran declaration for the variable.
	  Valid declarations are:

          char*n  
	  integer
	  logical
	  real

	  Any of these types may be followed by a comma separated list of
	  integers enclosed in parenthesis to indicate an array.

	  The current namelist validation code only distinquishes between
	  string and non-string types.

     input_pathname
          Only include this attribute to indicate that the variable
          contains the pathname of an input dataset that resides in the
          CESM inputdata directory tree.  

	  The recognized values are 
           "abs"  - an absolute  pathname is required
	   "rel:var_name"  - the  pathname is relative and that 
            the namelist variable "var_name" contains the absolute 
	    root directory.
           "mapping" - the absolute inputdata path is specified and
            will be included in the cpl.inputdata_list

     category
          A category assigned for organizing the documentation.

     group
          The namelist group that the variable is declared in.

     valid_values
          This is an optional attribute that is mainly useful for variables
          that have only a small number of allowed values.
                                                                        -->

<!-- =========================== -->
<!-- group seq_cplflds_inparm    -->
<!-- =========================== -->

<entry 
id="flds_co2a"
type="logical" 
category="seq_flds" 
group="seq_cplflds_inparm" >
Previously, new fields that were needed to be passed between components
for certain compsets were specified by cpp-variables. This has been 
modified to now be use cases. This use cases are specified in the 
namelist cpl_flds_inparm and are currently triggered by the xml variable CCSM_BGC.
If CCSM_BGC is set to 'CO2A', then flds_co2a will be set to .true.
</entry>

<entry 
id="flds_co2b"
type="logical" 
category="seq_flds" 
group="seq_cplflds_inparm" >
Previously, new fields that were needed to be passed between components
for certain compsets were specified by cpp-variables. This has been 
modified to now be use cases. This use cases are specified in the 
namelist cpl_flds_inparm and are currently triggered by the xml variable CCSM_BGC.
If CCSM_BGC is set to 'CO2B', then flds_co2b will be set to .true.
</entry>

<entry 
id="flds_co2c"
type="logical" 
category="seq_flds" 
group="seq_cplflds_inparm" >
Previously, new fields that were needed to be passed between components
for certain compsets were specified by cpp-variables. This has been 
modified to now be use cases. This use cases are specified in the 
namelist cpl_flds_inparm and are currently triggered by the xml variable CCSM_BGC.
If CCSM_BGC is set to 'CO2C', then flds_co2c will be set to .true.
</entry>

<entry 
id="flds_co2_dmsa"
type="logical" 
category="seq_flds" 
group="seq_cplflds_inparm" >
Previously, new fields that were needed to be passed between components
for certain compsets were specified by cpp-variables. This has been 
modified to now be use cases. This use cases are specified in the 
namelist cpl_flds_inparm and are currently triggered by the xml variable CCSM_BGC.
If CCSM_BGC is set to 'CO2_DMSA', then flds_co2_dmsa will be set to .true.
</entry>

<entry 
id="flds_bgc"
type="logical" 
category="seq_flds" 
group="seq_cplflds_inparm" >
Previously, new fields that were needed to be passed between components
for certain compsets were specified by cpp-variables. This has been
modified to now be use cases. This use cases are specified in the
namelist cpl_flds_inparm and are currently triggered by the xml variable ACME_BGC.
This is a new master switch for turning ACME BGC off and on, just for testing.
If ACME_BGC is set to 'TRUE', then flds_bgc will be set to .true.
</entry>

<entry 
id="glc_nec"
type="integer" 
category="seq_flds" 
group="seq_cplflds_inparm" >
Number of cism elevation classes. 
Set by the xml variable GLC_NEC in env_run.xml
</entry>


<!-- =========================== -->
<!-- -group seq_cplflds_custom   -->
<!-- =========================== -->

<entry 
id="cplflds_custom"
type="char*1024(200)" 
category="seq_flds" 
group="seq_cplflds_userspec" >
New fields that are user specidied can be added as namelist variables
by the user in the cpl namelist seq_flds_user using the namelist variable
array cplflds_customs. The user specified new fields must follow the
above naming convention.
As an example, say you want to add a new state 'foo' that is passed 
from the land to the atm - you would do this as follows 
   &amp;seq_flds_user
      cplflds_custom = 'Sa_foo->a2x', 'Sa_foo->x2a'
   /
This would add the field 'Sa_foo' to the character strings defining the 
attribute vectors a2x and x2a. It is assumed that code would need to be 
introduced in the atm and land components to deal with this new attribute 
vector field.
Modify user_nl_cpl to edit this.
</entry>

<!-- =========================== -->
<!--  group seq_infodata_inparm  -->
<!-- =========================== -->

<entry 
id="atm_adiabatic"     
type="logical"
category="expdef" 
group="seq_infodata_inparm">
true => turn on adiabatic mode in cam
</entry>

<entry 
id="atm_ideal_phys"     
type="logical"
category="expdef" 
group="seq_infodata_inparm">
true => turn on ideal physics mode in cam
</entry>

<entry 
id="aqua_planet"     
type="logical"
category="expdef" 
group="seq_infodata_inparm">
true => turn on aquaplanet mode in cam
</entry>

<entry 
id="aqua_planet_sst"     
type="integer"
category="expdef" 
group="seq_infodata_inparm">
1 => default sst mode for aquaplanet in cam
</entry>

<entry 
id="case_name"     
type="char*128"
category="expdef" 
group="seq_infodata_inparm">
case name.  
set by CASE in env_case.xml.
</entry>

<entry 
id="case_desc"
type="char*256"
category="expdef" 
group="seq_infodata_inparm">
case description.  
set by CASESTR in env_run.xml.
</entry>

<entry 
id="model_version"
type="char*256"
category="expdef" 
group="seq_infodata_inparm">
model version documentation, 
set by CCSM_REPOTAG in env_run.xml
</entry>

<entry 
id="username"
type="char*256"
category="expdef" 
group="seq_infodata_inparm">
username documentation
set by CCSMUSER in env_run.xml
</entry>

<entry 
id="hostname"
type="char*256"
category="expdef" 
group="seq_infodata_inparm">
hostname information, 
set by MACH in env_case.xml
</entry>

<entry 
id="timing_dir"
type="char*256"
category="expdef" 
group="seq_infodata_inparm">
location of timing output.
</entry>

<entry 
id="tchkpt_dir"
type="char*256"
category="expdef" 
group="seq_infodata_inparm">
location of timing checkpoint output.
</entry>

<entry 
id="start_type"
type="char*64"
category="expdef" 
group="seq_infodata_inparm"
valid_values="startup,branch,continue" >
mode to start the run up, [startup,branch,continue], 
automatically derived from RUN_TYPE in env_run.xml
</entry>
    
<entry 
id="brnch_retain_casename"
type="logical"
category="expdef" 
group="seq_infodata_inparm">
Allow same branch casename as reference casename
</entry>

<entry 
id="info_debug"    
type="integer"
category="expdef" 
group="seq_infodata_inparm">
Level of debug output, 0=minimum, 1=normal, 2=more, 3=too much
set by INFO_DBUG in env_run.xml 
default: 1
</entry>

<entry 
id="bfbflag"
type="logical"
category="expdef" 
group="seq_infodata_inparm">
turns on bfb option in coupler which produce bfb results in the
coupler on different processor counts.  
default: .false.
</entry>

<entry 
id="orb_mode"
type="char*64"
category="orbital" 
group="seq_infodata_inparm"
valid_values="fixed_year,variable_year,fixed_parameters">  
orbital model setting.  this sets how the orbital mode will be
configured.  
"fixed_year" uses the orb_iyear and other orb inputs are ignored.  In
this mode, the orbital parameters are constant and based on the year.
"variable_year" uses the orb_iyear and orb_iyear_align.  In this mode,
the orbital parameters vary as the model year advances and the model
year orb_iyear_align has the equivalent orbital year of orb_iyear.
"fixed_parameters" uses the orb_eccen, orb_mvelp, and orb_obliq to set
the orbital parameters which then remain constant through the model
integration.  set by ORBITAL_MODE in env_run.xml.  [fixed_year,
variable_year, fixed_parameters]
default: 'fixed_year'.
</entry>

<entry 
id="orb_iyear_align"
type="integer"
category="orbital" 
group="seq_infodata_inparm">
model year associated with orb_iyear when orb_mode is variable_year.  
default: 1990
</entry>

<entry 
id="orb_iyear"
type="integer"
category="orbital" 
group="seq_infodata_inparm">
year of orbit, used when orb_mode is fixed_year or variable_year.
default: 1990
</entry>

<entry
id="orb_eccen"
type="real"
category="orbital" 
group="seq_infodata_inparm">
eccentricity of orbit, used when orb_mode is fixed_parameters.  
default: SHR_ORB_UNDEF_REAL (1.e36)
(Not currently used in build-namelist)
</entry>

<entry
id="orb_mvelp"
type="real"
category="orbital" 
group="seq_infodata_inparm">
location of vernal equinox in longitude degrees, used when orb_mode is fixed_parameters.
default: SHR_ORB_UNDEF_REAL (1.e36)
(Not currently used in build-namelist)
</entry>

<entry
id="orb_obliq"
type="real"
category="orbital" 
group="seq_infodata_inparm">
obliquity of orbit in degrees, used when orb_mode is fixed_parameters.  
default: SHR_ORB_UNDEF_REAL (1.e36)
(Not currently used in build-namelist)
</entry>

<entry
id="wv_sat_scheme"
type="char*16"
category="wv_sat"
group="seq_infodata_inparm"
valid_values="GoffGratch,MurphyKoop,Bolton,Flatau">
Type of water vapor saturation vapor pressure scheme employed. 'GoffGratch' for
Goff and Gratch (1946); 'MurphyKoop' for Murphy and Koop (2005); 'Bolton' for
Bolton (1980); 'Flatau' for Flatau, Walko, and Cotton (1992).
Default: GoffGratch
</entry>

<entry
id="wv_sat_transition_start"
type="real"
category="wv_sat"
group="seq_infodata_inparm">
Width of the liquid-ice transition range in mixed-phase water saturation vapor
pressure calculations. The range always ends at 0 degrees Celsius, so this
variable only affects the start of the transition.
Default: 20K

WARNING: CAM is tuned to the default value of this variable. Because it affects
so many different parameterizations, changes to this variable may require a
significant retuning of CAM's cloud physics to give reasonable results.
</entry>

<entry
id="wv_sat_use_tables"
type="logical"
category="wv_sat"
group="seq_infodata_inparm">
Whether or not to produce lookup tables at init time to use as a cache for
saturation vapor pressure.
Default: .false.
</entry>

<entry
id="wv_sat_table_spacing"
type="real"
category="wv_sat"
group="seq_infodata_inparm">
Temperature resolution of saturation vapor pressure lookup tables in Kelvin.
(This is only used if wv_sat_use_tables is .true.)
Default: 1.0
</entry>

<entry 
id="flux_epbal"
type="char*8"
category="control" 
group="seq_infodata_inparm"
valid_values="off,on">
Only used for C,G compsets: if ocn, ocn provides EP balance factor for precip
default: off
</entry>

<entry 
id="flux_albav" 
type="logical"
category="control" 
group="seq_infodata_inparm">
Only used for C,G compsets: if true, compute albedos to work with daily avg SW down
default: false
</entry>

<entry 
id="wall_time_limit"
type="real"
category="control" 
group="seq_infodata_inparm">
Wall time limit for run
default: -1.0
</entry>

<entry 
id="force_stop_at"
type="char*8"
category="control" 
group="seq_infodata_inparm"
valid_values="day,month,year">
Force stop at the next month, day, etc when wall_time_limit is hit
default: month
</entry>

<entry 
id="flux_diurnal" 
type="logical"
category="control" 
group="seq_infodata_inparm">
If true, turn on diurnal cycle in computing atm/ocn fluxes
default: false
</entry>

<entry 
id="atm_gnam"
type="char*64"
category="mapping" 
group="seq_infodata_inparm">
ATM_GRID values passed into driver.
default: undefined
</entry>

<entry 
id="lnd_gnam"
type="char*64"
category="mapping" 
group="seq_infodata_inparm">
LND_GRID values passed into driver.
default: undefined
</entry>

<entry 
id="ocn_gnam"
type="char*64"
category="mapping" 
group="seq_infodata_inparm">
OCN_GRID values passed into driver.
default: undefined
</entry>

<entry 
id="ice_gnam"
type="char*64"
category="mapping" 
group="seq_infodata_inparm">
ICE_GRID values passed into driver.
default: undefined
</entry>

<entry 
id="rof_gnam"
type="char*64"
category="mapping" 
group="seq_infodata_inparm">
ROF_GRID values passed into driver.
default: undefined
</entry>

<entry 
id="glc_gnam"
type="char*64"
category="mapping" 
group="seq_infodata_inparm">
GLC_GRID values passed into driver.
default: undefined
</entry>

<entry 
id="wav_gnam"
type="char*64"
category="mapping" 
group="seq_infodata_inparm">
WAV_GRID values passed into driver.
default: undefined
</entry>

<entry 
id="shr_map_dopole"
type="logical"
category="mapping" 
group="seq_infodata_inparm">
invoke pole averaging corrections in shr_map_mod weights generation
default: true
</entry>

<entry 
id="vect_map"
type="char*64"
category="mapping" 
group="seq_infodata_inparm"
valid_values="none,npfix,cart3d,cart3d_diag,cart3d_uvw,cart3d_uvw_diag">
vect_map
turns on the vector mapping option for u and v vector mapping between
atm and ocean grids in the coupler.  the options are none, npfix,
cart3d, cart3d_diag, cart3d_uvw, and cart3d_uvw_diag.  the none option
results in scalar mapping independently for the u and v field which
tends to generate large errors near the poles.  npfix is the
traditional option where the vectors are corrected on the ocean grid
north of the last latitude line of the atmosphere grid.  the cart3d
options convert the east (u) and north (v) vectors to 3d (x,y,z)
triplets, and maps those fields before converting back to the east (u)
and north (v) directions.  the cart3d ignores the resuling "w"
velocity.  the cart3d_uvw calculates the resulting u and v vectors by
preserving the total "u,v,w" speed and the angle of the (u,v) vector.
the _diag options just add diagnotics to the log file about the vector
mapping.  
default: npfix
</entry>

<entry 
id="aoflux_grid"
type="char*64"
category="mapping" 
group="seq_infodata_inparm"
valid_values="ocn,atm,exch">  
Grid for atm ocn flux calc (untested)
default: ocn
</entry>

<entry 
id="mct_usealltoall"
type="logical"
category="mapping" 
group="seq_infodata_inparm">
mct alltoall mapping flag
default: false
</entry>

<entry 
id="mct_usevector"
type="logical"
category="mapping" 
group="seq_infodata_inparm">
mct vector flag
default: false
</entry>

<entry 
id="cpl_decomp"
type="integer"
category="expdef" 
group="seq_infodata_inparm"
valid_values="0,1,2,3,4,5,6">  
cpl decomp option (0=default, 1=comp decomp, 2=rearr comp decomp, 3=new single 1d seg
default: 0
</entry>

<entry
id="cpl_seq_option"
type="char*64"
category="expdef"
group="seq_infodata_inparm"
valid_values="CESM1_ORIG,CESM1_MOD,CESM1_ORIG_TIGHT,CESM1_MOD_TIGHT,RASM_OPTION1,RASM_OPTION2">
Set the coupler sequencing.  See CPL_SEQ_OPTION in env_run.
default: CESM1_MOD
</entry>

<entry 
id="cpl_cdf64"
type="logical"
category="expdef" 
group="seq_infodata_inparm">
default: true
</entry>

<entry 
id="do_budgets"
type="logical"
category="budget" 
group="seq_infodata_inparm">
logical that turns on diagnostic budgets, false means budgets will never be written
default: false
</entry>

<entry 
id="do_histinit"
type="logical"
category="history" 
group="seq_infodata_inparm">
logical to write an extra initial coupler history file
</entry>

<entry 
id="budget_inst"
type="integer"
category="budget" 
group="seq_infodata_inparm"
valid_values="0,1,2,3">  
sets the diagnotics level of the instantaneous budgets. [0,1,2,3],
written only if BUDGETS variable is true
0=none, 
1=+net summary budgets, 
2=+detailed lnd/ocn/ice component budgets, 
3=+detailed atm budgets
default: 0
</entry>

<entry 
id="budget_daily"
type="integer"
category="budget" 
group="seq_infodata_inparm"
valid_values="0,1,2,3">  
sets the diagnotics level of the daily budgets. [0,1,2,3], 
written only if do_budgets variable is .true.,
0=none,
1=+net summary budgets, 
2=+detailed lnd/ocn/ice component budgets,
3=+detailed atm budgets
default: 0
</entry>

<entry 
id="budget_month"
type="integer"
category="expdef" 
group="seq_infodata_inparm"
valid_values="0,1,2,3">  
sets the diagnotics level of the monthy budgets. [0,1,2,3], 
written only if do_budgets variable is .true.,
0=none,
1=+net summary budgets, 
2=+detailed lnd/ocn/ice component budgets,
3=+detailed atm budgets
default: 1
</entry>

<entry 
id="budget_ann"
type="integer"
category="budget" 
group="seq_infodata_inparm"
valid_values="0,1,2,3">  
sets the diagnotics level of the annual budgets. [0,1,2,3], 
written only if do_budgets variable is .true.,
0=none,
1=+net summary budgets, 
2=+detailed lnd/ocn/ice component budgets,
3=+detailed atm budgets
default: 1
</entry>

<entry 
id="budget_ltann"
type="integer"
category="budget" 
group="seq_infodata_inparm"
valid_values="0,1,2,3">  
sets the diagnotics level of the longterm budgets written at the end
of the year. [0,1,2,3], 
written only if do_budgets variable is .true.,
0=none, 
1=+net summary budgets, 
2=+detailed lnd/ocn/ice component budgets, 
3=+detailed atm budgets, 
default: 1
</entry>

<entry 
id="budget_ltend"
type="integer"
category="budget" 
group="seq_infodata_inparm"
valid_values="0,1,2,3">  
sets the diagnotics level of the longterm budgets written at the end
of each run. [0,1,2,3], 
written only if do_budgets variable is .true.,
0=none, 
1=+net summary budgets, 
2=+detailed lnd/ocn/ice component budgets, 
3=+detailed atm budgets, 
default: 0
</entry>

<entry 
id="histaux_a2x"
type="logical"
category="history" 
group="seq_infodata_inparm">
turns on coupler history stream for instantaneous atm to coupler fields.  
default: false
</entry>

<entry 
id="histaux_a2x3hr"
type="logical"
category="history" 
group="seq_infodata_inparm">
turns on coupler history stream for 3-hour average atm to coupler fields.  
default: false
</entry>

<entry 
id="histaux_a2x3hrp"
type="logical"
category="history" 
group="seq_infodata_inparm">
turns on coupler history stream for 3-hour average atm to coupler precip fields.  
default: false
</entry>

<entry 
id="histaux_a2x24hr"
type="logical"
category="history" 
group="seq_infodata_inparm">
turns on coupler history stream for daily average atm to coupler fields.  
default: false
</entry>

<entry 
id="histaux_l2x"
type="logical"
category="history" 
group="seq_infodata_inparm">
turns on coupler history stream for instantaneous land to coupler fields.  
default: false
</entry>

<entry 
id="histaux_r2x"
type="logical"
category="history" 
group="seq_infodata_inparm">
turns on coupler history stream for instantaneous runoff to coupler fields.  
default: false
</entry>

<entry 
id="histaux_l2x1yr"
type="logical"
category="history" 
group="seq_infodata_inparm">
turns on coupler history stream for annual sno to coupler fields.  
default: false
</entry>

<entry 
id="histavg_atm"
type="logical"
category="history" 
group="seq_infodata_inparm">
writes atm fields in coupler average history files.
default: true
</entry>

<entry 
id="histavg_lnd"
type="logical"
category="history" 
group="seq_infodata_inparm">
writes lnd fields in coupler average history files.
default: true
</entry>

<entry 
id="histavg_ocn"
type="logical"
category="history" 
group="seq_infodata_inparm">
writes ocn fields in coupler average history files.
default: true
</entry>

<entry 
id="histavg_ice"
type="logical"
category="history" 
group="seq_infodata_inparm">
writes ice fields in coupler average history files.
default: true
</entry>

<entry 
id="histavg_rof"
type="logical"
category="history" 
group="seq_infodata_inparm">
writes rof fields in coupler average history files.
default: true
</entry>

<entry 
id="histavg_glc"
type="logical"
category="history" 
group="seq_infodata_inparm">
writes glc fields in coupler average history files.
default: true
</entry>

<entry 
id="histavg_wav"
type="logical"
category="history" 
group="seq_infodata_inparm">
writes wav fields in coupler average history files.
default: true
</entry>

<entry 
id="histavg_xao"
type="logical"
category="history" 
group="seq_infodata_inparm">
writes xao fields in coupler average history files.
default: true
</entry>

<entry 
id="drv_threading"
type="logical"
category="performance" 
group="seq_infodata_inparm">
turn on run time control of threading per pe per component by the driver
default: false
</entry>

<entry 
id="run_barriers"
type="logical"
category="performance" 
group="seq_infodata_inparm">
default: .false.
</entry>

<entry 
id="eps_frac"
type="real"
category="domain_check" 
group="seq_infodata_inparm">
Error tolerance for differences in fractions in domain checking
default: 1.0e-02
</entry>

<entry 
id="eps_amask"
type="real"
category="domain_check" 
group="seq_infodata_inparm">
Error tolerance for differences in atm/land masks in domain checking
default: 1.0e-13
</entry>

<entry 
id="eps_agrid"
type="real"
category="domain_check" 
group="seq_infodata_inparm">
Error tolerance for differences in atm/land lat/lon in domain checking
default: 1.0e-12
</entry>

<entry 
id="eps_aarea"
type="real"
category="domain_check" 
group="seq_infodata_inparm">
Error tolerance for differences in atm/land areas in domain checking
default: 1.0e-07
</entry>

<entry
id="eps_omask"
type="real"
category="domain_check" 
group="seq_infodata_inparm">
Error tolerance for differences in ocean/ice masks in domain checking
default: 1.0e-06
</entry>

<entry
id="eps_ogrid"
type="real"
category="domain_check" 
group="seq_infodata_inparm">
Error tolerance for differences in ocean/ice lon/lat in domain checking
default: 1.0e-2
</entry>

<entry 
id="eps_oarea"
type="real"
category="domain_check" 
group="seq_infodata_inparm">
Error tolerance for differences in ocean/ice lon/lat in domain checking
default: 1.0e-1
</entry>

<entry 
id="pts_settings"     
type="char*512"
category="domain_check" 
group="seq_infodata_inparm">
</entry>

<entry 
id="single_column"
type="logical"
category="seq_infodata_inparm" 
group="seq_infodata_inparm">
turns on single column mode.  
set by PTS_MODE in env_case.xml, 
default: false
</entry>

<entry 
id="scmlat"
type="real"
category="seq_infodata_inparm" 
group="seq_infodata_inparm">
grid point latitude associated with single column mode.  
set by PTS_LAT in env_run.xml.
</entry>

<entry 
id="scmlon"
type="real"
category="seq_infodata_inparm" 
group="seq_infodata_inparm">
grid point longitude associated with single column mode.  
set by PTS_LON in env_run.xml.
</entry>

<entry 
id="reprosum_use_ddpdd"
type="logical"
category="reprosum" 
group="seq_infodata_inparm">
Use faster method for reprosum, but one where reproducibility is not always guaranteed.
default: .false.
</entry>

<entry 
id="reprosum_diffmax"
type="real"
category="reprosum" 
group="seq_infodata_inparm">
Tolerance for relative error
default: -1.0e-8
</entry>

<entry 
id="reprosum_recompute"
type="logical"
category="reprosum" 
group="seq_infodata_inparm">
Recompute with non-scalable algorithm if reprosum_diffmax is exceeded.
default: .false.
</entry>

<!-- =========================== -->
<!-- group seq_timemgr_inparm    -->
<!-- =========================== -->

<entry
id="atm_cpl_dt"
type="integer"
category="time" 
group="seq_timemgr_inparm">
atm coupling interval in seconds
set via ATM_NCPL in env_run.xml.  
ATM_NCPL is the number of times the atm is coupled per NCPL_BASE_PERIOD
NCPL_BASE_PERIOD is also set in env_run.xml and is the base period
associated with NCPL coupling frequency, nad has valid values: hour,day,year,decade
default: 0
</entry>

<entry
id="lnd_cpl_dt"
type="integer"
category="time" 
group="seq_timemgr_inparm">
lnd coupling interval in seconds
set via LND_NCPL in env_run.xml.  
LND_NCPL is the number of times the lnd is coupled per NCPL_BASE_PERIOD
NCPL_BASE_PERIOD is also set in env_run.xml and is the base period
associated with NCPL coupling frequency, nad has valid values: hour,day,year,decade
default: 0
</entry>

<entry
id="rof_cpl_dt"
type="integer"
category="time" 
group="seq_timemgr_inparm">
river runoff coupling interval in seconds
currently set by default to 10800 seconds.
default: 10800
</entry>

<entry
id="ice_cpl_dt"
type="integer"
category="time" 
group="seq_timemgr_inparm">
ice coupling interval in seconds
set via ICE_NCPL in env_run.xml.  
ICE_NCPL is the number of times the ice is coupled per NCPL_BASE_PERIOD
NCPL_BASE_PERIOD is also set in env_run.xml and is the base period
associated with NCPL coupling frequency, nad has valid values: hour,day,year,decade
default: 0
</entry>

<entry
id="ocn_cpl_dt"
type="integer"
category="time" 
group="seq_timemgr_inparm">
ocn coupling interval in seconds
set via OCN_NCPL in env_run.xml.  
OCN_NCPL is the number of times the ocn is coupled per NCPL_BASE_PERIOD
NCPL_BASE_PERIOD is also set in env_run.xml and is the base period
associated with NCPL coupling frequency, nad has valid values: hour,day,year,decade
default: 0
</entry>

<entry
id="glc_cpl_dt"
type="integer"
category="time" 
group="seq_timemgr_inparm">
glc coupling interval in seconds
set via GLC_NCPL in env_run.xml.  
GLC_NCPL is the number of times the glc is coupled per NCPL_BASE_PERIOD
NCPL_BASE_PERIOD is also set in env_run.xml and is the base period
associated with NCPL coupling frequency, nad has valid values: hour,day,year,decade
default: 0
</entry>

<entry
id="wav_cpl_dt"
type="integer"
category="time" 
group="seq_timemgr_inparm">
wav coupling interval in seconds
set via WAV_NCPL in env_run.xml.  
WAV_NCPL is the number of times the wav is coupled per NCPL_BASE_PERIOD
NCPL_BASE_PERIOD is also set in env_run.xml and is the base period
associated with NCPL coupling frequency, nad has valid values: hour,day,year,decade
default: 0
</entry>

<entry
id="atm_cpl_offset"
type="integer"
category="time" 
group="seq_timemgr_inparm">
atm coupling interval offset in seconds
default: 0
</entry>

<entry
id="lnd_cpl_offset"
type="integer"
category="time" 
group="seq_timemgr_inparm">
lnd coupling interval offset in seconds
default: 0
</entry>

<entry
id="ice_cpl_offset"
type="integer"
category="time" 
group="seq_timemgr_inparm">
ice coupling interval offset in seconds
default: 0
</entry>

<entry
id="ocn_cpl_offset"
type="integer"
category="time" 
group="seq_timemgr_inparm">
ocn coupling interval offset in seconds
default: 0
</entry>

<entry
id="glc_cpl_offset"
type="integer"
category="time" 
group="seq_timemgr_inparm">
glc coupling interval offset in seconds
default: 0
</entry>

<entry
id="wav_cpl_offset"
type="integer"
category="time" 
group="seq_timemgr_inparm">
wav coupling interval offset in seconds
default: 0
</entry>

<entry
id="calendar"
type="char*16"
category="time" 
group="seq_timemgr_inparm"
valid_values="NO_LEAP,GREGORIAN">
calendar in use.  [NO_LEAP, GREOGORIAN].  
set by CALENDAR in env_run.xml
default: "NO_LEAP".  
</entry>

<entry
id="start_ymd"
type="integer"
category="time" 
group="seq_timemgr_inparm">
Run start date in yyyymmdd format, only used for startup and hybrid runs.
default: 00010101
</entry>

<entry
id="start_tod"
type="integer"
category="time" 
group="seq_timemgr_inparm">
Start time-of-day in universal time (seconds), should be between zero and 86400
default: 0
</entry>

<entry
id="stop_option"
type="char*16"
category="time" 
group="seq_timemgr_inparm"
valid_values="none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,monthly,nmonths,nmonth,nyears,nyear,date,ifdays0,end">
sets the run length with stop_n and stop_ymd
stop_option alarms are:
[none/never], turns option off
[nstep/s]   , stops every stop_n nsteps  , relative to current run start time
[nsecond/s] , stops every stop_n nseconds, relative to current run start time
[nminute/s] , stops every stop_n nminutes, relative to current run start time
[nhour/s]   , stops every stop_n nhours  , relative to current run start time
[nday/s]    , stops every stop_n ndays   , relative to current run start time
[nmonth/s]  , stops every stop_n nmonths , relative to current run start time
[monthly/s] , stops every        month   , relative to current run start time
[nyear/s]   , stops every stop_n nyears  , relative to current run start time
[date]      , stops at stop_ymd value
[ifdays0]   , stops at stop_n calendar day value and seconds equal 0
[end]       , stops at end
</entry>

<entry
id="stop_n"
type="integer"
category="time" 
group="seq_timemgr_inparm">
Sets the run length with stop_option and stop_ymd
</entry>

<entry
id="stop_ymd"
type="integer"
category="time" 
group="seq_timemgr_inparm">
date in yyyymmdd format, sets the run length with stop_option and stop_n,
can be in addition to stop_option and stop_n, negative value implies off
</entry>

<entry 
id="restart_file" 
type="char*256" 
category="expdef"
group="seq_infodata_inparm" 
valid_values="" >
Driver restart filename.
(NOTE: Normally THIS IS NOT USED -- Set with RUN_REFCASE and RUN_REFDATE)
</entry>

<entry
id="restart_option"
type="char*16"
category="time" 
group="seq_timemgr_inparm"
valid_values="none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,nmonths,monthly,nmonth,nyears,nyear,date,ifdays0,end">
sets the run length with stop_n and stop_ymd
stop_option alarms are:
[none/never], turns option off
[nstep/s]   , restarts every restart_n nsteps  , relative to current run start time
[nsecond/s] , restarts every restart_n nseconds, relative to current run start time
[nminute/s] , restarts every restart_n nminutes, relative to current run start time
[nhour/s]   , restarts every restart_n nhours  , relative to current run start time
[nday/s]    , restarts every restart_n ndays   , relative to current run start time
[monthly/s] , restarts every           month   , relative to current run start time
[nmonth/s]  , restarts every restart_n nmonths , relative to current run start time
[nyear/s]   , restarts every restart_n nyears  , relative to current run start time
[date]      , restarts at restart_ymd value
[ifdays0]   , restarts at restart_n calendar day value and seconds equal 0
[end]       , restarts at end
</entry>

<entry
id="restart_n"
type="integer"
category="time" 
group="seq_timemgr_inparm">
Ssets model restart writes with restart_option and restart_ymd (same options as stop_n)
</entry>

<entry
id="restart_ymd"
type="integer"
category="time" 
group="seq_timemgr_inparm">
Date in yyyymmdd format, sets model restart write date with rest_option and restart_n
default: STOP_N
</entry>

<entry
id="end_restart"
type="logical"
category="time" 
group="seq_timemgr_inparm">
true => write restarts at end of run
forces a restart write at the end of the run in addition to any
setting associated with rest_option.  default=true.  this setting
will be set to false if restart_option is none or never.
default: false
</entry>

<entry
id="history_option"
type="char*16"
category="time" 
group="seq_timemgr_inparm"
valid_values="none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,monthly,nmonths,nmonth,nyears,nyear,date,ifdays0,end">
coupler history snapshot option (used with history_n and history_ymd)
set by HIST_OPTION in env_run.xml.
history_option alarms are:
[none/never], turns option off
[nstep/s]   , history snapshot every history_n nsteps  , relative to current run start time
[nsecond/s] , history snapshot every history_n nseconds, relative to current run start time
[nminute/s] , history snapshot every history_n nminutes, relative to current run start time
[nhour/s]   , history snapshot every history_n nhours  , relative to current run start time
[nday/s]    , history snapshot every history_n ndays   , relative to current run start time
[monthly/s] , history snapshot every           month   , relative to current run start time
[nmonth/s]  , history snapshot every history_n nmonths , relative to current run start time
[nyear/s]   , history snapshot every history_n nyears  , relative to current run start time
[date]      , history snapshot at history_ymd value
[ifdays0]   , history snapshot at history_n calendar day value and seconds equal 0
[end]       , history snapshot at end
</entry>

<entry
id="history_n"
type="integer"
category="time" 
group="seq_timemgr_inparm">
sets coupler snapshot history file frequency (like restart_n)
set by HIST_N in env_run.xml.
</entry>

<entry
id="history_ymd"
type="integer"
category="time" 
group="seq_timemgr_inparm">
date associated with history_option date.  yyyymmdd format.  
set by HIST_DATE in env_run.xml.
</entry>

<entry
id="histavg_option"
type="char*16"
category="time" 
group="seq_timemgr_inparm"
valid_values="none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,monthly,nmonths,nmonth,nyears,nyear,date,ifdays0,end">
coupler time average history option (used with histavg_n and histavg_ymd)
set by AVGHIST_OPTION in env_run.xml.
histavg_option alarms are:
[none/never], turns option off
[nstep/s]   , history snapshot every histavg_n nsteps  , relative to current run start time
[nsecond/s] , history snapshot every histavg_n nseconds, relative to current run start time
[nminute/s] , history snapshot every histavg_n nminutes, relative to current run start time
[nhour/s]   , history snapshot every histavg_n nhours  , relative to current run start time
[nday/s]    , history snapshot every histavg_n ndays   , relative to current run start time
[monthly/s] , history snapshot every           month   , relative to current run start time
[nmonth/s]  , history snapshot every histavg_n nmonths , relative to current run start time
[nyear/s]   , history snapshot every histavg_n nyears  , relative to current run start time
[date]      , history snapshot at histavg_ymd value
[ifdays0]   , history snapshot at histavg_n calendar day value and seconds equal 0
[end]       , history snapshot at end
</entry>

<entry
id="histavg_n"
type="integer"
category="time" 
group="seq_timemgr_inparm">
Sets coupler time-average history file frequency (like restart_option)
set by AVGHIST_N in env_run.xml.
</entry>

<entry
id="histavg_ymd"
type="integer"
category="time" 
group="seq_timemgr_inparm">
date associated with histavg_option date.  yyyymmdd format.  
set by AVGHIST_DATE in env_run.xml.
</entry>

<entry
id="tprof_option"
type="char*16"
category="time" 
group="seq_timemgr_inparm"
valid_values="none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,monthly,nmonths,nmonth,nyears,nyear,date,ifdays0,end">
Sets timing output file frequency (like rest_option but relative to run start date)
tprof_option alarms are:
[none/never], turns option off
[nstep/s]   , every tprof_n nsteps  , relative to current run start time
[nsecond/s] , every tprof_n nseconds, relative to current run start time
[nminute/s] , every tprof_n nminutes, relative to current run start time
[nhour/s]   , every tprof_n nhours  , relative to current run start time
[nday/s]    , every tprof_n ndays   , relative to current run start time
[monthly/s] , every         month   , relative to current run start time
[nmonth/s]  , every tprof_n nmonths , relative to current run start time
[nyear/s]   , every tprof_n nyears  , relative to current run start time
[date]      , at tprof_ymd value
[ifdays0]   , at tprof_n calendar day value and seconds equal 0
[end]       , at end
</entry>

<entry
id="tprof_n"
type="integer"
category="time" 
group="seq_timemgr_inparm">
Sets timing output file frequency (like restart_n)
</entry>

<entry
id="tprof_ymd"
type="integer"
category="time" 
group="seq_timemgr_inparm">
yyyymmdd format, sets timing output file date (like restart_date)
</entry>


<entry 
id="logfilepostfix" 
type="char*80" 
category="driver"
group="seq_infodata_inparm" 
valid_values="" >
Ending suffix "postfix" for output log files.
</entry>

<entry 
id="outpathroot" 
type="char*256" 
category="drv_history"
group="seq_infodata_inparm" 
valid_values="" >
Root directory for driver output files
</entry>


<entry 
id="max_cplstep_time"    
type="real"
category="driver" 
group="seq_infodata_inparm">
Abort model if coupler timestep wallclock time exceeds this value, ignored if 0,
if &lt; 0 then use abs(max_cplstep_time)*cktime as the threshold.
default: 0 
</entry>




<!-- =========================== -->
<!-- group seq_ccsm_pes          -->
<!-- =========================== -->

<entry 
id="atm_ntasks"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of mpi tasks assigned to the atm components. 
set by NTASKS_ATM in env_configure.xml.  
</entry>

<entry 
id="atm_nthreads"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of threads per mpi task for the atm component.  
set by NTHRDS_ATM in env_configure.xml.  
</entry>

<entry 
id="atm_rootpe"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the global mpi task rank of the root processor assigned to the atm component.  
set by ROOTPE_ATM in env_configure.xml.
</entry>

<entry 
id="atm_pestride"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the mpi global processors stride associated with the mpi tasks for the atm component.  
set by PSTRID_ATM in env_configure.xml.  
</entry>

<entry 
id="atm_layout"
type="char*32"
category="ccsm_pes" 
group="ccsm_pes"
valid_values="concurrent,sequential">  
Layout of multi-instance atms (if there are more than 1)
</entry>

<entry 
id="lnd_ntasks"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of mpi tasks assigned to the lnd components. 
set by NTASKS_LND in env_configure.xml.  
</entry>

<entry 
id="lnd_nthreads"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of threads per mpi task for the lnd component.  
set by NTHRDS_LND in env_configure.xml.  
</entry>

<entry 
id="lnd_rootpe"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the global mpi task rank of the root processor assigned to the lnd component.  
set by ROOTPE_LND in env_configure.xml.
</entry>

<entry 
id="lnd_pestride"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the mpi global processors stride associated with the mpi tasks for the lnd component.  
set by PSTRID_LND in env_configure.xml.  
</entry>

<entry 
id="lnd_layout"
type="char*32"
category="ccsm_pes" 
group="ccsm_pes"
valid_values="concurrent,sequential">  
Layout of multi-instance lnds (if there are more than 1)
</entry>

<entry 
id="ice_ntasks"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of mpi tasks assigned to the ice components. 
set by NTASKS_ICE in env_configure.xml.  
</entry>

<entry 
id="ice_nthreads"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of threads per mpi task for the ice component.  
set by NTHRDS_ICE in env_configure.xml.  
</entry>

<entry 
id="ice_rootpe"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the global mpi task rank of the root processor assigned to the ice component.  
set by ROOTPE_ICE in env_configure.xml.
</entry>

<entry 
id="ice_pestride"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the mpi global processors stride associated with the mpi tasks for the ice component.  
set by PSTRID_ICE in env_configure.xml.  
</entry>

<entry 
id="ice_layout"
type="char*32"
category="ccsm_pes" 
group="ccsm_pes"
valid_values="concurrent,sequential">  
Layout of multi-instance ices (if there are more than 1)
</entry>

<entry 
id="ocn_ntasks"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of mpi tasks assigned to the ocn components. 
set by NTASKS_OCN in env_configure.xml.  
</entry>

<entry 
id="ocn_nthreads"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of threads per mpi task for the ocn component.  
set by NTHRDS_OCN in env_configure.xml.  
</entry>

<entry 
id="ocn_rootpe"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the global mpi task rank of the root processor assigned to the ocn component.  
set by ROOTPE_OCN in env_configure.xml.
</entry>

<entry 
id="ocn_pestride"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the mpi global processors stride associated with the mpi tasks for the ocn component.  
set by PSTRID_OCN in env_configure.xml.  default: 1
</entry>

<entry 
id="ocn_layout"
type="char*32"
category="ccsm_pes" 
group="ccsm_pes"
valid_values="concurrent,sequential">  
Layout of multi-instance ocns (if there are more than 1)
</entry>

<entry 
id="glc_ntasks"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of mpi tasks assigned to the glc components. 
set by NTASKS_GLC in env_configure.xml.  
</entry>

<entry 
id="glc_nthreads"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of threads per mpi task for the glc component.  
set by NTHRDS_GLC in env_configure.xml.  
</entry>

<entry 
id="glc_rootpe"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the global mpi task rank of the root processor assigned to the glc component.  
set by ROOTPE_GLC in env_configure.xml.
</entry>

<entry 
id="glc_pestride"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the mpi global processors stride associated with the mpi tasks for the glc component.  
set by PSTRID_GLC in env_configure.xml.  
</entry>

<entry 
id="glc_layout"
type="char*32"
category="ccsm_pes" 
group="ccsm_pes"
valid_values="concurrent,sequential">  
Layout of multi-instance glcs (if there are more than 1)
</entry>

<entry 
id="wav_ntasks"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of mpi tasks assigned to the wav components. 
set by NTASKS_WAV in env_configure.xml.  
</entry>

<entry 
id="wav_nthreads"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of threads per mpi task for the wav component.  
set by NTHRDS_WAV in env_configure.xml.  
</entry>

<entry 
id="wav_rootpe"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the global mpi task rank of the root processor assigned to the wav component.  
set by ROOTPE_WAV in env_configure.xml.
</entry>

<entry 
id="wav_pestride"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the mpi global processors stride associated with the mpi tasks for the wav component.  
set by PSTRID_WAV in env_configure.xml.  
</entry>

<entry 
id="wav_layout"
type="char*32"
category="ccsm_pes" 
group="ccsm_pes"
valid_values="concurrent,sequential">  
Layout of multi-instance wavs (if there are more than 1)
</entry>

<entry 
id="rof_ntasks"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of mpi tasks assigned to the lnd components. 
set by NTASKS_LND in env_configure.xml.  
</entry>

<entry 
id="rof_nthreads"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of threads per mpi task for the lnd component.  
set by NTHRDS_LND in env_configure.xml.  
</entry>

<entry 
id="rof_rootpe"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the global mpi task rank of the root processor assigned to the lnd component.  
set by ROOTPE_LND in env_configure.xml.
</entry>

<entry 
id="rof_pestride"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the mpi global processors stride associated with the mpi tasks for the lnd component.  
set by PSTRID_LND in env_configure.xml.  
</entry>

<entry 
id="rof_layout"
type="char*32"
category="ccsm_pes" 
group="ccsm_pes"
valid_values="concurrent,sequential">  
Layout of multi-instance lnds (if there are more than 1)
</entry>

<entry 
id="cpl_ntasks"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of mpi tasks assigned to the cpl components. 
set by NTASKS_CPL in env_configure.xml.  
</entry>

<entry 
id="cpl_nthreads"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the number of threads per mpi task for the cpl component.  
set by NTHRDS_CPL in env_configure.xml.  
</entry>

<entry 
id="cpl_rootpe"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the global mpi task rank of the root processor assigned to the cpl component.  
set by ROOTPE_CPL in env_configure.xml.
</entry>

<entry 
id="cpl_pestride"
type="integer"
category="ccsm_pes" 
group="ccsm_pes">
the mpi global processors stride associated with the mpi tasks for the cpl component.  
set by PSTRID_CPL in env_configure.xml.  
</entry>


<!-- =========================== -->
<!-- group prof_inparm           -->
<!--  in perf_mod.F90            -->
<!-- =========================== -->

<entry 
id="profile_global_stats"
type="logical"
category="performance" 
group="prof_inparm">
</entry>

<entry 
id="profile_single_file"
type="logical"
category="performance" 
group="prof_inparm">
</entry>

<entry 
id="profile_disable"
type="logical"
category="performance" 
group="prof_inparm">
</entry>

<entry 
id="profile_barrier"
type="logical"
category="performance" 
group="prof_inparm">
</entry>

<entry 
id="profile_depth_limit"
type="integer"
category="performance" 
group="prof_inparm">
</entry>

<entry 
id="profile_outpe_stride"
type="integer"
category="performance" 
group="prof_inparm">
</entry>

<entry 
id="profile_detail_limit"
type="integer"
category="performance" 
group="prof_inparm">
default: 0
</entry>

<entry 
id="profile_timer"
type="integer"
category="performance" 
group="prof_inparm">
</entry>

<entry 
id="profile_ovhd_measurement"
type="logical"
category="performance" 
group="prof_inparm">
default: .false.
</entry>

<entry 
id="profile_outpe_num"
type="integer"
category="performance" 
group="prof_inparm">
default: 1
</entry>

<entry 
id="profile_papi_enable"
type="logical"
category="performance" 
group="prof_inparm">
default: .false.
</entry>

<!-- =========================== -->
<!-- group papi_inparm           -->
<!--  in perf_mod.F90            -->
<!-- =========================== -->

<entry 
id="papi_ctr1_str"
type="char*16"
category="performance" 
group="papi_inparm">
See gptl_papi.c for the list of valid values
</entry>

<entry 
id="papi_ctr2_str"
type="char*16"
category="performance" 
group="papi_inparm">
See gptl_papi.c for the list of valid values
</entry>

<entry 
id="papi_ctr3_str"
type="char*16"
category="performance" 
group="papi_inparm">
See gptl_papi.c for the list of valid values
</entry>

<entry 
id="papi_ctr4_str"
type="char*16"
category="performance" 
group="papi_inparm">
See gptl_papi.c for the list of valid values
</entry>



<!-- =========================== -->
<!-- group pio_default_inparm    -->
<!-- =========================== -->

<entry 
id="pio_async_interface"
type="logical"
category="pio" 
group="pio_default_inparm">
future asynchronous IO capability (not currently supported). 
default: .false.
</entry>

<entry 
id="pio_stride"
type="integer"
category="pio" 
group="pio_default_inparm">
stride of tasks in pio used generically, component based value takes precedent. 
</entry>

<entry 
id="pio_root"
type="integer"
category="pio" 
group="pio_default_inparm">
io task root in pio used generically, component based value takes precedent. 
</entry>

<entry 
id="pio_numiotasks"
type="integer"
category="pio" 
group="pio_default_inparm">
number of io tasks in pio used generically, component based value takes precedent. 
</entry>

<entry 
id="pio_typename"
type="char*64"
category="pio" 
group="pio_default_inparm"
valid_values="netcdf,pnetcdf,netcdf4p,netcdf4c,default">
io type in pio used generically, component based value takes precedent.  
valid values: netcdf, pnetcdf, netcdf4p, netcdf4c, default 
</entry>

<entry 
id="pio_debug_level"
type="integer"
category="pio" 
group="pio_default_inparm" 
valid_values="0,1,2,3,4,5,6">
pio debug level
valid values: 0,1,2,3,4,5,6
</entry>

<entry 
id="pio_blocksize"
type="integer"
category="pio" 
group="pio_default_inparm">
pio blocksize
</entry>

<entry 
id="pio_buffer_size_limit"
type="integer"
category="pio" 
group="pio_default_inparm">
pio buffer size limit
</entry>

<entry 
id="pio_rearr_comm_type"
type="char*16"
category="pio" 
group="pio_default_inparm"
valid_values="p2p,coll,default">
pio rearranger communication type.
valid values: p2p, coll, default 
</entry>

<entry 
id="pio_rearr_comm_fcd"
type="char*16"
category="pio" 
group="pio_default_inparm"
valid_values="2denable,io2comp,comp2io,disable,default">
pio rearranger communication flow control direction.
valid values: 2denable,io2comp,comp2io,disable,default 
</entry>

<entry 
id="pio_rearr_comm_max_pend_req"
type="integer"
category="pio" 
group="pio_default_inparm">
pio rearranger communication max pending req
</entry>

<entry 
id="pio_rearr_comm_enable_hs"
type="logical"
category="pio" 
group="pio_default_inparm">
pio rearranger communication option: Enable handshake
default: .true.
</entry>

<entry 
id="pio_rearr_comm_enable_isend"
type="logical"
category="pio" 
group="pio_default_inparm">
pio rearranger communication option: Enable isends
default: .false.
</entry>

<!-- =========================== -->
<!-- group modelio               -->
<!-- =========================== -->

<entry 
id="diri"
type="char*256"
category="modelio" 
group="modelio">
</entry>

<entry 
id="diro"
type="char*256"
category="modelio" 
group="modelio">
</entry>

<entry 
id="logfile"
type="char*256"
category="modelio" 
group="modelio">
</entry>

<!-- =========================== -->
<!-- seq_maps.rc                 -->
<!-- =========================== -->

<entry 
id="atm2ocn_fmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
atm to ocn flux mapping file for fluxes 
</entry>

<entry 
id="atm2ocn_fmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="atm2ocn_smapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
atm to ocn state mapping file for states
</entry>

<entry 
id="atm2ocn_smaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="atm2ocn_vmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
atm to ocn state mapping file for velocity
</entry>

<entry 
id="atm2ocn_vmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="ocn2atm_fmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
ocn to atm mapping file for fluxes
</entry>

<entry 
id="ocn2atm_fmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="ocn2atm_smapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
ocn to atm mapping file for states
</entry>

<entry 
id="ocn2atm_smaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="atm2ice_fmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
atm to ice flux mapping file for fluxes
</entry>

<entry 
id="atm2ice_fmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="atm2ice_smapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
atm to ice state mapping file for states
</entry>

<entry 
id="atm2ice_smaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="atm2ice_vmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
atm to ice state mapping file for velocity
</entry>

<entry 
id="atm2ice_vmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="ice2atm_fmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
ice to atm mapping file for fluxes
</entry>

<entry 
id="ice2atm_fmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="ice2atm_smapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
ice to atm mapping file for states
</entry>

<entry 
id="ice2atm_smaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="atm2lnd_fmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
atm to land mapping file for fluxes
</entry>

<entry 
id="atm2lnd_fmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="atm2lnd_smapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
atm to land mapping file for states
</entry>

<entry 
id="atm2lnd_smaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="lnd2atm_fmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
land to atm mapping file for fluxes
</entry>

<entry 
id="lnd2atm_fmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="lnd2atm_smapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
land to atm mapping file for states
</entry>

<entry 
id="lnd2atm_smaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="lnd2rof_fmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
lnd to runoff conservative mapping file
</entry>

<entry 
id="lnd2rof_fmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="rof2lnd_fmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
runoff to lnd conservative mapping file
</entry>

<entry 
id="rof2lnd_fmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="rof2ocn_fmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
runoff to ocn area overlap conservative mapping file
</entry>

<entry 
id="rof2ocn_fmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="glc2ocn_rmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
glc to ocn runoff conservative mapping file
</entry>

<entry 
id="glc2ocn_rmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="glc2ice_rmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
glc to ice runoff conservative mapping file
</entry>

<entry 
id="glc2ice_rmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="rof2ocn_rmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
runoff to ocn nearest neighbor plus smoothing conservative mapping file
</entry>

<entry 
id="rof2ocn_rmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="lnd2glc_fmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
land to glc mapping file for fluxes
</entry>

<entry 
id="lnd2glc_fmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="lnd2glc_smapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
land to glc mapping file for states
</entry>

<entry 
id="lnd2glc_smaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="glc2lnd_fmapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
glc to land mapping file for fluxes
</entry>

<entry 
id="glc2lnd_fmaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="glc2lnd_smapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
glc to land mapping file for states
</entry>

<entry 
id="glc2lnd_smaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="atm2wav_smapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
atm to wav state mapping file for states
</entry>

<entry 
id="atm2wav_smaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="ocn2wav_smapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
ocn to wav state mapping file for states
</entry>

<entry 
id="ocn2wav_smaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="ice2wav_smapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
ice to wav state mapping file for states
</entry>

<entry 
id="ice2wav_smaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

<entry 
id="wav2ocn_smapname"
type="char*256"
category="mapping" 
input_pathname="abs"
group="seq_maps">
wav to ocn state mapping file for states
</entry>

<entry 
id="wav2ocn_smaptype"
type="char*256"
category="mapping" 
group="seq_maps">
The type of mapping desired, either "source" or "destination" mapping.
X is associated with rearrangement of the source grid to the
destination grid and then local mapping.  Y is associated with mapping
on the source grid and then rearrangement and sum to the destination
grid.
</entry>

</namelist_definition>

