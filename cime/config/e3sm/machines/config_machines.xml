<?xml version="1.0"?>

<config_machines>

<!--

 ===============================================================
 COMPILER and COMPILERS
 ===============================================================
 If a machine supports multiple compilers - then
  - the settings for COMPILERS should reflect the supported compilers
    as a comma separated string
  - the setting for COMPILER should be the default compiler
    (which is one of the values in COMPILERS)

 ===============================================================
 MPILIB and MPILIBS
 ===============================================================
 If a machine supports only one MPILIB is supported - then
 the setting for  MPILIB and MPILIBS should be blank ("")
 If a machine supports multiple mpi libraries (e.g. mpich and openmpi)
  - the settings for MPILIBS should reflect the supported mpi libraries
    as a comma separated string

 The default settings for COMPILERS and MPILIBS is blank (in config_machines.xml)

 Normally variable substitutions are not made until the case scripts are run, however variables
 of the form $ENV{VARIABLE_NAME} are substituted in create_newcase from the environment
 variable of the same name if it exists.

 ===============================================================
 PROJECT_REQUIRED
 ===============================================================
 A machine may need the PROJECT xml variable to be defined either because it is
 used in some paths, or because it is used to give an account number in the job
 submission script. If either of these are the case, then PROJECT_REQUIRED
 should be set to TRUE for the given machine.


 walltimes:
 Denotes the walltimes that can be used for a particular machine.
 walltime: as before, if default="true" is defined, this walltime will be used
 by default.
 Alternatively, ccsm_estcost must be used to choose the queue based on the estimated cost of the run.

 mpirun: the mpirun command that will be used to actually launch the model.
 The attributes used to choose the mpirun command are:

 mpilib: can either be 'default' the name of an mpi library, or a compiler name so one can choose the mpirun
         based on the mpi library in use.

   the 'executable' tag must have arguments required for the chosen mpirun, as well as the executable name.

 unit_testing: can be 'true' or 'false'.
   This allows using a different mpirun command to launch unit tests

-->
 <machine MACH="pm-cpu">
  <DESC>Perlmutter CPU-only nodes at NERSC.  Phase2 only: Each node has 2 AMD EPYC 7713 64-Core (Milan) 512GB</DESC>
  <!--NODENAME_REGEX>$ENV{NERSC_HOST}:perlmutter</NODENAME_REGEX-->
  <NODENAME_REGEX>login</NODENAME_REGEX>
  <OS>Linux</OS>
  <COMPILERS>intel,gnu</COMPILERS>
  <MPILIBS>mpich</MPILIBS>
  <PROJECT>e3sm</PROJECT>
  <SAVE_TIMING_DIR>/global/cfs/cdirs/e3sm</SAVE_TIMING_DIR>
  <SAVE_TIMING_DIR_PROJECTS>e3sm,m3411,m3412</SAVE_TIMING_DIR_PROJECTS>
  <CIME_OUTPUT_ROOT>$ENV{PSCRATCH}/e3sm_scratch/pm-cpu</CIME_OUTPUT_ROOT>
  <CIME_HTML_ROOT>/global/cfs/cdirs/e3sm/www/$ENV{USER}</CIME_HTML_ROOT>
  <CIME_URL_ROOT>http://portal.nersc.gov/project/e3sm/$ENV{USER}</CIME_URL_ROOT>
  <DIN_LOC_ROOT>/global/cfs/cdirs/e3sm/inputdata</DIN_LOC_ROOT>
  <DIN_LOC_ROOT_CLMFORC>/global/cfs/cdirs/e3sm/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
  <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/archive/$CASE</DOUT_S_ROOT>
  <BASELINE_ROOT>/global/cfs/cdirs/e3sm/baselines/$COMPILER</BASELINE_ROOT>
  <CCSM_CPRNC>/global/cfs/cdirs/e3sm/tools/cprnc/cprnc</CCSM_CPRNC>
  <GMAKE_J>10</GMAKE_J>
  <TESTS>e3sm_developer</TESTS>
  <NTEST_PARALLEL_JOBS>4</NTEST_PARALLEL_JOBS>
  <BATCH_SYSTEM>nersc_slurm</BATCH_SYSTEM>
  <SUPPORTED_BY>e3sm</SUPPORTED_BY>
  <MAX_TASKS_PER_NODE>256</MAX_TASKS_PER_NODE>
  <MAX_MPITASKS_PER_NODE>128</MAX_MPITASKS_PER_NODE>
  <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
  <mpirun mpilib="default">
    <executable>srun</executable>
    <arguments>
      <arg name="label"> --label -K</arg>
      <arg name="num_tasks"> -n {{ total_tasks }} -N {{ num_nodes }}</arg>
      <arg name="thread_count">-c $SHELL{echo 256/ {{ tasks_per_node }} |bc}</arg>
      <arg name="binding"> $SHELL{if [ 128 -ge `./xmlquery --value MAX_MPITASKS_PER_NODE` ]; then echo "--cpu_bind=cores"; else echo "--cpu_bind=threads";fi;} </arg>
      <arg name="placement"> -m plane=$SHELL{echo "{{ tasks_per_node }}/1"|bc}</arg>
  </arguments>
  </mpirun>
  <module_system type="module" allow_error="true">
    <init_path lang="perl">/usr/share/lmod/8.3.1/init/perl</init_path>
    <init_path lang="python">/usr/share/lmod/8.3.1/init/python</init_path>
    <init_path lang="sh">/usr/share/lmod/8.3.1/init/sh</init_path>
    <init_path lang="csh">/usr/share/lmod/8.3.1/init/csh</init_path>
    <cmd_path lang="perl">/usr/share/lmod/lmod/libexec/lmod perl</cmd_path>
    <cmd_path lang="python">/usr/share/lmod/lmod/libexec/lmod python</cmd_path>
    <cmd_path lang="sh">module</cmd_path>
    <cmd_path lang="csh">module</cmd_path>

    <modules>
      <command name="unload">cray-hdf5-parallel</command>
      <command name="unload">cray-netcdf-hdf5parallel</command>
      <command name="unload">cray-parallel-netcdf</command>
      <command name="unload">cray-netcdf</command>
      <command name="unload">cray-hdf5</command>
      <command name="unload">PrgEnv-gnu</command>
      <command name="unload">PrgEnv-intel</command>
      <command name="unload">PrgEnv-nvidia</command>
      <command name="unload">PrgEnv-cray</command>
      <command name="unload">PrgEnv-aocc</command>
      <command name="unload">intel</command>
      <command name="unload">intel-oneapi</command>
      <command name="unload">nvidia</command>
      <command name="unload">aocc</command>
      <command name="unload">cudatoolkit</command>
      <command name="unload">climate-utils</command>
      <command name="unload">craype-accel-nvidia80</command>
      <command name="unload">craype-accel-host</command>
      <command name="unload">perftools-base</command>
      <command name="unload">perftools</command>
      <command name="unload">darshan</command>
    </modules>

    <modules compiler="gnu">
      <command name="load">PrgEnv-gnu/8.3.3</command>
      <command name="load">gcc/11.2.0</command>
      <command name="load">cray-libsci/23.02.1.1</command>
    </modules>

    <modules compiler="intel">
      <command name="load">PrgEnv-intel/8.3.3</command>
      <command name="load">intel/2023.1.0</command>
    </modules>

    <modules compiler="nvidia">
      <command name="load">PrgEnv-nvidia</command>
      <command name="load">nvidia/22.7</command>
      <command name="load">cray-libsci/23.02.1.1</command>
    </modules>

    <modules compiler="amdclang">
      <command name="load">PrgEnv-aocc</command>
      <command name="load">aocc/4.0.0</command>
      <command name="load">cray-libsci/23.02.1.1</command>
    </modules>

    <modules>
      <command name="load">craype-accel-host</command>
      <command name="load">craype</command>
      <command name="load">cray-mpich/8.1.25</command>
      <command name="load">cray-hdf5-parallel/1.12.2.3</command>
      <command name="load">cray-netcdf-hdf5parallel/4.9.0.3</command>
      <command name="load">cray-parallel-netcdf/1.12.3.3</command>
      <command name="load">cmake/3.24.3</command>
    </modules>
  </module_system>

  <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
  <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
  <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>
  <TEST_MEMLEAK_TOLERANCE>0.25</TEST_MEMLEAK_TOLERANCE>

  <environment_variables>
    <env name="MPICH_ENV_DISPLAY">1</env>
    <env name="MPICH_VERSION_DISPLAY">1</env>
    <env name="OMP_STACKSIZE">128M</env>
    <env name="OMP_PROC_BIND">spread</env>
    <env name="OMP_PLACES">threads</env>
    <env name="HDF5_USE_FILE_LOCKING">FALSE</env>
    <env name="PERL5LIB">/global/cfs/cdirs/e3sm/perl/lib/perl5-only-switch</env>
    <env name="FI_CXI_RX_MATCH_MODE">software</env>
    <env name="MPICH_COLL_SYNC">MPI_Bcast</env>
  </environment_variables>
  <resource_limits>
    <resource name="RLIMIT_STACK">-1</resource>
  </resource_limits>
</machine>

<machine MACH="cori-haswell">
  <DESC>Cori. XC40 Cray system at NERSC. Haswell partition. os is CNL, 32 pes/node, batch system is SLURM</DESC>
  <NODENAME_REGEX>cori-knl-is-default</NODENAME_REGEX>
  <TESTS>e3sm_developer</TESTS>
  <COMPILERS>intel,gnu</COMPILERS>
  <MPILIBS>mpt</MPILIBS>
  <CIME_OUTPUT_ROOT>$ENV{SCRATCH}/e3sm_scratch/cori-haswell</CIME_OUTPUT_ROOT>
  <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
  <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
  <DIN_LOC_ROOT>/global/cfs/cdirs/e3sm/inputdata</DIN_LOC_ROOT>
  <DIN_LOC_ROOT_CLMFORC>/global/cfs/cdirs/e3sm/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
  <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/archive/$CASE</DOUT_S_ROOT>
  <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
  <BASELINE_ROOT>/global/cfs/cdirs/e3sm/baselines/$COMPILER</BASELINE_ROOT>
  <CCSM_CPRNC>/global/cfs/cdirs/e3sm/tools/cprnc.cori/cprnc</CCSM_CPRNC>
  <SAVE_TIMING_DIR>/global/cfs/cdirs/e3sm</SAVE_TIMING_DIR>
  <SAVE_TIMING_DIR_PROJECTS>e3sm,m3411,m3412</SAVE_TIMING_DIR_PROJECTS>
  <OS>CNL</OS>
  <BATCH_SYSTEM>nersc_slurm</BATCH_SYSTEM>
  <SUPPORTED_BY>e3sm</SUPPORTED_BY>
  <GMAKE_J>8</GMAKE_J>
  <MAX_TASKS_PER_NODE>32</MAX_TASKS_PER_NODE>
  <MAX_MPITASKS_PER_NODE>32</MAX_MPITASKS_PER_NODE>
  <PROJECT>e3sm</PROJECT>
  <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
  <PIO_CONFIG_OPTS> -D PIO_BUILD_TIMING:BOOL=ON </PIO_CONFIG_OPTS>
  <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>
  <mpirun mpilib="default">
    <executable>srun</executable>
    <arguments>
      <arg name="label"> --label</arg>
      <arg name="num_tasks" > -n $TOTALPES</arg>
      <arg name="thread_count">-c $SHELL{echo 64/`./xmlquery --value MAX_MPITASKS_PER_NODE`|bc}</arg>
      <arg name="binding"> $SHELL{if [ 32 -ge `./xmlquery --value MAX_MPITASKS_PER_NODE` ]; then echo "--cpu_bind=cores"; else echo "--cpu_bind=threads";fi;} </arg>
      <arg name="placement"> -m plane=$SHELL{echo `./xmlquery --value MAX_MPITASKS_PER_NODE`}</arg>
    </arguments>
  </mpirun>
  <module_system type="module">
    <init_path lang="perl">/opt/modules/default/init/perl</init_path>
    <init_path lang="python">/opt/modules/default/init/python</init_path>
    <init_path lang="sh">/opt/modules/default/init/sh</init_path>
    <init_path lang="csh">/opt/modules/default/init/csh</init_path>
    <cmd_path lang="perl">/opt/modules/default/bin/modulecmd perl</cmd_path>
    <cmd_path lang="python">/opt/modules/default/bin/modulecmd python</cmd_path>
    <cmd_path lang="sh">module</cmd_path>
    <cmd_path lang="csh">module</cmd_path>

    <modules>
      <command name="rm">PrgEnv-intel</command>
      <command name="rm">PrgEnv-cray</command>
      <command name="rm">PrgEnv-gnu</command>
      <command name="rm">intel</command>
      <command name="rm">cce</command>
      <command name="rm">gcc</command>
      <command name="rm">cray-parallel-netcdf</command>
      <command name="rm">cray-hdf5-parallel</command>
      <command name="rm">pmi</command>
      <command name="rm">cray-libsci</command>
      <command name="rm">cray-mpich2</command>
      <command name="rm">cray-mpich</command>
      <command name="rm">cray-netcdf</command>
      <command name="rm">cray-hdf5</command>
      <command name="rm">cray-netcdf-hdf5parallel</command>
      <command name="rm">craype-sandybridge</command>
      <command name="rm">craype-ivybridge</command>
      <command name="rm">craype</command>
      <command name="rm">papi</command>
      <command name="rm">cmake</command>
      <command name="rm">cray-petsc</command>
      <command name="rm">esmf</command>
      <command name="rm">zlib</command>
      <command name="rm">craype-hugepages2M</command>
      <command name="rm">darshan</command>

      <!-- first load basic defaults, then remove/swap/load as necessary -->
      <command name="load">craype</command>
      <command name="load">PrgEnv-intel</command>
      <command name="load">cray-mpich</command>
      <command name="rm">craype-mic-knl</command>
      <command name="load">craype-haswell</command>
    </modules>

    <modules mpilib="mpt">
      <command name="swap">cray-mpich cray-mpich/7.7.10</command>
    </modules>

    <modules compiler="intel">
      <command name="load">PrgEnv-intel/6.0.10</command>
      <command name="rm">intel</command>
      <command name="load">intel/19.0.3.199</command>
    </modules>

    <modules compiler="gnu">
      <command name="swap">PrgEnv-intel PrgEnv-gnu/6.0.10</command>
      <command name="rm">gcc</command>
      <command name="load">gcc/10.3.0</command>
      <command name="rm">cray-libsci</command>
      <command name="load">cray-libsci/20.09.1</command>
    </modules>

    <modules>
      <command name="swap">craype craype/2.6.2</command>
      <command name="rm">pmi</command>
      <command name="load">pmi/5.0.14</command>
      <command name="rm">craype-mic-knl</command>
      <command name="load">craype-haswell</command>
    </modules>

    <modules mpilib="mpi-serial">
      <command name="rm">cray-netcdf-hdf5parallel</command>
      <command name="rm">cray-hdf5-parallel</command>
      <command name="rm">cray-parallel-netcdf</command>
      <command name="load">cray-netcdf/4.6.3.2</command>
      <command name="load">cray-hdf5/1.10.5.2</command>
    </modules>
    <modules mpilib="!mpi-serial">
      <command name="rm">cray-netcdf-hdf5parallel</command>
      <command name="load">cray-netcdf-hdf5parallel/4.6.3.2</command>
      <command name="load">cray-hdf5-parallel/1.10.5.2</command>
      <command name="load">cray-parallel-netcdf/1.11.1.1</command>
    </modules>

    <modules>
      <command name="rm">cmake</command>
      <command name="load">cmake</command>
      <command name="load">perl5-extras</command>
    </modules>
  </module_system>

  <environment_variables>

    <env name="MPICH_ENV_DISPLAY">1</env>
    <env name="MPICH_VERSION_DISPLAY">1</env>
    <!--env name="MPICH_CPUMASK_DISPLAY">1</env-->

    <env name="OMP_STACKSIZE">128M</env>
    <env name="OMP_PROC_BIND">spread</env>
    <env name="OMP_PLACES">threads</env>
    <env name="HDF5_USE_FILE_LOCKING">FALSE</env>
  </environment_variables>
  <environment_variables compiler="intel">
    <env name="FORT_BUFFERED">yes</env>
  </environment_variables>
</machine>

<!-- KNL nodes of Cori -->
<machine MACH="cori-knl">
  <DESC>Cori. XC40 Cray system at NERSC. KNL partition. os is CNL, 68 pes/node (for now only use 64), batch system is SLURM</DESC>
  <NODENAME_REGEX>cori</NODENAME_REGEX>
  <TESTS>e3sm_developer</TESTS>
  <COMPILERS>intel,gnu</COMPILERS>
  <MPILIBS>mpt,impi</MPILIBS>
  <CIME_OUTPUT_ROOT>$ENV{SCRATCH}/e3sm_scratch/cori-knl</CIME_OUTPUT_ROOT>
  <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
  <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
  <DIN_LOC_ROOT>/global/cfs/cdirs/e3sm/inputdata</DIN_LOC_ROOT>
  <DIN_LOC_ROOT_CLMFORC>/global/cfs/cdirs/e3sm/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
  <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/archive/$CASE</DOUT_S_ROOT>
  <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
  <BASELINE_ROOT>/global/cfs/cdirs/e3sm/baselines/$COMPILER</BASELINE_ROOT>
  <CCSM_CPRNC>/global/cfs/cdirs/e3sm/tools/cprnc.cori/cprnc</CCSM_CPRNC>
  <SAVE_TIMING_DIR>/global/cfs/cdirs/e3sm</SAVE_TIMING_DIR>
  <SAVE_TIMING_DIR_PROJECTS>e3sm,m3411,m3412</SAVE_TIMING_DIR_PROJECTS>
  <OS>CNL</OS>
  <BATCH_SYSTEM>nersc_slurm</BATCH_SYSTEM>
  <SUPPORTED_BY>e3sm</SUPPORTED_BY>
  <GMAKE_J>8</GMAKE_J>
  <MAX_TASKS_PER_NODE>128</MAX_TASKS_PER_NODE>
  <MAX_MPITASKS_PER_NODE>64</MAX_MPITASKS_PER_NODE>
  <PROJECT>e3sm</PROJECT>
  <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
  <PIO_CONFIG_OPTS> -D PIO_BUILD_TIMING:BOOL=ON </PIO_CONFIG_OPTS>
  <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>
  <mpirun mpilib="default">
    <executable>srun</executable>
    <arguments>
      <arg name="label"> --label</arg>
      <arg name="num_tasks" > -n $TOTALPES</arg>
      <arg name="thread_count">-c $SHELL{mpn=`./xmlquery --value MAX_MPITASKS_PER_NODE`; if [ 68 -ge $mpn ]; then c0=`expr 272 / $mpn`; c1=`expr $c0 / 4`; cflag=`expr $c1 \* 4`; echo $cflag|bc ; else echo 272/$mpn|bc;fi;} </arg>
      <arg name="binding"> $SHELL{if [ 68 -ge `./xmlquery --value MAX_MPITASKS_PER_NODE` ]; then echo "--cpu_bind=cores"; else echo "--cpu_bind=threads";fi;} </arg>
      <arg name="placement"> -m plane=$SHELL{echo `./xmlquery --value MAX_MPITASKS_PER_NODE`}</arg>
    </arguments>
  </mpirun>
  <module_system type="module">
    <init_path lang="perl">/opt/modules/default/init/perl</init_path>
    <init_path lang="python">/opt/modules/default/init/python</init_path>
    <init_path lang="sh">/opt/modules/default/init/sh</init_path>
    <init_path lang="csh">/opt/modules/default/init/csh</init_path>
    <cmd_path lang="perl">/opt/modules/default/bin/modulecmd perl</cmd_path>
    <cmd_path lang="python">/opt/modules/default/bin/modulecmd python</cmd_path>
    <cmd_path lang="sh">module</cmd_path>
    <cmd_path lang="csh">module</cmd_path>
    <modules>
      <command name="rm">craype</command>
      <command name="rm">craype-mic-knl</command>
      <command name="rm">craype-haswell</command>
      <command name="rm">PrgEnv-intel</command>
      <command name="rm">PrgEnv-cray</command>
      <command name="rm">PrgEnv-gnu</command>
      <command name="rm">intel</command>
      <command name="rm">cce</command>
      <command name="rm">gcc</command>
      <command name="rm">cray-parallel-netcdf</command>
      <command name="rm">cray-hdf5-parallel</command>
      <command name="rm">pmi</command>
      <command name="rm">cray-mpich2</command>
      <command name="rm">cray-mpich</command>
      <command name="rm">cray-netcdf</command>
      <command name="rm">cray-hdf5</command>
      <command name="rm">cray-netcdf-hdf5parallel</command>
      <command name="rm">cray-libsci</command>
      <command name="rm">papi</command>
      <command name="rm">cmake</command>
      <command name="rm">cray-petsc</command>
      <command name="rm">esmf</command>
      <command name="rm">zlib</command>
      <command name="rm">craype-hugepages2M</command>
      <command name="rm">darshan</command>

      <!-- first load basic defaults, then remove/swap/load as necessary -->
      <command name="load">craype</command>
      <command name="load">PrgEnv-intel</command>
      <command name="load">cray-mpich</command>
      <command name="rm">craype-haswell</command>
      <command name="load">craype-mic-knl</command>
    </modules>

    <modules mpilib="mpt">
      <command name="swap">cray-mpich cray-mpich/7.7.10</command>
    </modules>

    <modules mpilib="impi">
      <command name="swap">cray-mpich impi/2020.up4</command>
    </modules>

    <modules compiler="intel">
      <command name="load">PrgEnv-intel/6.0.10</command>
      <command name="rm">intel</command>
      <command name="load">intel/19.0.3.199</command>
    </modules>

    <modules compiler="gnu">
      <command name="swap">PrgEnv-intel PrgEnv-gnu/6.0.10</command>
      <command name="rm">gcc</command>
      <command name="load">gcc/10.3.0</command>
      <command name="rm">cray-libsci</command>
      <command name="load">cray-libsci/20.09.1</command>
    </modules>

    <modules>
      <command name="swap">craype craype/2.6.2</command>
      <command name="rm">pmi</command>
      <command name="load">pmi/5.0.14</command>
      <command name="rm">craype-haswell</command>
      <command name="load">craype-mic-knl</command>
    </modules>

    <modules mpilib="mpi-serial">
      <command name="rm">cray-netcdf-hdf5parallel</command>
      <command name="rm">cray-hdf5-parallel</command>
      <command name="rm">cray-parallel-netcdf</command>
      <command name="load">cray-netcdf/4.6.3.2</command>
      <command name="load">cray-hdf5/1.10.5.2</command>
    </modules>
    <modules mpilib="!mpi-serial">
      <command name="rm">cray-netcdf-hdf5parallel</command>
      <command name="load">cray-netcdf-hdf5parallel/4.6.3.2</command>
      <command name="load">cray-hdf5-parallel/1.10.5.2</command>
      <command name="load">cray-parallel-netcdf/1.11.1.1</command>
    </modules>

    <modules>
      <command name="rm">cmake</command>
      <command name="load">cmake</command>
      <command name="load">perl5-extras</command>
    </modules>

    <!--command name="list">&gt;&amp; ml.txt</command-->

  </module_system>

  <environment_variables>
    <env name="MPICH_ENV_DISPLAY">1</env>
    <env name="MPICH_VERSION_DISPLAY">1</env>
    <!--env name="MPICH_CPUMASK_DISPLAY">1</env-->

    <env name="OMP_STACKSIZE">128M</env>
    <env name="OMP_PROC_BIND">spread</env>
    <env name="OMP_PLACES">threads</env>
    <env name="HDF5_USE_FILE_LOCKING">FALSE</env>
  </environment_variables>

  <environment_variables mpilib="mpt">
    <env name="MPICH_GNI_DYNAMIC_CONN">disabled</env>
  </environment_variables>
  <environment_variables compiler="intel">
    <env name="FORT_BUFFERED">yes</env>
    <env name="MPICH_MEMORY_REPORT">1</env>
  </environment_variables>
</machine>

<!-- Skylake nodes of Stampede2 at TACC -->
<machine MACH="stampede2">
  <DESC>Stampede2. Intel skylake nodes at TACC.  48 cores per node, batch system is SLURM</DESC>
  <NODENAME_REGEX>.*stampede2.*</NODENAME_REGEX>
  <TESTS>e3sm_developer</TESTS>
  <COMPILERS>intel,gnu</COMPILERS>
  <MPILIBS>impi</MPILIBS>
  <CIME_OUTPUT_ROOT>$ENV{SCRATCH}/acme_scratch/stampede2</CIME_OUTPUT_ROOT>
  <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
  <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
  <DIN_LOC_ROOT>$ENV{SCRATCH}/inputdata</DIN_LOC_ROOT>
  <DIN_LOC_ROOT_CLMFORC>$ENV{SCRATCH}/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
  <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/archive/$CASE</DOUT_S_ROOT>
  <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
  <BASELINE_ROOT>$ENV{SCRATCH}/baselines/$COMPILER</BASELINE_ROOT>
  <CCSM_CPRNC>$ENV{SCRATCH}/tools/cprnc.cori/cprnc</CCSM_CPRNC>
  <SAVE_TIMING_DIR>$ENV{SCRATCH}</SAVE_TIMING_DIR>
  <SAVE_TIMING_DIR_PROJECTS>acme</SAVE_TIMING_DIR_PROJECTS>
  <OS>LINUX</OS>
  <BATCH_SYSTEM>slurm</BATCH_SYSTEM>
  <SUPPORTED_BY>e3sm</SUPPORTED_BY>
  <GMAKE_J>8</GMAKE_J>
  <MAX_TASKS_PER_NODE>96</MAX_TASKS_PER_NODE>
  <MAX_MPITASKS_PER_NODE>48</MAX_MPITASKS_PER_NODE>
  <PROJECT_REQUIRED>FALSE</PROJECT_REQUIRED>
  <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>
  <mpirun mpilib="default">
    <executable>ibrun</executable>
  </mpirun>
  <module_system type="module">
    <init_path lang="perl">/opt/apps/lmod/lmod/init/perl</init_path>
    <init_path lang="python">/opt/apps/lmod/lmod/init/python</init_path>
    <init_path lang="sh">/opt/apps/lmod/lmod/init/sh</init_path>
    <init_path lang="csh">/opt/apps/lmod/lmod/init/csh</init_path>
    <cmd_path lang="perl">/opt/apps/lmod/lmod/libexec/lmod perl</cmd_path>
    <cmd_path lang="python">/opt/apps/lmod/lmod/libexec/lmod python</cmd_path>
    <cmd_path lang="sh">module -q</cmd_path>
    <cmd_path lang="csh">module -q</cmd_path>

    <modules>
      <command name="purge"></command>
    </modules>

    <modules compiler="intel">
      <command name="load">intel/18.0.0</command>
    </modules>

    <modules compiler="gnu">
      <command name="load">gcc/6.3.0</command>
    </modules>

    <modules mpilib="impi">
      <command name="load">impi/18.0.0</command>
    </modules>

    <modules mpilib="mpi-serial">
      <command name="load">hdf5/1.8.16</command>
      <command name="load">netcdf/4.3.3.1</command>
    </modules>
    <modules mpilib="!mpi-serial">
      <command name="load">phdf5/1.8.16</command>
      <command name="load">parallel-netcdf/4.3.3.1</command>
      <command name="load">pnetcdf/1.8.1</command>
    </modules>
    <modules>
      <command name="load">git</command>
      <command name="load">cmake</command>
      <command name="load">autotools</command>
      <command name="load">xalt</command>
      <!--command name="load">TACC</command-->
      <!--command name="load">python/2.7.13</command-->
    </modules>

  </module_system>

  <environment_variables>
    <env name="MPICH_ENV_DISPLAY">1</env>
    <env name="MPICH_VERSION_DISPLAY">1</env>

    <env name="OMP_STACKSIZE">128M</env>
    <env name="OMP_PROC_BIND">spread</env>
    <env name="OMP_PLACES">threads</env>
    <env name="I_MPI_PIN">1</env>
    <env name="MY_MPIRUN_OPTIONS">-l</env>
  </environment_variables>

</machine>


<machine MACH="mac">
    <DESC>Mac OS/X workstation or laptop</DESC>
    <NODENAME_REGEX></NODENAME_REGEX>
    <TESTS>e3sm_developer</TESTS>
    <OS>Darwin</OS>
    <COMPILERS>gnu</COMPILERS>
    <MPILIBS>openmpi,mpich</MPILIBS>
    <RUNDIR>$ENV{HOME}/projects/acme/scratch/$CASE/run</RUNDIR>
    <EXEROOT>$ENV{HOME}/projects/acme/scratch/$CASE/bld</EXEROOT>
    <DIN_LOC_ROOT>$ENV{HOME}/projects/acme/cesm-inputdata</DIN_LOC_ROOT>    <DIN_LOC_ROOT_CLMFORC>$ENV{HOME}/projects/acme/ptclm-data</DIN_LOC_ROOT_CLMFORC>
    <DOUT_S_ROOT>$ENV{HOME}/projects/acme/scratch/archive/$CASE</DOUT_S_ROOT>
    <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
    <CIME_OUTPUT_ROOT>$ENV{HOME}/projects/acme/scratch</CIME_OUTPUT_ROOT>
    <BASELINE_ROOT>$ENV{HOME}/projects/acme/baselines/$COMPILER</BASELINE_ROOT>
    <!-- cmake -DCMAKE_Fortran_COMPILER=/opt/local/bin/mpif90-mpich-gcc48 -DHDF5_DIR=/opt/local -DNetcdf_INCLUDE_DIR=/opt/local/include .. -->
>
    <CCSM_CPRNC>$CCSMROOT/tools/cprnc/build/cprnc</CCSM_CPRNC>
    <SUPPORTED_BY>jnjohnson at lbl dot gov</SUPPORTED_BY>
<!--    <GMAKE>make</GMAKE> <- this doesn't actually work! -->
    <GMAKE_J>4</GMAKE_J>
    <MAX_TASKS_PER_NODE>4</MAX_TASKS_PER_NODE>
    <MAX_MPITASKS_PER_NODE>2</MAX_MPITASKS_PER_NODE>
</machine>

<machine MACH="linux-generic">
    <DESC>Linux workstation or laptop</DESC>
    <NODENAME_REGEX></NODENAME_REGEX>
    <OS>LINUX</OS>
    <TESTS>e3sm_developer</TESTS>
    <COMPILERS>gnu</COMPILERS>
    <MPILIBS>openmpi,mpich</MPILIBS>
    <RUNDIR>$ENV{HOME}/projects/acme/scratch/$CASE/run</RUNDIR>
    <EXEROOT>$ENV{HOME}/projects/acme/scratch/$CASE/bld</EXEROOT>
    <DIN_LOC_ROOT>$ENV{HOME}/projects/acme/cesm-inputdata</DIN_LOC_ROOT>
    <DIN_LOC_ROOT_CLMFORC>$ENV{HOME}/projects/acme/ptclm-data</DIN_LOC_ROOT_CLMFORC>
    <DOUT_S_ROOT>$ENV{HOME}/projects/acme/scratch/archive/$CASE</DOUT_S_ROOT>
    <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
    <CIME_OUTPUT_ROOT>$ENV{HOME}/projects/acme/scratch</CIME_OUTPUT_ROOT>
    <BASELINE_ROOT>$ENV{HOME}/projects/acme/baselines/$COMPILER</BASELINE_ROOT>
    <!-- cmake -DCMAKE_Fortran_COMPILER=/opt/local/bin/mpif90-mpich-gcc48 -DHDF5_DIR=/opt/local -DNetcdf_INCLUDE_DIR=/opt/local/include .. -->>
    <CCSM_CPRNC>$CCSMROOT/tools/cprnc/build/cprnc</CCSM_CPRNC>
    <SUPPORTED_BY>jayesh at mcs dot anl dot gov</SUPPORTED_BY>
<!--    <GMAKE>make</GMAKE> <- this doesn't actually work! -->
    <GMAKE_J>4</GMAKE_J>
    <MAX_TASKS_PER_NODE>4</MAX_TASKS_PER_NODE>
    <MAX_MPITASKS_PER_NODE>2</MAX_MPITASKS_PER_NODE>
    <mpirun mpilib="default">
      <executable>mpirun</executable>
      <arguments>
        <arg name="num_tasks"> -np $TOTALPES</arg>
      </arguments>
    </mpirun>
</machine>

<machine MACH="melvin">
    <DESC>Linux workstation for Jenkins testing</DESC>
    <NODENAME_REGEX>(sems-|melvin|watson|s999964|climate|penn)</NODENAME_REGEX>
    <PROXY>sonproxy.sandia.gov:80</PROXY>
    <TESTS>e3sm_developer</TESTS>
    <OS>LINUX</OS>
    <COMPILERS>gnu,intel</COMPILERS>
    <MPILIBS>openmpi</MPILIBS>
    <CIME_OUTPUT_ROOT>$ENV{HOME}/acme/scratch</CIME_OUTPUT_ROOT>
    <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
    <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
    <DIN_LOC_ROOT>/sems-data-store/ACME/inputdata</DIN_LOC_ROOT>
    <DIN_LOC_ROOT_CLMFORC>/sems-data-store/ACME/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
    <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/archive/$CASE</DOUT_S_ROOT>
    <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
    <BASELINE_ROOT>/sems-data-store/ACME/baselines/$COMPILER</BASELINE_ROOT>
    <SAVE_TIMING_DIR>/sems-data-store/ACME/timings</SAVE_TIMING_DIR>
    <SAVE_TIMING_DIR_PROJECTS>.*</SAVE_TIMING_DIR_PROJECTS>
    <CCSM_CPRNC>/sems-data-store/ACME/cprnc/build.new/cprnc</CCSM_CPRNC>
    <SUPPORTED_BY>jgfouca at sandia dot gov</SUPPORTED_BY>
<!--    <GMAKE>make</GMAKE> <- this doesn't actually work! -->
    <GMAKE_J>32</GMAKE_J>
    <MAX_TASKS_PER_NODE>48</MAX_TASKS_PER_NODE>
    <MAX_MPITASKS_PER_NODE>48</MAX_MPITASKS_PER_NODE>
    <BATCH_SYSTEM>none</BATCH_SYSTEM>
    <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>
    <mpirun mpilib="default">
      <executable>mpirun</executable>
      <arguments>
        <arg name="num_tasks"> -np $TOTALPES</arg>
        <arg name="tasks_per_node"> --map-by ppr:{{ tasks_per_numa }}:socket:PE=$ENV{OMP_NUM_THREADS} --bind-to hwthread</arg>
      </arguments>
    </mpirun>
    <module_system type="module" allow_error="false">
      <init_path lang="python">/usr/share/Modules/init/python.py</init_path>
      <init_path lang="perl">/usr/share/Modules/init/perl.pm</init_path>
      <init_path lang="sh">/usr/share/Modules/init/sh</init_path>
      <init_path lang="csh">/usr/share/Modules/init/csh</init_path>
      <cmd_path lang="python">/usr/bin/modulecmd python</cmd_path>
      <cmd_path lang="perl">/usr/bin/modulecmd perl</cmd_path>
      <cmd_path lang="csh">module</cmd_path>
      <cmd_path lang="sh">module</cmd_path>
      <modules>
        <command name="purge"/>
        <command name="load">sems-env</command>
        <command name="load">acme-env</command>
        <command name="load">sems-git</command>
        <command name="load">sems-python/2.7.9</command>
        <command name="load">sems-cmake/2.8.12</command>
      </modules>
      <modules compiler="gnu">
        <command name="load">sems-gcc/5.3.0</command>
      </modules>
      <modules compiler="intel">
        <command name="load">sems-intel/16.0.3</command>
      </modules>
      <modules mpilib="mpi-serial">
        <command name="load">sems-netcdf/4.4.1/exo</command>
        <command name="load">acme-pfunit/3.2.8/base</command>
      </modules>
      <modules mpilib="!mpi-serial">
        <command name="load">sems-openmpi/1.8.7</command>
        <command name="load">sems-netcdf/4.4.1/exo_parallel</command>
      </modules>
    </module_system>
    <environment_variables>
      <env name="NETCDFROOT">$ENV{SEMS_NETCDF_ROOT}</env>
      <env name="OMP_STACKSIZE">64M</env>
      <env name="OMP_PROC_BIND">spread</env>
      <env name="OMP_PLACES">threads</env>
    </environment_variables>
    <environment_variables mpilib="!mpi-serial">
      <env name="PNETCDFROOT">$ENV{SEMS_NETCDF_ROOT}</env>
    </environment_variables>
</machine>

<machine MACH="anlworkstation">
    <DESC>Linux workstation for ANL</DESC>
    <NODENAME_REGEX>compute.*mcs.anl.gov</NODENAME_REGEX>
    <TESTS>e3sm_developer</TESTS>
    <OS>LINUX</OS>
    <COMPILERS>gnu</COMPILERS>
    <MPILIBS>mpich</MPILIBS>
    <CIME_OUTPUT_ROOT>$ENV{HOME}/acme/scratch</CIME_OUTPUT_ROOT>
    <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
    <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
    <DIN_LOC_ROOT>/home/climate1/acme/inputdata</DIN_LOC_ROOT>
    <DIN_LOC_ROOT_CLMFORC>/home/climate1/acme/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
    <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/archive/$CASE</DOUT_S_ROOT>
    <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
    <BASELINE_ROOT>/home/climate1/acme/baselines/$COMPILER</BASELINE_ROOT>
    <CCSM_CPRNC>/home/climate1/acme/cprnc/build/cprnc</CCSM_CPRNC>
    <BATCHQUERY></BATCHQUERY>
    <BATCHSUBMIT></BATCHSUBMIT>
    <SUPPORTED_BY>jgfouca at sandia dot gov</SUPPORTED_BY>
    <GMAKE>make</GMAKE>
    <GMAKE_J>32</GMAKE_J>
    <MAX_TASKS_PER_NODE>32</MAX_TASKS_PER_NODE>
    <MAX_MPITASKS_PER_NODE>32</MAX_MPITASKS_PER_NODE>
    <BATCH_SYSTEM>none</BATCH_SYSTEM>
    <mpirun mpilib="default">
      <executable>mpirun</executable>
      <arguments>
        <arg name="num_tasks"> -np $TOTALPES</arg>
      </arguments>
    </mpirun>
    <module_system type="soft">
      <init_path lang="csh">/software/common/adm/packages/softenv-1.6.2/etc/softenv-load.csh</init_path>
      <init_path lang="sh">/software/common/adm/packages/softenv-1.6.2/etc/softenv-load.sh</init_path>
      <cmd_path lang="csh">source /software/common/adm/packages/softenv-1.6.2/etc/softenv-aliases.csh ; soft</cmd_path>
      <cmd_path lang="sh">source /software/common/adm/packages/softenv-1.6.2/etc/softenv-aliases.sh ; soft</cmd_path>
      <modules compiler="gnu">
	<command name="add">+gcc-6.2.0</command>
	<command name="add">+szip-2.1-gcc-6.2.0</command>
	<command name="add">+cmake-2.8.12</command>
      </modules>
      <modules compiler="gnu" mpilib="mpi-serial">
        <command name="add">+netcdf-4.4.1c-4.2cxx-4.4.4f-serial-gcc6.2.0</command>
      </modules>
      <modules compiler="gnu" mpilib="!mpi-serial">
        <command name="add">+mpich-3.2-gcc-6.2.0</command>
        <command name="add">+hdf5-1.8.16-gcc-6.2.0-mpich-3.2-parallel</command>
        <command name="add">+netcdf-4.4.1c-4.2cxx-4.4.4f-parallel-gcc6.2.0-mpich-3.2</command>
      </modules>
    </module_system>
    <environment_variables>
      <env name="NETCDF_PATH">$SHELL{dirname $(dirname $(which ncdump))}</env>
    </environment_variables>
    <environment_variables mpilib="mpi-serial">
      <!-- We currently don't have a soft env for serial hdf5 -->
      <env name="LD_LIBRARY_PATH">/soft/apps/packages/climate/hdf5/1.8.16-serial/gcc-6.2.0/lib:$ENV{LD_LIBRARY_PATH}</env>
    </environment_variables>
    <environment_variables mpilib="!mpi-serial">
      <env name="HDF5_PATH">$SHELL{dirname $(dirname $(which h5dump))}</env>
      <!-- We currently don't have a soft env for pnetcdf 1.8.1 -->
      <env name="PNETCDF_PATH">/soft/apps/packages/climate/pnetcdf/1.8.1/gcc-6.2.0</env>
    </environment_variables>
</machine>

<machine MACH="sandiatoss3">
  <DESC>SNL clust</DESC>
  <NODENAME_REGEX>(skybridge|chama)</NODENAME_REGEX>
  <PROXY>wwwproxy.sandia.gov:80</PROXY>
  <TESTS>e3sm_integration</TESTS>
  <COMPILERS>intel</COMPILERS>
  <MPILIBS>openmpi</MPILIBS>
  <OS>LINUX</OS>
  <CIME_OUTPUT_ROOT>/gpfs1/$USER/acme_scratch/sandiatoss3</CIME_OUTPUT_ROOT>
  <RUNDIR>/gscratch/$USER/acme_scratch/sandiatoss3/$CASE/run</RUNDIR>
  <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
  <DIN_LOC_ROOT>/projects/ccsm/inputdata</DIN_LOC_ROOT>
  <DIN_LOC_ROOT_CLMFORC>/projects/ccsm/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
  <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/archive/$CASE</DOUT_S_ROOT>               <!-- complete path to a short term archiving directory -->
  <DOUT_L_MSROOT>USERDEFINED_optional_run</DOUT_L_MSROOT>           <!-- complete path to a long term archiving directory -->
  <BASELINE_ROOT>/projects/ccsm/ccsm_baselines/$COMPILER</BASELINE_ROOT>
  <CCSM_CPRNC>/projects/ccsm/cprnc/build.toss3/cprnc_wrap</CCSM_CPRNC>                <!-- path to the cprnc tool used to compare netcdf history files in testing -->
  <SAVE_TIMING_DIR>/projects/ccsm/timings</SAVE_TIMING_DIR>
  <SAVE_TIMING_DIR_PROJECTS>.*</SAVE_TIMING_DIR_PROJECTS>
  <BATCH_SYSTEM>slurm</BATCH_SYSTEM>
  <SUPPORTED_BY>jgfouca at sandia dot gov</SUPPORTED_BY>
  <GMAKE_J>8</GMAKE_J>
  <MAX_TASKS_PER_NODE>16</MAX_TASKS_PER_NODE>
  <MAX_MPITASKS_PER_NODE>16</MAX_MPITASKS_PER_NODE>
  <PIO_BUFFER_SIZE_LIMIT>1</PIO_BUFFER_SIZE_LIMIT>
  <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
  <PROJECT>fy150001</PROJECT>
  <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>

  <mpirun mpilib="default">
    <executable>mpiexec</executable>
    <arguments>
      <arg name="num_tasks"> --n $TOTALPES</arg>
      <arg name="tasks_per_node"> --map-by ppr:{{ tasks_per_numa }}:socket:PE=$ENV{OMP_NUM_THREADS} --bind-to core</arg>
    </arguments>
  </mpirun>
  <mpirun mpilib="mpi-serial">
    <executable></executable>
  </mpirun>
  <module_system type="module">
    <init_path lang="python">/usr/share/lmod/lmod/init/python.py</init_path>
    <init_path lang="perl">/usr/share/lmod/lmod/init/perl.pm</init_path>
    <init_path lang="sh">/usr/share/lmod/lmod/init/sh</init_path>
    <init_path lang="csh">/usr/share/lmod/lmod/init/csh</init_path>
    <cmd_path lang="python">/usr/share/lmod/lmod/libexec/lmod python</cmd_path>
    <cmd_path lang="perl">/usr/share/lmod/lmod/libexec/lmod perl</cmd_path>
    <cmd_path lang="csh">module</cmd_path>
    <cmd_path lang="sh">module</cmd_path>
    <modules>
      <command name="purge"/>
      <command name="load">sems-env</command>
      <command name="load">sems-git</command>
      <command name="load">sems-python/2.7.9</command>
      <command name="load">sems-cmake</command>
      <command name="load">gnu/4.9.2</command>
      <command name="load">sems-intel/17.0.0</command>
    </modules>
    <modules mpilib="!mpi-serial">
      <command name="load">sems-openmpi/1.10.5</command>
      <command name="load">sems-netcdf/4.4.1/exo_parallel</command>
    </modules>
    <modules mpilib="mpi-serial">
      <command name="load">sems-netcdf/4.4.1/exo</command>
    </modules>
  </module_system>
  <environment_variables>
    <env name="NETCDFROOT">$ENV{SEMS_NETCDF_ROOT}</env>
    <env name="NETCDF_INCLUDES">$ENV{SEMS_NETCDF_ROOT}/include</env>
    <env name="NETCDF_LIBS">$ENV{SEMS_NETCDF_ROOT}/lib</env>
    <env name="OMP_STACKSIZE">64M</env>
  </environment_variables>
  <environment_variables mpilib="!mpi-serial">
    <env name="PNETCDFROOT">$ENV{SEMS_NETCDF_ROOT}</env>
  </environment_variables>
</machine>

<machine MACH="ghost">
  <DESC>SNL clust</DESC>
  <NODENAME_REGEX>ghost-login</NODENAME_REGEX>
  <PROXY>wwwproxy.sandia.gov:80</PROXY>
  <TESTS>e3sm_integration</TESTS>
  <COMPILERS>intel</COMPILERS>
  <MPILIBS>openmpi</MPILIBS>
  <OS>LINUX</OS>
  <CIME_OUTPUT_ROOT>/gscratch/$USER/acme_scratch/ghost</CIME_OUTPUT_ROOT>
  <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
  <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
  <DIN_LOC_ROOT>/projects/ccsm/inputdata</DIN_LOC_ROOT>
  <DIN_LOC_ROOT_CLMFORC>/projects/ccsm/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
  <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/archive/$CASE</DOUT_S_ROOT>               <!-- complete path to a short term archiving directory -->
  <DOUT_L_MSROOT>USERDEFINED_optional_run</DOUT_L_MSROOT>           <!-- complete path to a long term archiving directory -->
  <BASELINE_ROOT>/projects/ccsm/ccsm_baselines/$COMPILER</BASELINE_ROOT>
  <CCSM_CPRNC>/projects/ccsm/cprnc/build.toss3/cprnc_wrap</CCSM_CPRNC>                <!-- path to the cprnc tool used to compare netcdf history files in testing -->
  <BATCH_SYSTEM>slurm</BATCH_SYSTEM>
  <SUPPORTED_BY>jgfouca at sandia dot gov</SUPPORTED_BY>
  <GMAKE_J>8</GMAKE_J>
  <MAX_TASKS_PER_NODE>36</MAX_TASKS_PER_NODE>
  <MAX_MPITASKS_PER_NODE>36</MAX_MPITASKS_PER_NODE>
  <PIO_BUFFER_SIZE_LIMIT>1</PIO_BUFFER_SIZE_LIMIT>
  <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
  <PROJECT>fy150001</PROJECT>

  <mpirun mpilib="default">
    <executable>mpiexec</executable>
    <arguments>
      <arg name="num_tasks"> --n $TOTALPES</arg>
      <arg name="tasks_per_node"> --map-by ppr:{{ tasks_per_numa }}:socket:PE=$ENV{OMP_NUM_THREADS} --bind-to core</arg>
    </arguments>
  </mpirun>
  <mpirun mpilib="mpi-serial">
    <executable></executable>
  </mpirun>
  <module_system type="module">
    <init_path lang="python">/usr/share/lmod/lmod/init/python.py</init_path>
    <init_path lang="perl">/usr/share/lmod/lmod/init/perl.pm</init_path>
    <init_path lang="sh">/usr/share/lmod/lmod/init/sh</init_path>
    <init_path lang="csh">/usr/share/lmod/lmod/init/csh</init_path>
    <cmd_path lang="python">/usr/share/lmod/lmod/libexec/lmod python</cmd_path>
    <cmd_path lang="perl">/usr/share/lmod/lmod/libexec/lmod perl</cmd_path>
    <cmd_path lang="csh">module</cmd_path>
    <cmd_path lang="sh">module</cmd_path>
    <modules>
      <command name="purge"/>
      <command name="load">sems-env</command>
      <command name="load">sems-git</command>
      <command name="load">sems-python/2.7.9</command>
      <command name="load">sems-cmake</command>
      <command name="load">gnu/4.9.2</command>
      <command name="load">sems-intel/16.0.2</command>
      <command name="load">mkl/16.0</command>
      <command name="load">sems-netcdf/4.4.1/exo_parallel</command>
    </modules>
    <modules mpilib="!mpi-serial">
      <command name="load">sems-openmpi/1.10.5</command>
    </modules>
  </module_system>
  <environment_variables>
    <env name="NETCDFROOT">$ENV{SEMS_NETCDF_ROOT}</env>
    <env name="NETCDF_INCLUDES">$ENV{SEMS_NETCDF_ROOT}/include</env>
    <env name="NETCDF_LIBS">$ENV{SEMS_NETCDF_ROOT}/lib</env>
    <env name="OMP_STACKSIZE">64M</env>
  </environment_variables>
  <environment_variables mpilib="!mpi-serial">
    <env name="PNETCDFROOT">$ENV{SEMS_NETCDF_ROOT}</env>
  </environment_variables>
</machine>

<machine MACH="blues">
         <DESC>ANL/LCRC Linux Cluster</DESC>
         <NODENAME_REGEX>blogin.*.lcrc.anl.gov</NODENAME_REGEX>
         <TESTS>e3sm_integration</TESTS>
         <COMPILERS>gnu,pgi,intel,nag</COMPILERS>
         <MPILIBS>mvapich,mpich,openmpi</MPILIBS>
         <CIME_OUTPUT_ROOT>/lcrc/project/$PROJECT/$USER/acme_scratch</CIME_OUTPUT_ROOT>
	 <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
	 <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
         <DIN_LOC_ROOT>/home/ccsm-data/inputdata</DIN_LOC_ROOT>
         <DIN_LOC_ROOT_CLMFORC>/home/ccsm-data/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
         <DOUT_S_ROOT>/lcrc/project/ACME/$USER/archive/$CASE</DOUT_S_ROOT>
         <DOUT_L_MSROOT>/lcrc/project/ACME/$USER/archive/$CASE</DOUT_L_MSROOT>
         <BASELINE_ROOT>/lcrc/group/acme/acme_baselines/blues/$COMPILER</BASELINE_ROOT>
         <CCSM_CPRNC>/home/ccsm-data/tools/cprnc</CCSM_CPRNC>
         <OS>LINUX</OS>
	 <BATCH_SYSTEM>pbs</BATCH_SYSTEM>
         <SUPPORTED_BY>acme</SUPPORTED_BY>
         <GMAKE_J>4</GMAKE_J>
         <MAX_TASKS_PER_NODE>16</MAX_TASKS_PER_NODE>
	 <MAX_MPITASKS_PER_NODE>16</MAX_MPITASKS_PER_NODE>
         <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
	 <PROJECT>ACME</PROJECT>
         <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>
         <mpirun mpilib="mvapich">
           <executable>mpiexec</executable>
           <arguments>
             <arg name="num_tasks"> -n $TOTALPES </arg>
           </arguments>
         </mpirun>
         <mpirun mpilib="mpich">
           <executable>mpiexec</executable>
           <arguments>
             <arg name="num_tasks"> -n $TOTALPES </arg>
           </arguments>
         </mpirun>
         <mpirun mpilib="mpi-serial">
             <executable></executable>
         </mpirun>
    <module_system type="soft">
      <init_path lang="csh">/etc/profile.d/a_softenv.csh</init_path>
      <init_path lang="sh">/etc/profile.d/a_softenv.sh</init_path>
      <cmd_path lang="csh">soft</cmd_path>
      <cmd_path lang="sh">soft</cmd_path>
      <modules>
        <command name="add">+cmake-2.8.12</command>
        <command name="add">+python-2.7</command>
      </modules>
      <modules compiler="gnu">
        <command name="add">+gcc-5.3.0</command>
        <command name="add">+hdf5-1.10.0-gcc-5.3.0-serial</command>
        <command name="add">+netcdf-c-4.4.0-f77-4.4.3-gcc-5.3.0-serial</command>
      </modules>
      <modules compiler="gnu-5.2">
	<command name="add">+gcc-5.2</command>
	<command name="add">+netcdf-4.3.3.1-gnu5.2-serial</command>
      </modules>
      <modules compiler="gnu" mpilib="mvapich">
        <command name="add">+mvapich2-2.2b-gcc-5.3.0</command>
        <command name="add">+pnetcdf-1.6.1-gcc-5.3.0-mvapich2-2.2b</command>
      </modules>
      <modules compiler="gnu-5.2" mpilib="mvapich">
	<command name="add">+mvapich2-2.2b-gcc-5.2</command>
      </modules>
      <modules compiler="intel">
	<command name="add">+intel-15.0</command>
	<command name="add">+mkl-11.2.1</command>
      </modules>
      <modules compiler="intel" mpilib="mvapich">
	<command name="add">+mvapich2-2.2b-intel-15.0</command>
	<command name="add">+pnetcdf-1.6.1-mvapich2-2.2a-intel-15.0</command>
      </modules>
      <modules compiler="pgi">
        <command name="add">+pgi-15.7</command>
        <command name="add">+binutils-2.27</command>
        <command name="add">+netcdf-c-4.4.1-f77-4.4.4-pgi-15.7-serial</command>
      </modules>
      <modules compiler="pgi" mpilib="mvapich">
        <command name="add">+mvapich2-2.2-pgi-15.7</command>
        <command name="add">+pnetcdf-1.7.0-pgi-15.7-mvapich2-2.2</command>
      </modules>
      <modules compiler="nag">
        <command name="add">+nag-6.0</command>
        <command name="add">+hdf5-1.8.12-serial-nag</command>
        <command name="add">+netcdf-4.3.1-serial-nag</command>
      </modules>
      <modules compiler="nag" mpilib="mvapich">
        <command name="add">+mpich3-3.1.4-nag-6.0</command>
        <command name="add">+pnetcdf-1.6.1-mpich-3.1.4-nag-6.0</command>
      </modules>
    </module_system>
    <environment_variables>
      <env name="NETCDFROOT">$SHELL{dirname $(dirname $(which ncdump))}</env>
    </environment_variables>
    <environment_variables mpilib="!mpi-serial">
      <env name="PNETCDFROOT">$SHELL{dirname $(dirname $(which pnetcdf_version))}</env>
    </environment_variables>
    <environment_variables>
      <env name="OMP_STACKSIZE">64M</env>
    </environment_variables>
</machine>

<machine MACH="anvil">
    <DESC>ANL/LCRC Linux Cluster</DESC>
    <NODENAME_REGEX>blueslogin.*.lcrc.anl.gov</NODENAME_REGEX>
    <TESTS>e3sm_integration</TESTS>
    <COMPILERS>intel,gnu</COMPILERS>
    <MPILIBS>mvapich</MPILIBS>
    <CIME_OUTPUT_ROOT>/lcrc/group/acme/$USER/acme_scratch/anvil</CIME_OUTPUT_ROOT>
    <SAVE_TIMING_DIR>/lcrc/group/acme</SAVE_TIMING_DIR>
    <SAVE_TIMING_DIR_PROJECTS>.*</SAVE_TIMING_DIR_PROJECTS>
    <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
    <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
    <DIN_LOC_ROOT>/home/ccsm-data/inputdata</DIN_LOC_ROOT>
    <DIN_LOC_ROOT_CLMFORC>/home/ccsm-data/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
    <DOUT_S_ROOT>/lcrc/group/acme/$USER/archive/$CASE</DOUT_S_ROOT>
    <DOUT_L_MSROOT>/lcrc/project/ACME/$USER/archive/$CASE</DOUT_L_MSROOT>
    <BASELINE_ROOT>/lcrc/group/acme/acme_baselines/$COMPILER</BASELINE_ROOT>
    <CCSM_CPRNC>/lcrc/group/acme/tools/cprnc/cprnc</CCSM_CPRNC>
    <OS>LINUX</OS>
    <BATCH_SYSTEM>slurm</BATCH_SYSTEM>
    <SUPPORTED_BY>E3SM</SUPPORTED_BY>
    <GMAKE_J>8</GMAKE_J>
    <MAX_TASKS_PER_NODE>36</MAX_TASKS_PER_NODE>
    <MAX_MPITASKS_PER_NODE>36</MAX_MPITASKS_PER_NODE>
    <PROJECT_REQUIRED>FALSE</PROJECT_REQUIRED>
    <PROJECT>condo</PROJECT>
    <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>
    <MAX_GB_OLD_TEST_DATA>1000</MAX_GB_OLD_TEST_DATA>
    <mpirun mpilib="default">
      <executable>srun</executable>
      <arguments>
        <arg name="num_tasks"> -l -n {{ total_tasks }} -N {{ num_nodes }} --kill-on-bad-exit</arg>
        <arg name="binding">--cpu_bind=cores</arg>
        <arg name="thread_count">-c $SHELL{if [ FALSE = `./xmlquery --value SMP_PRESENT` ];then echo 1;else echo $OMP_NUM_THREADS;fi}</arg>
        <arg name="placement">-m plane=$SHELL{if [ FALSE = `./xmlquery --value SMP_PRESENT` ];then echo 36;else echo 36/$OMP_NUM_THREADS|bc;fi}</arg>
      </arguments>
    </mpirun>
    <mpirun mpilib="mpi-serial">
      <executable></executable>
    </mpirun>
    <module_system type="module">
      <init_path lang="sh">/home/software/spack-0.10.1/opt/spack/linux-centos7-x86_64/gcc-4.8.5/lmod-7.4.9-ic63herzfgw5u3na5mdtvp3nwxy6oj2z/lmod/lmod/init/sh;export MODULEPATH=$MODULEPATH:/software/centos7/spack-latest/share/spack/lmod/linux-centos7-x86_64/Core</init_path>
      <init_path lang="csh">/home/software/spack-0.10.1/opt/spack/linux-centos7-x86_64/gcc-4.8.5/lmod-7.4.9-ic63herzfgw5u3na5mdtvp3nwxy6oj2z/lmod/lmod/init/csh;setenv MODULEPATH $MODULEPATH\:/software/centos7/spack-latest/share/spack/lmod/linux-centos7-x86_64/Core</init_path>
      <init_path lang="python">/home/software/spack-0.10.1/opt/spack/linux-centos7-x86_64/gcc-4.8.5/lmod-7.4.9-ic63herzfgw5u3na5mdtvp3nwxy6oj2z/lmod/lmod/init/env_modules_python.py</init_path>
      <cmd_path lang="python">export MODULEPATH=$MODULEPATH:/software/centos7/spack-latest/share/spack/lmod/linux-centos7-x86_64/Core;/home/software/spack-0.10.1/opt/spack/linux-centos7-x86_64/gcc-4.8.5/lmod-7.4.9-ic63herzfgw5u3na5mdtvp3nwxy6oj2z/lmod/lmod/libexec/lmod python</cmd_path>
      <cmd_path lang="sh">module</cmd_path>
      <cmd_path lang="csh">module</cmd_path>
      <modules>
        <command name="purge"/>
        <command name="load">cmake/3.14.2-gvwazz3</command>
      </modules>
      <modules compiler="intel">
        <command name="load">intel/17.0.0-pwabdn2</command>
        <command name="load">intel-mkl/2017.1.132-6qy7y5f</command>
        <command name="load">netcdf/4.4.1-tckdgwl</command>
        <command name="load">netcdf-cxx/4.2-3qkutvv</command>
        <command name="load">netcdf-fortran/4.4.4-urmb6ss</command>
      </modules>
      <modules compiler="intel" mpilib="mvapich">
        <command name="load">mvapich2/2.2-verbs-qwuab3b</command>
        <command name="load">parallel-netcdf/1.7.0-lbykqph</command>
      </modules>
      <modules compiler="gnu">
        <command name="load">gcc/8.2.0-xhxgy33</command>
        <command name="load">intel-mkl/2018.4.274-2amycpi</command>
        <command name="load">netcdf/4.4.1-ve2zfkw</command>
        <command name="load">netcdf-cxx/4.2-2rkopdl</command>
        <command name="load">netcdf-fortran/4.4.4-thtylny</command>
      </modules>
      <modules compiler="gnu" mpilib="mvapich">
        <command name="load">mvapich2/2.2-verbs-ppznoge</command>
        <command name="load">parallel-netcdf/1.11.0-c22b2bn</command>
      </modules>
    </module_system>
    <environment_variables>
      <env name="NETCDF_C_PATH">$SHELL{dirname $(dirname $(which nc-config))}</env>
      <env name="NETCDF_FORTRAN_PATH">$SHELL{dirname $(dirname $(which nf-config))}</env>
      <env name="PATH">/lcrc/group/acme/soft/perl/5.26.0/bin:$ENV{PATH}</env>
    </environment_variables>
    <environment_variables mpilib="!mpi-serial">
      <env name="PNETCDF_PATH">$SHELL{dirname $(dirname $(which pnetcdf_version))}</env>
    </environment_variables>
    <environment_variables mpilib="mvapich">
      <env name="MV2_ENABLE_AFFINITY">0</env>
      <env name="MV2_SHOW_CPU_BINDING">1</env>
    </environment_variables>
    <environment_variables mpilib="mvapich" DEBUG="TRUE">
      <env name="MV2_DEBUG_SHOW_BACKTRACE">1</env>
      <env name="MV2_SHOW_ENV_INFO">2</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE">
      <env name="OMP_STACKSIZE">64M</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE" compiler="intel">
      <env name="KMP_AFFINITY">granularity=core,scatter</env>
      <env name="KMP_HOT_TEAMS_MODE">1</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE" compiler="gnu">
      <env name="OMP_PLACES">cores</env>
    </environment_variables>
</machine>

<machine MACH="chrysalis">
    <DESC>ANL LCRC cluster 512-node AMD Epyc 7532 2-sockets 64-cores per node</DESC>
    <NODENAME_REGEX>chr.*</NODENAME_REGEX>
    <OS>LINUX</OS>
    <COMPILERS>intel,gnu</COMPILERS>
    <MPILIBS>openmpi,impi</MPILIBS>
    <PROJECT>e3sm</PROJECT>
    <SAVE_TIMING_DIR>/lcrc/group/e3sm/PERF_Chrysalis</SAVE_TIMING_DIR>
    <SAVE_TIMING_DIR_PROJECTS>.*</SAVE_TIMING_DIR_PROJECTS>
    <CIME_OUTPUT_ROOT>/lcrc/group/e3sm/$USER/scratch/chrys</CIME_OUTPUT_ROOT>
    <DIN_LOC_ROOT>/lcrc/group/e3sm/data/inputdata</DIN_LOC_ROOT>
    <DIN_LOC_ROOT_CLMFORC>/lcrc/group/e3sm/data/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
    <DOUT_S_ROOT>/lcrc/group/e3sm/$USER/scratch/chrys/archive/$CASE</DOUT_S_ROOT>
    <BASELINE_ROOT>/lcrc/group/e3sm/baselines/chrys/$COMPILER</BASELINE_ROOT>
    <CCSM_CPRNC>/lcrc/group/e3sm/tools/cprnc/cprnc</CCSM_CPRNC>
    <GMAKE_J>8</GMAKE_J>
    <TESTS>e3sm_integration</TESTS>
    <BATCH_SYSTEM>slurm</BATCH_SYSTEM>
    <SUPPORTED_BY>E3SM</SUPPORTED_BY>
    <MAX_TASKS_PER_NODE>128</MAX_TASKS_PER_NODE>
    <MAX_MPITASKS_PER_NODE>64</MAX_MPITASKS_PER_NODE>
    <PROJECT_REQUIRED>FALSE</PROJECT_REQUIRED>
    <mpirun mpilib="default">
      <executable>srun</executable>
      <arguments>
        <arg name="num_tasks">--mpi=pmi2 -l -n {{ total_tasks }} -N {{ num_nodes }} --kill-on-bad-exit </arg>
        <arg name="binding"> $SHELL{if [ 64 -ge `./xmlquery --value MAX_MPITASKS_PER_NODE` ]; then echo "--cpu_bind=cores"; else echo "--cpu_bind=threads";fi;} </arg>
        <arg name="thread_count">-c $SHELL{echo 128/ {{ tasks_per_node }} |bc}</arg>
        <arg name="placement">-m plane=$SHELL{echo "{{ tasks_per_node }}/1"|bc}</arg>
      </arguments>
    </mpirun>
    <module_system type="module">
      <init_path lang="sh">/gpfs/fs1/soft/chrysalis/spack/opt/spack/linux-centos8-x86_64/gcc-9.3.0/lmod-8.3-5be73rg/lmod/lmod/init/sh</init_path>
      <init_path lang="csh">/gpfs/fs1/soft/chrysalis/spack/opt/spack/linux-centos8-x86_64/gcc-9.3.0/lmod-8.3-5be73rg/lmod/lmod/init/csh</init_path>
      <init_path lang="python">/gpfs/fs1/soft/chrysalis/spack/opt/spack/linux-centos8-x86_64/gcc-9.3.0/lmod-8.3-5be73rg/lmod/lmod/init/env_modules_python.py</init_path>
      <cmd_path lang="python">/gpfs/fs1/soft/chrysalis/spack/opt/spack/linux-centos8-x86_64/gcc-9.3.0/lmod-8.3-5be73rg/lmod/lmod/libexec/lmod python</cmd_path>
      <cmd_path lang="sh">module</cmd_path>
      <cmd_path lang="csh">module</cmd_path>
      <modules>
        <command name="purge"/>
        <command name="load">subversion/1.14.0-e4smcy3</command>
        <command name="load">perl/5.32.0-bsnc6lt</command>
      </modules>
      <modules compiler="intel">
        <command name="load">intel/20.0.4-kodw73g</command>
        <command name="load">intel-mkl/2020.4.304-g2qaxzf</command>
      </modules>
      <modules compiler="intel" mpilib="openmpi">
        <command name="load">openmpi/4.1.1-qiqkjbu</command>
        <command name="load">hdf5/1.8.16-35xugty</command>
        <command name="load">netcdf-c/4.4.1-2vngykq</command>
        <command name="load">netcdf-cxx/4.2-gzago6i</command>
        <command name="load">netcdf-fortran/4.4.4-2kddbib</command>
        <command name="load">parallel-netcdf/1.11.0-go65een</command>
      </modules>
      <modules compiler="intel" mpilib="impi">
        <command name="load">intel-mpi/2019.9.304-tkzvizk</command>
        <command name="load">hdf5/1.8.16-se4xyo7</command>
        <command name="load">netcdf-c/4.4.1-qvxyzq2</command>
        <command name="load">netcdf-cxx/4.2-binixgj</command>
        <command name="load">netcdf-fortran/4.4.4-rdxohvp</command>
        <command name="load">parallel-netcdf/1.11.0-b74wv4m</command>
      </modules>
      <modules compiler="gnu">
        <command name="load">gcc/9.2.0-ugetvbp</command>
        <command name="load">intel-mkl/2020.4.304-n3b5fye</command>
      </modules>
      <modules compiler="gnu" mpilib="openmpi">
        <command name="load">openmpi/4.1.1-73gbwq4</command>
        <command name="load">hdf5/1.8.16-dqjdy2d</command>
        <command name="load">netcdf-c/4.4.1-y6dun2a</command>
        <command name="load">netcdf-cxx/4.2-vwlvgn6</command>
        <command name="load">netcdf-fortran/4.4.4-4lnfxki</command>
        <command name="load">parallel-netcdf/1.11.0-3x2favk</command>
      </modules>
      <modules compiler="gnu" mpilib="impi">
        <command name="load">intel-mpi/2019.9.304-jdih7h5</command>
        <command name="load">hdf5/1.8.16-dtbpce3</command>
        <command name="load">netcdf-c/4.4.1-zcoa44z</command>
        <command name="load">netcdf-cxx/4.2-ayxg4c7</command>
        <command name="load">netcdf-fortran/4.4.4-2lfr2lr</command>
        <command name="load">parallel-netcdf/1.11.0-ifdodru</command>
      </modules>
    </module_system>
    <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
    <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
    <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>
    <MAX_GB_OLD_TEST_DATA>1000</MAX_GB_OLD_TEST_DATA>
    <environment_variables>
      <env name="PERL5LIB">/lcrc/group/e3sm/soft/perl/chrys/lib/perl5</env>
      <env name="NETCDF_C_PATH">$SHELL{dirname $(dirname $(which nc-config))}</env>
      <env name="NETCDF_FORTRAN_PATH">$SHELL{dirname $(dirname $(which nf-config))}</env>
      <env name="PNETCDF_PATH">$SHELL{dirname $(dirname $(which pnetcdf_version))}</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE">
      <env name="OMP_STACKSIZE">128M</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE" compiler="intel" MAX_TASKS_PER_NODE="!128">
      <env name="KMP_AFFINITY">granularity=core,balanced</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE" compiler="intel" MAX_TASKS_PER_NODE="128">
      <env name="KMP_AFFINITY">granularity=thread,balanced</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE" compiler="gnu">
      <env name="OMP_PLACES">cores</env>
    </environment_variables>
</machine>

<machine MACH="bebop">
    <DESC>ANL/LCRC Cluster, Cray CS400, 352-nodes Xeon Phi 7230 KNLs 64C/1.3GHz + 672-nodes Xeon E5-2695v4 Broadwells 36C/2.10GHz, Intel Omni-Path network, SLURM batch system, Lmod module environment.</DESC>
    <NODENAME_REGEX>beboplogin.*</NODENAME_REGEX>
    <TESTS>e3sm_integration</TESTS>
    <COMPILERS>intel,gnu</COMPILERS>
    <MPILIBS>impi,mpich,mvapich,openmpi</MPILIBS>
    <CIME_OUTPUT_ROOT>/lcrc/group/acme/$USER/acme_scratch/bebop</CIME_OUTPUT_ROOT>
    <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
    <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
    <DIN_LOC_ROOT>/home/ccsm-data/inputdata</DIN_LOC_ROOT>
    <DIN_LOC_ROOT_CLMFORC>/home/ccsm-data/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
    <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/archive/$CASE</DOUT_S_ROOT>
    <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
    <BASELINE_ROOT>/lcrc/group/acme/acme_baselines/bebop/$COMPILER</BASELINE_ROOT>
    <CCSM_CPRNC>/lcrc/group/acme/tools/cprnc/cprnc</CCSM_CPRNC>
    <OS>LINUX</OS>
    <BATCH_SYSTEM>slurm</BATCH_SYSTEM>
    <SUPPORTED_BY>E3SM</SUPPORTED_BY>
    <GMAKE_J>8</GMAKE_J>
    <MAX_TASKS_PER_NODE>36</MAX_TASKS_PER_NODE>
    <MAX_MPITASKS_PER_NODE>36</MAX_MPITASKS_PER_NODE>
    <PROJECT>acme</PROJECT>
    <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
    <PIO_CONFIG_OPTS> -D PIO_BUILD_TIMING:BOOL=ON </PIO_CONFIG_OPTS>
    <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>
    <mpirun mpilib="default">
      <executable>mpirun</executable>
      <arguments>
        <arg name="num_tasks" > -n $TOTALPES</arg>
      </arguments>
    </mpirun>
    <mpirun mpilib="mpi-serial">
      <executable></executable>
    </mpirun>
    <module_system type="module">
      <init_path lang="sh">/home/software/spack-0.10.1/opt/spack/linux-centos7-x86_64/gcc-4.8.5/lmod-7.4.9-ic63herzfgw5u3na5mdtvp3nwxy6oj2z/lmod/lmod/init/sh</init_path>
      <init_path lang="csh">/home/software/spack-0.10.1/opt/spack/linux-centos7-x86_64/gcc-4.8.5/lmod-7.4.9-ic63herzfgw5u3na5mdtvp3nwxy6oj2z/lmod/lmod/init/csh</init_path>
      <init_path lang="perl">/home/software/spack-0.10.1/opt/spack/linux-centos7-x86_64/gcc-4.8.5/lmod-7.4.9-ic63herzfgw5u3na5mdtvp3nwxy6oj2z/lmod/lmod/init/perl</init_path>
      <init_path lang="python">/home/software/spack-0.10.1/opt/spack/linux-centos7-x86_64/gcc-4.8.5/lmod-7.4.9-ic63herzfgw5u3na5mdtvp3nwxy6oj2z/lmod/lmod/init/env_modules_python.py</init_path>
      <cmd_path lang="perl">/home/software/spack-0.10.1/opt/spack/linux-centos7-x86_64/gcc-4.8.5/lmod-7.4.9-ic63herzfgw5u3na5mdtvp3nwxy6oj2z/lmod/lmod/libexec/lmod perl</cmd_path>
      <cmd_path lang="python">/home/software/spack-0.10.1/opt/spack/linux-centos7-x86_64/gcc-4.8.5/lmod-7.4.9-ic63herzfgw5u3na5mdtvp3nwxy6oj2z/lmod/lmod/libexec/lmod python</cmd_path>
      <cmd_path lang="sh">module</cmd_path>
      <cmd_path lang="csh">module</cmd_path>
      <modules>
        <command name="purge"></command>
      </modules>
      <modules compiler="intel">
        <command name="load">intel/17.0.4-74uvhji</command>
        <command name="load">intel-mkl/2017.3.196-jyjmyut</command>
      </modules>
      <modules compiler="gnu">
        <command name="load">gcc/7.1.0-4bgguyp</command>
      </modules>
      <modules mpilib="impi">
        <command name="load">intel-mpi/2017.3-dfphq6k</command>
      </modules>
      <modules>
        <command name="load">cmake</command>
	<command name="load">netcdf/4.4.1.1-prsuusl</command>
        <command name="load">netcdf-fortran/4.4.4-ojwazvy</command>
      </modules>
      <modules mpilib="!mpi-serial">
        <command name="load">parallel-netcdf/1.6.1</command>
      </modules>
    </module_system>
    <environment_variables>
      <env name="NETCDF_C_PATH">$SHELL{which nc-config | xargs dirname | xargs dirname}</env>
      <env name="NETCDF_FORTRAN_PATH">$SHELL{which nf-config | xargs dirname | xargs dirname}</env>
      <env name="PATH">/lcrc/group/acme/soft/perl/5.26.0/bin:$ENV{PATH}</env>
    </environment_variables>
    <environment_variables  mpilib="!mpi-serial">
      <env name="PNETCDF_PATH">$SHELL{which pnetcdf_version | xargs dirname | xargs dirname}</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE">
      <env name="OMP_STACKSIZE">128M</env>
      <env name="OMP_PROC_BIND">spread</env>
      <env name="OMP_PLACES">threads</env>
    </environment_variables>
    <environment_variables mpilib="impi">
      <env name="I_MPI_FABRICS">shm:tmi</env>
    </environment_variables>
</machine>

<machine MACH="cetus">
         <DESC>ANL IBM BG/Q, os is BGQ, 16 cores/node, batch system is cobalt</DESC>
         <NODENAME_REGEX>cetus</NODENAME_REGEX>
         <TESTS>e3sm_developer</TESTS>
         <COMPILERS>ibm</COMPILERS>
         <MPILIBS>ibm</MPILIBS>
         <CIME_OUTPUT_ROOT>/projects/$PROJECT/$USER</CIME_OUTPUT_ROOT>
         <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
         <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
         <DIN_LOC_ROOT>/projects/ccsm/inputdata</DIN_LOC_ROOT>
         <DIN_LOC_ROOT_CLMFORC>/projects/ccsm/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
         <DOUT_S_ROOT>/projects/$PROJECT/$USER/archive/$CASE</DOUT_S_ROOT>
         <DOUT_L_MSROOT>/home/$USER/csm/$CASE/</DOUT_L_MSROOT>
         <BASELINE_ROOT>/projects/ccsm/ccsm_baselines//$COMPILER</BASELINE_ROOT>
         <CCSM_CPRNC>/projects/ccsm/tools/cprnc/cprnc</CCSM_CPRNC>
         <OS>BGQ</OS>
         <BATCH_SYSTEM>cobalt</BATCH_SYSTEM>
         <SUPPORTED_BY>   jayesh -at- mcs.anl.gov</SUPPORTED_BY>
         <GMAKE_J>8</GMAKE_J>
         <MAX_MPITASKS_PER_NODE>4</MAX_MPITASKS_PER_NODE>
         <MAX_TASKS_PER_NODE>64</MAX_TASKS_PER_NODE>
         <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
         <PROJECT>ClimateEnergy_2</PROJECT>
	 <CHARGE_ACCOUNT>ClimateEnergy</CHARGE_ACCOUNT>
         <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>
         <PIO_CONFIG_OPTS> -D PIO_BUILD_TIMING:BOOL=ON </PIO_CONFIG_OPTS>
         <mpirun mpilib="default">
           <executable>/usr/bin/runjob</executable>
             <arguments>
               <arg name="label">--label short</arg>
               <arg name="tasks_per_node">--ranks-per-node $MAX_MPITASKS_PER_NODE</arg>
               <arg name="num_tasks">--np $TOTALPES</arg>
               <arg name="locargs">--block $COBALT_PARTNAME $LOCARGS</arg>
               <arg name="bgq_smp_vars">$ENV{BGQ_SMP_VARS}</arg>
               <arg name="stacksize">$ENV{BGQ_STACKSIZE}</arg>
             </arguments>
         </mpirun>
    <module_system type="soft">
      <init_path lang="csh">/etc/profile.d/00softenv.csh</init_path>
      <init_path lang="sh">/etc/profile.d/00softenv.sh</init_path>
      <cmd_path lang="csh">soft</cmd_path>
      <cmd_path lang="sh">soft</cmd_path>
      <modules>
        <command name="add">+mpiwrapper-xl</command>
        <command name="add">@ibm-compilers-2016-05</command>
        <command name="add">+cmake</command>
        <command name="add">+python</command>
      </modules>
    </module_system>
    <environment_variables>
      <env name="MPI_TYPE_MAX">10000</env>
      <env name="BGQ_SMP_VARS"> </env>
      <env name="BGQ_STACKSIZE"> </env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE">
      <env name="BGQ_SMP_VARS">--envs BG_THREADLAYOUT=1 XL_BG_SPREADLAYOUT=YES OMP_DYNAMIC=FALSE OMP_NUM_THREADS=$ENV{OMP_NUM_THREADS}</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE" MAX_MPITASKS_PER_NODE="!16">
      <env name="BGQ_STACKSIZE">--envs OMP_STACKSIZE=64M</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE" MAX_MPITASKS_PER_NODE="16">
      <env name="BGQ_STACKSIZE">--envs OMP_STACKSIZE=16M</env>
    </environment_variables>
</machine>

<machine MACH="quartz">
         <DESC>LLNL Linux Cluster, Linux (pgi), 36 pes/node, batch system is Slurm</DESC>
         <COMPILERS>intel</COMPILERS>
         <MPILIBS>mpich</MPILIBS>
         <PROJECT>cbronze</PROJECT>
         <SAVE_TIMING_DIR>/usr/gdata/e3sm</SAVE_TIMING_DIR>
         <SAVE_TIMING_DIR_PROJECTS>.*</SAVE_TIMING_DIR_PROJECTS>
         <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
         <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
         <CIME_OUTPUT_ROOT>/p/lustre2/$USER/e3sm_scratch/quartz</CIME_OUTPUT_ROOT>
         <DIN_LOC_ROOT>/usr/gdata/e3sm/ccsm3data/inputdata</DIN_LOC_ROOT>
         <DIN_LOC_ROOT_CLMFORC>/usr/gdata/e3sm/ccsm3data/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
         <DOUT_S_ROOT>/p/lustre2/$USER/archive/$CASE</DOUT_S_ROOT>
         <DOUT_L_HTAR>FALSE</DOUT_L_HTAR>
         <DOUT_L_MSROOT>UNSET</DOUT_L_MSROOT>
         <BASELINE_ROOT>/p/lustre2/$USER/ccsm_baselines/$COMPILER</BASELINE_ROOT>
         <CCSM_CPRNC>/usr/gdata/e3sm/tools/cprnc</CCSM_CPRNC>
         <OS>LINUX</OS>
         <SUPPORTED_BY>donahue5 -at- llnl.gov</SUPPORTED_BY>
         <GMAKE_J>8</GMAKE_J>
         <MAX_TASKS_PER_NODE>36</MAX_TASKS_PER_NODE>
	 <MAX_MPITASKS_PER_NODE>36</MAX_MPITASKS_PER_NODE>
	 <BATCH_SYSTEM>lc_slurm</BATCH_SYSTEM>
	 <mpirun mpilib="mpi-serial">
	   <executable></executable>
	 </mpirun>
         <mpirun mpilib="default">
           <executable>srun</executable>
         </mpirun>
         <module_system type="module">
           <init_path lang="python">/usr/share/lmod/lmod/init/env_modules_python.py</init_path>
           <init_path lang="perl">/usr/share/lmod/lmod/init/perl</init_path>
           <init_path lang="sh">/usr/share/lmod/lmod/init/sh</init_path>
           <init_path lang="csh">/usr/share/lmod/lmod/init/csh</init_path>
           <cmd_path lang="csh">module</cmd_path>
           <cmd_path lang="sh">module</cmd_path>
           <cmd_path lang="python">/usr/share/lmod/lmod/libexec/lmod python</cmd_path>
           <cmd_path lang="perl">/usr/share/lmod/lmod/libexec/lmod perl</cmd_path>
           <modules compiler="intel">
             <command name="load">python/3.9.12</command>
             <command name="load">git</command>
             <command name="load">mkl/2022.1.0</command>
             <command name="load">intel-classic/2021.6.0-magic</command>
             <command name="load">mvapich2/2.3.7</command>
             <command name="load">cmake/3.19.2</command>
             <command name="use --append">/usr/gdata/e3sm/install/quartz/modulefiles</command>
             <command name="load">hdf5/1.12.2</command>
             <command name="load">netcdf-c/4.9.0</command>
             <command name="load">netcdf-fortran/4.6.0</command>
             <command name="load">parallel-netcdf/1.12.3</command>
             <command name="load">screamML-venv/0.0.1</command>
             <command name="load">subversion</command>
           </modules>
         </module_system>
         <environment_variables compiler="intel">
           <env name="NETCDF_PATH">/usr/gdata/e3sm/install/quartz/netcdf-fortran/</env>
           <env name="PNETCDF_PATH">/usr/tce/packages/parallel-netcdf/parallel-netcdf-1.12.3-mvapich2-2.3.7-intel-classic-2021.6.0</env>
         </environment_variables>
</machine>

<machine MACH="ruby">
         <DESC>LLNL Linux Cluster, Linux (pgi), 56 pes/node, batch system is Slurm</DESC>
         <COMPILERS>intel</COMPILERS>
         <MPILIBS>mpich</MPILIBS>
         <PROJECT>cbronze</PROJECT>
         <SAVE_TIMING_DIR>/usr/gdata/e3sm</SAVE_TIMING_DIR>
         <SAVE_TIMING_DIR_PROJECTS>.*</SAVE_TIMING_DIR_PROJECTS>
         <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
         <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
         <CIME_OUTPUT_ROOT>/p/lustre2/$USER/e3sm_scratch/ruby</CIME_OUTPUT_ROOT>
         <DIN_LOC_ROOT>/usr/gdata/e3sm/ccsm3data/inputdata</DIN_LOC_ROOT>
         <DIN_LOC_ROOT_CLMFORC>/usr/gdata/e3sm/ccsm3data/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
         <DOUT_S_ROOT>/p/lustre2/$USER/archive/$CASE</DOUT_S_ROOT>
         <DOUT_L_HTAR>FALSE</DOUT_L_HTAR>
         <DOUT_L_MSROOT>UNSET</DOUT_L_MSROOT>
         <BASELINE_ROOT>/p/lustre2/$USER/ccsm_baselines/$COMPILER</BASELINE_ROOT>
         <CCSM_CPRNC>/usr/gdata/e3sm/tools/cprnc</CCSM_CPRNC>
         <OS>LINUX</OS>
         <SUPPORTED_BY>donahue5 -at- llnl.gov</SUPPORTED_BY>
         <GMAKE_J>8</GMAKE_J>
         <MAX_TASKS_PER_NODE>56</MAX_TASKS_PER_NODE>
	 <MAX_MPITASKS_PER_NODE>56</MAX_MPITASKS_PER_NODE>
	 <BATCH_SYSTEM>lc_slurm</BATCH_SYSTEM>
	 <mpirun mpilib="mpi-serial">
	   <executable></executable>
	 </mpirun>
         <mpirun mpilib="default">
           <executable>srun</executable>
         </mpirun>
         <module_system type="module">
           <init_path lang="python">/usr/share/lmod/lmod/init/env_modules_python.py</init_path>
           <init_path lang="perl">/usr/share/lmod/lmod/init/perl</init_path>
           <init_path lang="sh">/usr/share/lmod/lmod/init/sh</init_path>
           <init_path lang="csh">/usr/share/lmod/lmod/init/csh</init_path>
           <cmd_path lang="csh">module</cmd_path>
           <cmd_path lang="sh">module</cmd_path>
           <cmd_path lang="python">/usr/share/lmod/lmod/libexec/lmod python</cmd_path>
           <cmd_path lang="perl">/usr/share/lmod/lmod/libexec/lmod perl</cmd_path>
           <modules compiler="intel">
             <command name="load">python/3.9.12</command>
             <command name="load">git</command>
             <command name="load">mkl/2022.1.0</command>
             <command name="load">intel-classic/2021.6.0-magic</command>
             <command name="load">mvapich2/2.3.7</command>
             <command name="load">cmake/3.19.2</command>
             <command name="use --append">/usr/gdata/e3sm/install/quartz/modulefiles</command>
             <command name="load">hdf5/1.12.2</command>
             <command name="load">netcdf-c/4.9.0</command>
             <command name="load">netcdf-fortran/4.6.0</command>
             <command name="load">parallel-netcdf/1.12.3</command>
             <command name="load">screamML-venv/0.0.1</command>
             <command name="load">subversion</command>
           </modules>
         </module_system>
         <environment_variables compiler="intel">
           <env name="NETCDF_PATH">/usr/gdata/e3sm/install/quartz/netcdf-fortran/</env>
           <env name="PNETCDF_PATH">/usr/tce/packages/parallel-netcdf/parallel-netcdf-1.12.3-mvapich2-2.3.7-intel-classic-2021.6.0</env>
         </environment_variables>
</machine>

<machine MACH="mira">
         <DESC>ANL IBM BG/Q, os is BGQ, 16 cores/node, batch system is cobalt</DESC>
	 <NODENAME_REGEX>mira.*</NODENAME_REGEX>
         <TESTS>e3sm_developer</TESTS>
         <COMPILERS>ibm</COMPILERS>
         <MPILIBS>ibm</MPILIBS>
         <CIME_OUTPUT_ROOT>/projects/$PROJECT/$USER</CIME_OUTPUT_ROOT>
         <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
         <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
         <DIN_LOC_ROOT>/projects/ccsm/inputdata</DIN_LOC_ROOT>
         <DIN_LOC_ROOT_CLMFORC>/projects/ccsm/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
         <DOUT_S_ROOT>/projects/$PROJECT/$USER/archive/$CASE</DOUT_S_ROOT>
         <DOUT_L_MSROOT>/home/$USER/csm/$CASE/</DOUT_L_MSROOT>
         <BASELINE_ROOT>/projects/ccsm/ccsm_baselines//$COMPILER</BASELINE_ROOT>
         <CCSM_CPRNC>/projects/ccsm/tools/cprnc/cprnc</CCSM_CPRNC>
         <SAVE_TIMING_DIR>/projects/$PROJECT</SAVE_TIMING_DIR>
         <SAVE_TIMING_DIR_PROJECTS>ClimateEnergy_2</SAVE_TIMING_DIR_PROJECTS>
         <OS>BGQ</OS>
	 <BATCH_SYSTEM>cobalt</BATCH_SYSTEM>
         <SUPPORTED_BY>   mickelso -at- mcs.anl.gov</SUPPORTED_BY>
         <GMAKE_J>8</GMAKE_J>
         <MAX_MPITASKS_PER_NODE>4</MAX_MPITASKS_PER_NODE>
         <MAX_TASKS_PER_NODE>64</MAX_TASKS_PER_NODE>
         <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
         <PROJECT>ClimateEnergy_2</PROJECT>
         <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>
         <PIO_CONFIG_OPTS> -D PIO_BUILD_TIMING:BOOL=ON </PIO_CONFIG_OPTS>
         <mpirun mpilib="default">
           <executable>/usr/bin/runjob</executable>
             <arguments>
               <arg name="label">--label short</arg>
               <arg name="tasks_per_node">--ranks-per-node $MAX_MPITASKS_PER_NODE</arg>
               <arg name="num_tasks">--np $TOTALPES</arg>
               <arg name="locargs">--block $COBALT_PARTNAME $LOCARGS</arg>
               <arg name="bgq_smp_vars">$ENV{BGQ_SMP_VARS}</arg>
               <arg name="stacksize">$ENV{BGQ_STACKSIZE}</arg>
             </arguments>
         </mpirun>
    <module_system type="soft">
      <init_path lang="csh">/etc/profile.d/00softenv.csh</init_path>
      <init_path lang="sh">/etc/profile.d/00softenv.sh</init_path>
      <cmd_path lang="csh">soft</cmd_path>
      <cmd_path lang="sh">soft</cmd_path>
      <modules>
        <command name="add">+mpiwrapper-xl</command>
        <command name="add">@ibm-compilers-2016-05</command>
        <command name="add">+cmake</command>
        <command name="add">+python</command>
      </modules>
    </module_system>
    <environment_variables>
      <env name="MPI_TYPE_MAX">10000</env>
      <env name="BGQ_SMP_VARS"> </env>
      <env name="BGQ_STACKSIZE"> </env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE">
      <env name="BGQ_SMP_VARS">--envs BG_THREADLAYOUT=1 XL_BG_SPREADLAYOUT=YES OMP_DYNAMIC=FALSE OMP_NUM_THREADS=$ENV{OMP_NUM_THREADS}</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE" MAX_MPITASKS_PER_NODE="!16">
      <env name="BGQ_STACKSIZE">--envs OMP_STACKSIZE=64M</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE" MAX_MPITASKS_PER_NODE="16">
      <env name="BGQ_STACKSIZE">--envs OMP_STACKSIZE=16M</env>
    </environment_variables>
</machine>

<machine MACH="theta">
    <DESC>ALCF Cray XC40 KNL, os is CNL, 64 pes/node, batch system is cobalt</DESC>
    <NODENAME_REGEX>theta.*</NODENAME_REGEX>
    <TESTS>e3sm_developer</TESTS>
    <COMPILERS>intel,gnu,cray</COMPILERS>
    <MPILIBS>mpt</MPILIBS>
    <CIME_OUTPUT_ROOT>/projects/$PROJECT/$USER</CIME_OUTPUT_ROOT>
    <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
    <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
    <DIN_LOC_ROOT>/projects/ccsm/acme/inputdata</DIN_LOC_ROOT>
    <DIN_LOC_ROOT_CLMFORC>/projects/ccsm/acme/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
    <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/archive/$CASE</DOUT_S_ROOT>
    <DOUT_L_MSROOT>$CIME_OUTPUT_ROOT/csm/$CASE</DOUT_L_MSROOT>
    <BASELINE_ROOT>/projects/$PROJECT/acme/baselines/$COMPILER</BASELINE_ROOT>
    <CCSM_CPRNC>/projects/ccsm/acme/tools/cprnc/cprnc</CCSM_CPRNC>
    <SAVE_TIMING_DIR>/projects/$PROJECT</SAVE_TIMING_DIR>
    <SAVE_TIMING_DIR_PROJECTS>ClimateEnergy_4</SAVE_TIMING_DIR_PROJECTS>
    <OS>CNL</OS>
    <BATCH_SYSTEM>cobalt_theta</BATCH_SYSTEM>
    <SUPPORTED_BY>E3SM</SUPPORTED_BY>
    <GMAKE_J>8</GMAKE_J>
    <MAX_TASKS_PER_NODE>128</MAX_TASKS_PER_NODE>
    <MAX_MPITASKS_PER_NODE>64</MAX_MPITASKS_PER_NODE>
    <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
    <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>
    <PIO_CONFIG_OPTS> -D PIO_BUILD_TIMING:BOOL=ON </PIO_CONFIG_OPTS>
    <mpirun mpilib="default">
      <executable>aprun</executable>
      <arguments>
        <arg name="num_tasks" >-n $TOTALPES</arg>
        <arg name="tasks_per_node" >-N $SHELL{if [ `./xmlquery --value MAX_MPITASKS_PER_NODE` -gt `./xmlquery --value TOTALPES` ];then echo `./xmlquery --value TOTALPES`;else echo `./xmlquery --value MAX_MPITASKS_PER_NODE`;fi;}</arg>
        <arg name="hyperthreading" >--cc depth -d $SHELL{echo `./xmlquery --value MAX_TASKS_PER_NODE`/`./xmlquery --value MAX_MPITASKS_PER_NODE`|bc} -j $SHELL{if [ 64 -ge `./xmlquery --value MAX_TASKS_PER_NODE` ];then echo 1;else echo `./xmlquery --value MAX_TASKS_PER_NODE`/64|bc;fi;}</arg>
        <arg name="env_vars">$ENV{SMP_VARS} $ENV{labeling}</arg>
      </arguments>
    </mpirun>
    <environment_variables>
      <env name="PERL5LIB">/projects/ccsm/acme/libs/perl5</env>
      <env name="MPICH_ENV_DISPLAY">1</env>
      <env name="MPICH_VERSION_DISPLAY">1</env>
      <!--env name="MPICH_CPUMASK_DISPLAY">1</env-->
      <env name="MPAS_TOOL_DIR">/projects/ccsm/acme/tools/mpas</env>
      <env name="labeling">-e PMI_LABEL_ERROUT=1</env>
      <env name="SMP_VARS"> </env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE" compiler="intel">
      <env name="SMP_VARS">-e OMP_NUM_THREADS=$ENV{OMP_NUM_THREADS} -e OMP_STACKSIZE=128M -e KMP_AFFINITY=granularity=thread,scatter</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE" compiler="!intel">
      <env name="SMP_VARS">-e OMP_NUM_THREADS=$ENV{OMP_NUM_THREADS} -e OMP_STACKSIZE=128M -e OMP_PROC_BIND=spread -e OMP_PLACES=threads</env>
    </environment_variables>
    <module_system type="module">
      <init_path lang="perl">/opt/modules/default/init/perl.pm</init_path>
      <init_path lang="python">/opt/modules/default/init/python.py</init_path>
      <init_path lang="sh">/opt/modules/default/init/sh</init_path>
      <init_path lang="csh">/opt/modules/default/init/csh</init_path>
      <cmd_path lang="perl">/opt/modules/default/bin/modulecmd perl</cmd_path>
      <cmd_path lang="python">/opt/modules/default/bin/modulecmd python</cmd_path>
      <cmd_path lang="sh">module</cmd_path>
      <cmd_path lang="csh">module</cmd_path>
      <modules>
        <command name="rm">craype-mic-knl</command>
        <command name="rm">PrgEnv-cray</command>
        <command name="rm">cce</command>
        <command name="rm">cray-mpich</command>
        <command name="rm">cray-parallel-netcdf</command>
        <command name="rm">cray-hdf5-parallel</command>
        <command name="rm">cray-hdf5</command>
        <command name="rm">cray-netcdf</command>
        <command name="rm">cray-netcdf-hdf5parallel</command>
        <command name="rm">cray-libsci</command>
        <command name="rm">craype</command>
        <command name="rm">perftools-base</command>
        <command name="rm">darshan</command>
        <command name="load">craype/2.6.5</command>
        <command name="load">cmake/3.14.5</command>
      </modules>
      <modules compiler="intel">
        <command name="rm">PrgEnv-gnu</command>
        <command name="load">PrgEnv-intel/6.0.7</command>
        <command name="swap">intel/19.1.0.166</command>
      </modules>
      <modules compiler="gnu">
        <command name="load">gcc/9.3.0</command>
        <command name="load">PrgEnv-gnu/6.0.7</command>
      </modules>
      <modules compiler="!intel">
        <command name="rm">cray-libsci</command>
        <command name="load">cray-libsci/20.06.1</command>
      </modules>
      <modules>
        <command name="load">darshan</command>
        <command name="load">craype-mic-knl</command>
        <command name="load">cray-mpich/7.7.14</command>
        <command name="load">cray-hdf5-parallel/1.10.6.1</command>
        <command name="load">cray-netcdf-hdf5parallel/4.7.3.3</command>
        <command name="load">cray-parallel-netcdf/1.12.0.1</command>
      </modules>
    </module_system>
</machine>

<machine MACH="sooty">
    <DESC>PNL cluster, OS is Linux, batch system is SLURM</DESC>
    <NODENAME_REGEX>sooty</NODENAME_REGEX>
    <RUNDIR>/lustre/$USER/csmruns/$CASE/run</RUNDIR>
    <EXEROOT>/lustre/$USER/csmruns/$CASE/bld</EXEROOT>
    <CESMSCRATCHROOT>/lustre/$USER/</CESMSCRATCHROOT>
    <OS>LINUX</OS>
    <COMPILERS>intel,pgi</COMPILERS>
    <MPILIBS>mvapich2</MPILIBS>
    <CIME_OUTPUT_ROOT>/lustre/$USER/cime_output_root</CIME_OUTPUT_ROOT>
    <DIN_LOC_ROOT>/lustre/climate/csmdata/</DIN_LOC_ROOT>
    <DIN_LOC_ROOT_CLMFORC>/lustre/climate/csmdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
    <DOUT_S_ROOT>/lustre/$USER/archive/$CASE</DOUT_S_ROOT>
    <DOUT_L_MSROOT>UNSET</DOUT_L_MSROOT>
    <BASELINE_ROOT>/lustre/climate/acme_baselines/$COMPILER</BASELINE_ROOT>
    <CCSM_CPRNC>/lustre/climate/acme_baselines/cprnc/cprnc</CCSM_CPRNC>
    <GMAKE_J>8</GMAKE_J>
    <BATCH_SYSTEM>slurm</BATCH_SYSTEM>
    <SUPPORTED_BY>balwinder.singh -at- pnnl.gov</SUPPORTED_BY>
    <MAX_TASKS_PER_NODE>8</MAX_TASKS_PER_NODE>
    <MAX_MPITASKS_PER_NODE>8</MAX_MPITASKS_PER_NODE>
    <PROJECT_REQUIRED>FALSE</PROJECT_REQUIRED>
    <mpirun mpilib="mpi-serial">
      <executable/>
    </mpirun>
    <mpirun mpilib="mvapich2">
      <executable>srun</executable>
      <arguments>
        <arg name="mpi">--mpi=none</arg>
        <arg name="num_tasks">--ntasks=$TOTALPES</arg>
        <arg name="cpu_bind">--cpu_bind=sockets --cpu_bind=verbose</arg>
        <arg name="kill-on-bad-exit">--kill-on-bad-exit</arg>
      </arguments>
    </mpirun>
    <module_system type="module">
      <init_path lang="perl">/share/apps/modules/Modules/3.2.10/init/perl.pm</init_path>
      <init_path lang="python">/share/apps/modules/Modules/3.2.10/init/python.py</init_path>
      <init_path lang="csh">/etc/profile.d/modules.csh</init_path>
      <init_path lang="sh">/etc/profile.d/modules.sh</init_path>
      <cmd_path lang="perl">/share/apps/modules/Modules/3.2.10/bin/modulecmd perl </cmd_path>
      <cmd_path lang="python">/share/apps/modules/Modules/3.2.10/bin/modulecmd python</cmd_path>
      <cmd_path lang="sh">module</cmd_path>
      <cmd_path lang="csh">module</cmd_path>
      <modules>
        <command name="purge"/>
      </modules>
      <modules>
        <command name="load">perl/5.20.0</command>
        <command name="load">cmake/3.3.0</command>
        <command name="load">python/2.7.8</command>
	    <command name="load">svn/1.8.13</command>
      </modules>
      <modules compiler="intel">
        <command name="load">intel/15.0.1</command>
        <command name="load">mkl/15.0.1</command>
      </modules>
      <modules compiler="pgi">
        <command name="load">pgi/14.10</command>
      </modules>
      <modules mpilib="mvapich2">
        <command name="load">mvapich2/2.1</command>
      </modules>
      <modules>
        <command name="load">netcdf/4.3.2</command>
      </modules>
    </module_system>
    <environment_variables>
      <env name="MKLROOT">$ENV{MKLROOT} </env>
      <env name="NETCDF_PATH">$ENV{NETCDF_LIB}/../</env>
      <env name="OMP_STACKSIZE">64M</env>
    </environment_variables>
  </machine>

  <machine MACH="cascade">
    <DESC>PNNL Intel KNC cluster, OS is Linux, batch system is SLURM</DESC>
    <NODENAME_REGEX>glogin</NODENAME_REGEX>
    <OS>LINUX</OS>
    <COMPILERS>intel</COMPILERS>
    <MPILIBS>impi,mvapich2</MPILIBS>
    <CIME_OUTPUT_ROOT>/dtemp/$PROJECT/$USER</CIME_OUTPUT_ROOT>
    <DIN_LOC_ROOT>/dtemp/st49401/sing201/acme/inputdata/</DIN_LOC_ROOT>
    <DIN_LOC_ROOT_CLMFORC>/dtemp/st49401/sing201/acme/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
    <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/archive/$CASE</DOUT_S_ROOT>
    <BASELINE_ROOT>$CIME_OUTPUT_ROOT/acme/acme_baselines</BASELINE_ROOT>
    <CCSM_CPRNC>$CIME_OUTPUT_ROOT/acme/acme_baselines/cprnc/cprnc</CCSM_CPRNC>
    <GMAKE_J>8</GMAKE_J>
    <BATCH_SYSTEM>slurm</BATCH_SYSTEM>
    <SUPPORTED_BY>balwinder.singh -at- pnnl.gov</SUPPORTED_BY>
    <MAX_TASKS_PER_NODE>16</MAX_TASKS_PER_NODE>
    <MAX_MPITASKS_PER_NODE>16</MAX_MPITASKS_PER_NODE>
    <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
    <mpirun mpilib="mpi-serial">
      <executable/>
    </mpirun>
    <mpirun mpilib="impi">
      <executable>mpirun</executable>
      <arguments>
        <arg name="num_tasks"> -np {{ total_tasks }}</arg>
      </arguments>
    </mpirun>
    <mpirun mpilib="mvapich2">
      <executable>srun</executable>
      <arguments>
        <arg name="mpi">--mpi=none</arg>
        <arg name="num_tasks">--ntasks={{ total_tasks }}</arg>
        <arg name="cpu_bind">--cpu_bind=sockets --cpu_bind=verbose</arg>
        <arg name="kill-on-bad-exit">--kill-on-bad-exit</arg>
      </arguments>
    </mpirun>
    <module_system type="module">
      <init_path lang="python">/opt/lmod/7.8.4/init/env_modules_python.py</init_path>
      <init_path lang="csh">/etc/profile.d/modules.csh</init_path>
      <init_path lang="sh">/etc/profile.d/modules.sh</init_path>
      <cmd_path lang="python">/opt/lmod/7.8.4/libexec/lmod python</cmd_path>
      <cmd_path lang="sh">module</cmd_path>
      <cmd_path lang="csh">module</cmd_path>
      <modules>
        <command name="purge"/>
      </modules>
      <modules>
        <command name="load">python/2.7.9</command>
      </modules>
      <modules compiler="intel">
        <command name="load">intel/ips_18</command>
        <command name="load">mkl/14.0</command>
      </modules>
      <modules mpilib="impi">
        <command name="load">impi/4.1.2.040</command>
      </modules>
      <modules mpilib="mvapich2">
        <command name="load">mvapich2/1.9</command>
      </modules>
      <modules>
        <command name="load">netcdf/4.3.0</command>
      </modules>
    </module_system>
    <RUNDIR>$CIME_OUTPUT_ROOT/csmruns/$CASE/run</RUNDIR>
    <EXEROOT>$CIME_OUTPUT_ROOT/csmruns/$CASE/bld</EXEROOT>
    <environment_variables>
      <env name="OMP_STACKSIZE">64M</env>
      <env name="NETCDF_HOME">$ENV{NETCDF_ROOT}</env>
    </environment_variables>
    <environment_variables compiler="intel">
      <env name="MKL_PATH">$ENV{MLIBHOME}</env>
      <env name="COMPILER">intel</env>
    </environment_variables>
  </machine>

<machine MACH="constance">
         <DESC>PNL Haswell cluster, OS is Linux, batch system is SLURM</DESC>
         <OS>LINUX</OS>
         <COMPILERS>intel,pgi,nag</COMPILERS>
         <MPILIBS>mvapich2,openmpi,intelmpi,mvapich</MPILIBS>
	 <NODENAME_REGEX>constance</NODENAME_REGEX>
         <RUNDIR>/pic/scratch/$USER/csmruns/$CASE/run</RUNDIR>
         <EXEROOT>/pic/scratch/$USER/csmruns/$CASE/bld</EXEROOT>
         <CIME_OUTPUT_ROOT>/pic/scratch/$USER</CIME_OUTPUT_ROOT>
         <DIN_LOC_ROOT>/pic/projects/climate/csmdata/</DIN_LOC_ROOT>
         <DIN_LOC_ROOT_CLMFORC>/pic/projects/climate/csmdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
         <DOUT_S_ROOT>/pic/scratch/$USER/archive/$CASE</DOUT_S_ROOT>
         <DOUT_L_MSROOT>UNSET</DOUT_L_MSROOT>
         <BASELINE_ROOT>/pic/projects/climate/acme_baselines/$COMPILER</BASELINE_ROOT>
         <CCSM_CPRNC>/pic/projects/climate/acme_baselines/cprnc/cprnc</CCSM_CPRNC>
	 <BATCH_SYSTEM>slurm</BATCH_SYSTEM>
         <SUPPORTED_BY>balwinder.singh -at- pnnl.gov</SUPPORTED_BY>
         <GMAKE_J>8</GMAKE_J>
	 <MAX_TASKS_PER_NODE>24</MAX_TASKS_PER_NODE>
	 <MAX_MPITASKS_PER_NODE>24</MAX_MPITASKS_PER_NODE>
	 <PROJECT_REQUIRED>FALSE</PROJECT_REQUIRED>
	 <mpirun mpilib="mpi-serial">
	   <executable></executable>
	 </mpirun>
	 <mpirun mpilib="mvapich2">
	   <executable>srun</executable>
	   <arguments>
	     <arg name="mpi">--mpi=none</arg>
	     <arg name="num_tasks">--ntasks=$TOTALPES</arg>
	     <arg name="cpu_bind">--cpu_bind=sockets --cpu_bind=verbose</arg>
	     <arg name="kill-on-bad-exit">--kill-on-bad-exit</arg>
	   </arguments>
	 </mpirun>
	 <mpirun mpilib="mvapich">
	   <executable>srun</executable>
	   <arguments>
	     <arg name="num_tasks">--ntasks=$TOTALPES</arg>
	     <arg name="cpu_bind">--cpu_bind=sockets --cpu_bind=verbose</arg>
	     <arg name="kill-on-bad-exit">--kill-on-bad-exit</arg>
	   </arguments>
	 </mpirun>
	 <mpirun mpilib="intelmpi">
	   <executable>mpirun</executable>
	   <arguments>
	     <arg name="num_tasks">-n $TOTALPES</arg>
	   </arguments>
	 </mpirun>
	 <mpirun mpilib="openmpi">
	   <executable>mpirun</executable>
	   <arguments>
	     <arg name="num_tasks">-n $TOTALPES</arg>
	   </arguments>
	 </mpirun>
	 <module_system type="module">
	   <init_path lang="perl">/share/apps/modules/Modules/3.2.10/init/perl.pm</init_path>
	   <init_path lang="python">/share/apps/modules/Modules/3.2.10/init/python.py</init_path>
	   <init_path lang="csh">/etc/profile.d/modules.csh</init_path>
	   <init_path lang="sh">/etc/profile.d/modules.sh</init_path>
	   <cmd_path lang="perl">/share/apps/modules/Modules/3.2.10/bin/modulecmd perl </cmd_path>
	   <cmd_path lang="python">/share/apps/modules/Modules/3.2.10/bin/modulecmd python</cmd_path>
	   <cmd_path lang="sh">module</cmd_path>
	   <cmd_path lang="csh">module</cmd_path>
	   <modules>
	     <command name="purge"></command>
	   </modules>
	   <modules>
	     <command name="load">perl/5.20.0</command>
	     <command name="load">cmake/3.3.0</command>
	     <command name="load">python/2.7.8</command>
	   </modules>
	   <modules compiler="intel">
	     <command name="load">intel/15.0.1</command>
	     <command name="load">mkl/15.0.1</command>
	   </modules>
	   <modules compiler="pgi">
	     <command name="load">pgi/14.10</command>
	   </modules>
	   <modules compiler="nag">
	     <command name="load">nag/6.0</command>
	     <command name="load">mkl/15.0.1</command>
	   </modules>
	   <modules mpilib="mvapich">
	     <command name="load">mvapich2/2.1</command>
	   </modules>
	   <modules mpilib="mvapich2" compiler= "intel">
	     <command name="load">mvapich2/2.1</command>
	   </modules>
	   <modules mpilib="mvapich2" compiler= "pgi">
	     <command name="load">mvapich2/2.1</command>
	   </modules>
	   <modules mpilib="mvapich2" compiler= "nag">
	     <command name="load">mvapich2/2.3b</command>
	   </modules>
	   <modules mpilib="intelmpi">
	     <command name="load">intelmpi/5.0.1.035</command>
	   </modules>
	   <modules mpilib="openmpi">
	     <command name="load">openmpi/1.8.3</command>
	   </modules>
	   <modules compiler = "intel">
             <command name="load">pnetcdf/1.6.1</command>
	     <command name="load">netcdf/4.3.2</command>
	   </modules>
	   <modules compiler = "pgi">
	     <command name="load">netcdf/4.3.2</command>
	   </modules>
	   <modules compiler = "nag">
	     <command name="load">netcdf/4.4.1.1</command>
	   </modules>
	 </module_system>
	 <environment_variables>
	   <env name="OMP_STACKSIZE">64M</env>
	   <env name="NETCDF_HOME">$ENV{NETCDF_LIB}/../</env>
	 </environment_variables>
	 <environment_variables compiler="intel">
	   <env name="MKL_PATH">$ENV{MLIB_LIB}</env>
	 </environment_variables>
	 <environment_variables compiler="nag">
	   <env name="MKL_PATH">$ENV{MLIB_LIB}</env>
	 </environment_variables>
         <environment_variables mpilib="!mpi-serial">
           <env name="PNETCDF_PATH">$SHELL{dirname $(dirname $(which pnetcdf_version))}</env>
         </environment_variables>
</machine>

  <machine MACH="compy">
    <DESC>PNL E3SM Intel Xeon Gold 6148(Skylake) nodes, OS is Linux, SLURM</DESC>
    <NODENAME_REGEX>compy</NODENAME_REGEX>
    <OS>LINUX</OS>
    <COMPILERS>intel,pgi</COMPILERS>
    <MPILIBS>impi,mvapich2</MPILIBS>
    <SAVE_TIMING_DIR>/compyfs</SAVE_TIMING_DIR>
    <SAVE_TIMING_DIR_PROJECTS>.*</SAVE_TIMING_DIR_PROJECTS>
    <CIME_OUTPUT_ROOT>/compyfs/$USER/e3sm_scratch</CIME_OUTPUT_ROOT>
    <DIN_LOC_ROOT>/compyfs/inputdata</DIN_LOC_ROOT>
    <DIN_LOC_ROOT_CLMFORC>/compyfs/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
    <DOUT_S_ROOT>/compyfs/$USER/e3sm_scratch/archive/$CASE</DOUT_S_ROOT>
    <BASELINE_ROOT>/compyfs/e3sm_baselines/$COMPILER</BASELINE_ROOT>
    <CCSM_CPRNC>/compyfs/e3sm_baselines/cprnc/cprnc</CCSM_CPRNC>
    <GMAKE_J>8</GMAKE_J>
    <BATCH_SYSTEM>slurm</BATCH_SYSTEM>
    <SUPPORTED_BY>bibi.mathew -at- pnnl.gov</SUPPORTED_BY>
    <MAX_TASKS_PER_NODE>40</MAX_TASKS_PER_NODE>
    <MAX_MPITASKS_PER_NODE>40</MAX_MPITASKS_PER_NODE>
    <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
    <mpirun mpilib="mpi-serial">
      <executable> </executable>
    </mpirun>
    <mpirun mpilib="mvapich2">
      <executable>srun</executable>
      <arguments>
        <arg name="mpi">--mpi=none</arg>
        <arg name="num_tasks">--ntasks={{ total_tasks }}</arg>
        <arg name="kill-on-bad-exit">--kill-on-bad-exit</arg>
        <arg name="cpu_bind">-l --cpu_bind=cores -c $ENV{OMP_NUM_THREADS} -m plane=$SHELL{echo 40/$OMP_NUM_THREADS|bc}</arg>
      </arguments>
    </mpirun>
    <mpirun mpilib="impi">
      <executable>srun</executable>
      <arguments>
        <arg name="mpi">--mpi=pmi2</arg>
        <arg name="num_tasks">--ntasks={{ total_tasks }}</arg>
        <arg name="kill-on-bad-exit">--kill-on-bad-exit</arg>
        <arg name="cpu_bind">-l --cpu_bind=cores -c $ENV{OMP_NUM_THREADS} -m plane=$SHELL{echo 40/$OMP_NUM_THREADS|bc}</arg>
      </arguments>
    </mpirun>
    <module_system type="module">
      <init_path lang="perl">/share/apps/modules/init/perl.pm</init_path>
      <init_path lang="python">/share/apps/modules/init/python.py</init_path>
      <init_path lang="csh">/etc/profile.d/modules.csh</init_path>
      <init_path lang="sh">/etc/profile.d/modules.sh</init_path>
      <cmd_path lang="perl"> /share/apps/modules/bin/modulecmd  perl</cmd_path>
      <cmd_path lang="python">/share/apps/modules/bin/modulecmd python</cmd_path>
      <cmd_path lang="sh">module</cmd_path>
      <cmd_path lang="csh">module</cmd_path>
      <modules>
        <command name="purge"/>
      </modules>
      <modules>
        <command name="load">cmake/3.11.4</command>
      </modules>
      <modules compiler="intel">
        <command name="load">intel/19.0.5</command>
      </modules>
      <modules compiler="pgi">
        <command name="load">pgi/18.10</command>
      </modules>
      <modules mpilib="mvapich2">
        <command name="load">mvapich2/2.3.1</command>
      </modules>
      <modules mpilib="impi">
        <command name="load">intelmpi/2019u4</command>
      </modules>
      <modules mpilib="impi" compiler="pgi">
        <command name="load">intelmpi/2019u3</command>
      </modules>
      <modules>
        <command name="load">netcdf/4.6.3</command>
        <command name="load">pnetcdf/1.9.0</command>
        <command name="load">mkl/2019u5</command>
      </modules>
    </module_system>
    <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
    <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
    <TEST_TPUT_TOLERANCE>0.05</TEST_TPUT_TOLERANCE>
    <MAX_GB_OLD_TEST_DATA>1000</MAX_GB_OLD_TEST_DATA>
    <environment_variables>
      <env name="NETCDF_HOME">$ENV{NETCDF_ROOT}/</env>
      <env name="MKL_PATH">$ENV{MKLROOT}</env>
    </environment_variables>
    <environment_variables mpilib="mvapich2">
      <env name="MV2_ENABLE_AFFINITY">0</env>
      <env name="MV2_SHOW_CPU_BINDING">1</env>
    </environment_variables>
    <environment_variables mpilib="impi">
      <env name="I_MPI_ADJUST_ALLREDUCE">1</env>
    </environment_variables>
    <environment_variables mpilib="impi" DEBUG="TRUE">
      <env name="I_MPI_DEBUG">10</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE">
      <env name="OMP_STACKSIZE">64M</env>
      <env name="OMP_PLACES">cores</env>
    </environment_variables>
  </machine>

<machine MACH="oic2">
         <DESC>ORNL XK6, os is Linux, 8 pes/node, batch system is PBS</DESC>
         <NODENAME_REGEX>oic2</NODENAME_REGEX>
         <TESTS>e3sm_developer</TESTS>
         <COMPILERS>gnu</COMPILERS>
         <MPILIBS>mpich,openmpi</MPILIBS>
         <RUNDIR>/home/$USER/models/ACME/run/$CASE/run</RUNDIR>
         <EXEROOT>/home/$USER/models/ACME/run/$CASE/bld</EXEROOT>
         <CIME_OUTPUT_ROOT>/home/$USER/models/ACME</CIME_OUTPUT_ROOT>
         <DIN_LOC_ROOT>/home/zdr/models/ccsm_inputdata</DIN_LOC_ROOT>
         <DIN_LOC_ROOT_CLMFORC>/home/zdr/models/ccsm_inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
         <DOUT_S_ROOT>/home/$USER/models/ACME/run/archive/$CASE</DOUT_S_ROOT>
         <OS>LINUX</OS>
	 <BATCH_SYSTEM>pbs</BATCH_SYSTEM>
         <SUPPORTED_BY>dmricciuto</SUPPORTED_BY>
         <GMAKE_J>8</GMAKE_J>
	 <MAX_MPITASKS_PER_NODE>8</MAX_MPITASKS_PER_NODE>
         <MAX_TASKS_PER_NODE>8</MAX_TASKS_PER_NODE>
         <mpirun mpilib="mpich">
              <executable args="default">/projects/cesm/devtools/mpich-3.0.4-gcc4.8.1/bin/mpirun </executable>
	      <arguments>
			<arg name="num_tasks"> -np $TOTALPES</arg>
			<arg name="machine_file">--hostfile $ENV{PBS_NODEFILE}</arg>
	      </arguments>
         </mpirun>
         <mpirun mpilib = "mpi-serial">
              <executable> </executable>
         </mpirun>
	 <module_system type="module">
	   <init_path lang="sh">/usr/share/Modules/init/sh</init_path>
	   <init_path lang="csh">/usr/share/Modules/init/csh</init_path>
	   <init_path lang="perl">/usr/share/Modules/init/perl.pm</init_path>
	   <init_path lang="python">/usr/share/Modules/init/python.py</init_path>
	   <cmd_path lang="sh">module</cmd_path>
	   <cmd_path lang="csh">module</cmd_path>
	   <cmd_path lang="perl">/usr/bin/modulecmd perl</cmd_path>
	   <cmd_path lang="python">/usr/bin/modulecmd python</cmd_path>

	   <environment_variables>
	     <env name="MPICH_ENV_DISPLAY">1</env>
	     <env name="MPICH_VERSION_DISPLAY">1</env>
	     <!-- This increases the stack size, which is necessary
		  for CICE to run threaded on this machine -->
	     <env name="OMP_STACKSIZE">64M</env>
	   </environment_variables>
	 </module_system>
</machine>

<machine MACH="oic5">
         <DESC>ORNL XK6, os is Linux, 32 pes/node, batch system is PBS</DESC>
         <NODENAME_REGEX>oic5</NODENAME_REGEX>
         <TESTS>e3sm_developer</TESTS>
         <COMPILERS>gnu</COMPILERS>
         <MPILIBS>mpich,openmpi</MPILIBS>
         <RUNDIR>/home/$USER/models/ACME/run/$CASE/run</RUNDIR>
         <EXEROOT>/home/$USER/models/ACME/run/$CASE/bld</EXEROOT>
         <CIME_OUTPUT_ROOT>/home/$USER/models/ACME</CIME_OUTPUT_ROOT>
         <DIN_LOC_ROOT>/home/zdr/models/ccsm_inputdata</DIN_LOC_ROOT>
         <DIN_LOC_ROOT_CLMFORC>/home/zdr/models/ccsm_inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
         <DOUT_S_ROOT>/home/$USER/models/ACME/run/archive/$CASE</DOUT_S_ROOT>
         <OS>LINUX</OS>
	 <BATCH_SYSTEM>pbs</BATCH_SYSTEM>
         <SUPPORTED_BY>dmricciuto</SUPPORTED_BY>
         <GMAKE_J>32</GMAKE_J>
	 <MAX_MPITASKS_PER_NODE>32</MAX_MPITASKS_PER_NODE>
         <MAX_TASKS_PER_NODE>32</MAX_TASKS_PER_NODE>
         <mpirun mpilib="mpich">
              <executable args="default">/projects/cesm/devtools/mpich-3.0.4-gcc4.8.1/bin/mpirun </executable>
	      <arguments>
			<arg name="num_tasks"> -np $TOTALPES</arg>
                        <arg name="machine_file">--hostfile $ENV{PBS_NODEFILE}</arg>
	      </arguments>
         </mpirun>
         <mpirun mpilib = "mpi-serial">
              <executable> </executable>
         </mpirun>
</machine>

<machine MACH="cades">
   <!-- customize these fields as appropriate for your system (max tasks) and
                              desired layout (change '${group}/${USER}' to your
        prefered location). -->
      <DESC> OR-CONDO, CADES-CCSI, os is Linux, 16 pes/nodes, batch system is PBS</DESC>
      <NODENAME_REGEX>or-condo</NODENAME_REGEX>
      <TESTS>e3sm_developer</TESTS>
      <OS>LINUX</OS>
      <COMPILERS>gnu,intel</COMPILERS>
      <MPILIBS>openmpi</MPILIBS>
      <CIME_OUTPUT_ROOT>/lustre/or-hydra/cades-ccsi/scratch/$USER</CIME_OUTPUT_ROOT>
      <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
      <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
      <DIN_LOC_ROOT>/lustre/or-hydra/cades-ccsi/proj-shared/project_acme/ACME_inputdata</DIN_LOC_ROOT>
      <DIN_LOC_ROOT_CLMFORC>/lustre/or-hydra/cades-ccsi/proj-shared/project_acme/ACME_inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
      <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/archive/$CASE</DOUT_S_ROOT>
      <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
      <BASELINE_ROOT>/lustre/or-hydra/cades-ccsi/proj-shared/project_acme/baselines/$COMPILER</BASELINE_ROOT>
      <CCSM_CPRNC>/lustre/or-hydra/cades-ccsi/proj-shared/tools/cprnc.orcondo</CCSM_CPRNC>
      <SUPPORTED_BY>yinj -at- ornl.gov</SUPPORTED_BY>
      <GMAKE_J>4</GMAKE_J>
      <MAX_TASKS_PER_NODE>32</MAX_TASKS_PER_NODE>
      <MAX_MPITASKS_PER_NODE>16</MAX_MPITASKS_PER_NODE>
      <BATCH_SYSTEM>pbs</BATCH_SYSTEM>
      <PROJECT_REQUIRED>FALSE</PROJECT_REQUIRED>
      <mpirun mpilib="openmpi" compiler="gnu">
        <executable>mpirun</executable>
        <arguments>
          <arg name="num_tasks"> -np $TOTALPES</arg>
          <arg name="machine_file">--hostfile $ENV{PBS_NODEFILE}</arg>
        </arguments>
      </mpirun>
        <mpirun mpilib = "mpi-serial">
        <executable> </executable>
      </mpirun>
      <module_system type="module">
        <init_path lang="sh">/usr/share/Modules/init/sh</init_path>
        <init_path lang="csh">/usr/share/Modules/init/csh</init_path>
        <init_path lang="perl">/usr/share/Modules/init/perl.pm</init_path>
        <init_path lang="python">/usr/share/Modules/init/python.py</init_path>
        <cmd_path lang="sh">module</cmd_path>
        <cmd_path lang="csh">module</cmd_path>
        <cmd_path lang="perl">/usr/bin/modulecmd perl</cmd_path>
        <cmd_path lang="python">/usr/bin/modulecmd python</cmd_path>
        <modules>
          <command name="purge"/>
        </modules>
        <modules compiler="gnu">
          <command name="load">PE-gnu</command>
        </modules>
        <modules>
          <command name="load">mkl/2017</command>
          <command name="load">cmake/3.6.1</command>
          <command name="load">python/2.7.12</command>
          <command name="load">nco/4.6.4</command>
          <command name="load">hdf5-parallel/1.8.17</command>
          <command name="load">netcdf-hdf5parallel/4.3.3.1</command>
        </modules>
      </module_system>

      <!-- for CLM-PFLOTRAN coupling, the PETSC_PATH must be defined specifically upon machines -->
      <environment_variables compiler="gnu" mpilib="openmpi">
        <env name="PETSC_PATH">/software/user_tools/current/cades-ccsi/petsc4pf/openmpi-1.10-gcc-5.3</env>
      </environment_variables>
      <environment_variables>
       <!-- hack for PFLOTRAN coupling (this is a temporary solution, and user must manually edit it after case.setup)-->
       <env name="CLM_PFLOTRAN_COUPLED">FALSE</env>
       <env name="CLM_PFLOTRAN_COLMODE">FALSE</env>
       <!-- dir for pflotran source code -->
       <env name="CLM_PFLOTRAN_SOURCE_DIR">/lustre/or-hydra/cades-ccsi/$USER/models/pflotran-interface/src/clm-pflotran</env>
      </environment_variables>
</machine>

<machine MACH="titan">
<DESC>ORNL XK6, os is CNL, 16 pes/node, batch system is PBS</DESC>
    <NODENAME_REGEX>titan</NODENAME_REGEX>
    <NODE_FAIL_REGEX>Received node event ec_node</NODE_FAIL_REGEX>
    <TESTS>e3sm_developer</TESTS>
    <COMPILERS>pgi,pgiacc,intel,cray</COMPILERS>
    <MPILIBS>mpich</MPILIBS>
    <CIME_OUTPUT_ROOT>$ENV{HOME}/acme_scratch/$PROJECT</CIME_OUTPUT_ROOT>
    <RUNDIR>$ENV{PROJWORK}/$PROJECT/$USER/$CASE/run</RUNDIR>
    <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
    <DIN_LOC_ROOT>/lustre/atlas1/cli900/world-shared/cesm/inputdata</DIN_LOC_ROOT>
    <DIN_LOC_ROOT_CLMFORC>/lustre/atlas1/cli900/world-shared/cesm/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
    <DOUT_S_ROOT>$ENV{MEMBERWORK}/$PROJECT/archive/$CASE</DOUT_S_ROOT>
    <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
    <BASELINE_ROOT>/lustre/atlas1/cli115/world-shared/E3SM/baselines/$COMPILER</BASELINE_ROOT>
    <CCSM_CPRNC>/lustre/atlas1/cli900/world-shared/cesm/tools/cprnc/cprnc.titan</CCSM_CPRNC>
    <SAVE_TIMING_DIR>$ENV{PROJWORK}/$PROJECT</SAVE_TIMING_DIR>
    <SAVE_TIMING_DIR_PROJECTS>cli115,cli127,cli106,csc190</SAVE_TIMING_DIR_PROJECTS>
    <OS>CNL</OS>
    <BATCH_SYSTEM>pbs</BATCH_SYSTEM>
    <ALLOCATE_SPARE_NODES>TRUE</ALLOCATE_SPARE_NODES>
    <MAX_MPITASKS_PER_NODE>16</MAX_MPITASKS_PER_NODE>
    <!-- difference to MAX_TASKS_PER_NODE-->
    <SUPPORTED_BY>E3SM</SUPPORTED_BY>
    <GMAKE_J>8</GMAKE_J>
    <MAX_TASKS_PER_NODE>16</MAX_TASKS_PER_NODE>
    <PCT_SPARE_NODES>10</PCT_SPARE_NODES>
    <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
    <PROJECT>cli115</PROJECT>
    <PIO_CONFIG_OPTS> -D PIO_BUILD_TIMING:BOOL=ON </PIO_CONFIG_OPTS>
    <TEST_TPUT_TOLERANCE>0.1</TEST_TPUT_TOLERANCE>

    <mpirun mpilib="default">
      <executable>aprun</executable>
    </mpirun>

    <mpirun mpilib="mpi-serial">
      <executable>aprun</executable>
    </mpirun>

    <module_system type="module">
      <!-- list of init_path elements, one per supported language e.g. sh, perl, python-->
      <init_path lang="sh">/opt/modules/default/init/sh</init_path>
      <init_path lang="csh">/opt/modules/default/init/csh</init_path>
      <init_path lang="python">/opt/modules/default/init/python.py</init_path>
      <init_path lang="perl">/opt/modules/default/init/perl.pm</init_path>
      <!-- list of cmd_path elements, one for every supported language, e.g. sh, perl, python -->
      <cmd_path lang="perl">/opt/modules/default/bin/modulecmd perl</cmd_path>
      <cmd_path lang="python">/opt/modules/default/bin/modulecmd python</cmd_path>
      <cmd_path lang="sh">module</cmd_path>
      <cmd_path lang="csh">module</cmd_path>
      <!-- List of modules elements, executing commands
                         if compiler and mpilib condition applies -->
      <!-- Always execute -->
      <modules>
        <command name="load">python/2.7.9</command>
        <command name="unload">subversion</command>
        <command name="load">subversion/1.9.3</command>
        <command name="unload">cmake</command>
        <command name="load">cmake3/3.6.0</command>
      </modules>

      <modules compiler="pgiacc"> <!-- changing pgi_acc to pgiacc -->
        <command name="rm">PrgEnv-cray</command>
        <command name="rm">PrgEnv-gnu</command>
        <command name="rm">PrgEnv-intel</command>
        <command name="rm">PrgEnv-pathscale</command>
        <command name="load">PrgEnv-pgi</command>
        <command name="switch">pgi pgi/17.5.0</command>
        <command name="rm">cray-mpich</command>
        <command name="rm">cray-libsci</command>
        <command name="rm">atp</command>
        <command name="rm">esmf</command>
        <command name="rm">cudatoolkit</command>
        <command name="load">cray-mpich/7.6.3</command>
        <command name="load">cray-libsci/16.11.1</command>
        <command name="load">atp/2.1.1</command>
        <command name="load">esmf/5.2.0rp2</command>
        <command name="load">cudatoolkit</command>
      </modules>
      <modules compiler="pgi">
        <command name="rm">PrgEnv-cray</command>
        <command name="rm">PrgEnv-gnu</command>
        <command name="rm">PrgEnv-intel</command>
        <command name="rm">PrgEnv-pathscale</command>
        <command name="load">PrgEnv-pgi</command>
        <command name="switch">pgi pgi/17.5.0</command>
        <command name="rm">cray-mpich</command>
        <command name="rm">cray-libsci</command>
        <command name="rm">atp</command>
        <command name="rm">esmf</command>
        <command name="load">cray-mpich/7.6.3</command>
        <command name="load">cray-libsci/16.11.1</command>
        <command name="load">atp/2.1.1</command>
        <command name="load">esmf/5.2.0rp2</command>
      </modules>
      <modules compiler="intel">
        <command name="rm">PrgEnv-pgi</command>
        <command name="rm">PrgEnv-cray</command>
        <command name="rm">PrgEnv-gnu</command>
        <command name="rm">PrgEnv-pathscale</command>
        <command name="load">PrgEnv-intel</command>
        <command name="rm">intel</command>
        <command name="rm">cray-libsci</command>
        <command name="rm">cray-mpich</command>
        <command name="rm">atp</command>
        <command name="load">intel/18.0.0.128</command>
        <command name="load">cray-mpich/7.6.3</command>
        <command name="load">atp/2.1.1</command>
      </modules>
      <modules compiler="cray">
        <command name="rm">PrgEnv-pgi</command>
        <command name="rm">PrgEnv-gnu</command>
        <command name="rm">PrgEnv-intel</command>
        <command name="rm">PrgEnv-pathscale</command>
        <command name="load">PrgEnv-cray</command>
        <command name="rm">cce</command>
        <command name="rm">cray-mpich</command>
        <command name="load">cce/8.6.4</command>
        <command name="load">cray-mpich/7.6.3</command>
      </modules>
      <!-- mpi lib settings -->
      <modules mpilib="mpi-serial">
        <command name="rm">cray-netcdf</command>
        <command name="rm">cray-netcdf-hdf5parallel</command>
        <command name="load">cray-netcdf/4.4.1.1.3</command>
      </modules>
      <modules mpilib="!mpi-serial">
        <command name="rm">cray-netcdf</command>
        <command name="rm">cray-netcdf-hdf5parallel</command>
        <command name="load">cray-netcdf-hdf5parallel/4.4.1.1.3</command>
        <command name="load">cray-parallel-netcdf/1.8.1.3</command>
      </modules>
    </module_system>
      <!-- Default -->
      <environment_variables>
        <env name="COMPILER">$COMPILER</env>
        <env name="MPILIB">$MPILIB</env>
        <env name="MPICH_ENV_DISPLAY">1</env>
        <env name="MPICH_VERSION_DISPLAY">1</env>
        <env name="MPICH_CPUMASK_DISPLAY">1</env>
        <env name="MPSTKZ">128M</env>
        <env name="OMP_STACKSIZE">128M</env>
      </environment_variables>

      <!-- Set if compiler and mpilib  -->
      <environment_variables compiler="pgiacc">
        <!-- NOTE(wjs, 2015-03-12) The following line is needed for bit-for-bit reproducibility -->
        <env name="CRAY_CPU_TARGET">istanbul</env>
        <env name="CRAY_CUDA_MPS">1</env>
      </environment_variables>
      <environment_variables compiler="intel">
        <env name="CRAYPE_LINK_TYPE">dynamic</env>
      </environment_variables>
</machine>

<machine MACH="eos">
         <DESC>ORNL XC30, os is CNL, 16 pes/node, batch system is PBS</DESC>
         <NODENAME_REGEX>eos</NODENAME_REGEX>
         <TESTS>e3sm_developer</TESTS>
         <COMPILERS>intel</COMPILERS>
         <MPILIBS>mpich</MPILIBS>
         <CIME_OUTPUT_ROOT>$ENV{HOME}/acme_scratch/$PROJECT</CIME_OUTPUT_ROOT>
         <RUNDIR>$ENV{MEMBERWORK}/$PROJECT/$CASE/run</RUNDIR>
         <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
         <DIN_LOC_ROOT>/lustre/atlas1/cli900/world-shared/cesm/inputdata</DIN_LOC_ROOT>
         <DIN_LOC_ROOT_CLMFORC>/lustre/atlas1/cli900/world-shared/cesm/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
         <DOUT_S_ROOT>$ENV{MEMBERWORK}/$PROJECT/archive/$CASE</DOUT_S_ROOT>
         <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
         <BASELINE_ROOT>/lustre/atlas1/cli900/world-shared/cesm/baselines/$COMPILER</BASELINE_ROOT>
         <CCSM_CPRNC>/lustre/atlas1/cli900/world-shared/cesm/tools/cprnc/cprnc.eos</CCSM_CPRNC>
         <SAVE_TIMING_DIR>$ENV{PROJWORK}/$PROJECT</SAVE_TIMING_DIR>
         <SAVE_TIMING_DIR_PROJECTS>cli115,cli127,cli106,csc190</SAVE_TIMING_DIR_PROJECTS>
         <OS>CNL</OS>
         <BATCH_SYSTEM>pbs</BATCH_SYSTEM>
         <SUPPORTED_BY>E3SM</SUPPORTED_BY>
         <GMAKE_J>8</GMAKE_J>
         <MAX_MPITASKS_PER_NODE>16</MAX_MPITASKS_PER_NODE>
         <MAX_TASKS_PER_NODE>32</MAX_TASKS_PER_NODE>
         <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
         <PIO_CONFIG_OPTS> -D PIO_BUILD_TIMING:BOOL=ON </PIO_CONFIG_OPTS>
         <mpirun mpilib="mpich">
           <executable>aprun</executable>
           <arguments>
             <arg name="hyperthreading" default="2"> -j {{ hyperthreading }}</arg>
             <arg name="tasks_per_numa" > -S {{ tasks_per_numa }}</arg>
             <arg name="num_tasks" > -n $TOTALPES</arg>
             <arg name="tasks_per_node" > -N $MAX_MPITASKS_PER_NODE</arg>
             <arg name="thread_count" > -d $ENV{OMP_NUM_THREADS}</arg>
             <arg name="numa_node" > -cc numa_node</arg>
           </arguments>
         </mpirun>
         <mpirun mpilib="mpi-serial">
           <executable></executable>
         </mpirun>
	 <module_system type="module">
	   <init_path lang="sh">$MODULESHOME/init/sh</init_path>
	   <init_path lang="csh">$MODULESHOME/init/csh</init_path>
	   <init_path lang="perl">$MODULESHOME/init/perl.pm</init_path>
	   <init_path lang="python">$MODULESHOME/init/python.py</init_path>
	   <cmd_path lang="sh">module</cmd_path>
	   <cmd_path lang="csh">module</cmd_path>
	   <cmd_path lang="perl">$MODULESHOME/bin/modulecmd perl</cmd_path>
	   <cmd_path lang="python">$MODULESHOME/bin/modulecmd python</cmd_path>
	   <modules>
	     <command name="rm">intel</command>
	     <command name="rm">cray</command>
	     <command name="rm">cray-parallel-netcdf</command>
	     <command name="rm">cray-libsci</command>
	     <command name="rm">cray-netcdf</command>
	     <command name="rm">cray-netcdf-hdf5parallel</command>
	     <command name="rm">netcdf</command>
	   </modules>
	   <modules compiler="intel">
	     <command name="load">intel/16.0.1.150</command>
	     <command name="load">papi</command>
	   </modules>
	   <modules compiler="cray">
	     <command name="load">PrgEnv-cray</command>
	     <command name="switch">cce cce/8.1.9</command>
	     <command name="load">cray-libsci/12.1.00</command>
	   </modules>
	   <modules compiler="gnu">
	     <command name="load">PrgEnv-gnu</command>
	     <command name="switch">gcc gcc/4.8.0</command>
	     <command name="load">cray-libsci/12.1.00</command>
	   </modules>
	   <modules mpilib="mpi-serial">
	     <command name="load">cray-netcdf/4.3.2</command>
	   </modules>
	   <modules mpilib="!mpi-serial">
	     <command name="load">cray-netcdf-hdf5parallel/4.3.3.1</command>
	     <command name="load">cray-parallel-netcdf/1.6.1</command>
	   </modules>
	   <modules>
	     <command name="load">cmake3/3.2.3</command>
	     <command name="load">python/2.7.9</command>
	   </modules>
	 </module_system>
	 <environment_variables>
	   <env name="MPICH_ENV_DISPLAY">1</env>
	   <env name="MPICH_VERSION_DISPLAY">1</env>
	   <!-- This increases the stack size, which is necessary
		for CICE to run threaded on this machine -->
	   <env name="OMP_STACKSIZE">64M</env>

	 </environment_variables>
</machine>

<machine MACH="grizzly">
	<DESC>LANL Linux Cluster, 36 pes/node, batch system slurm</DESC>
        <NODENAME_REGEX>gr-fe.*.lanl.gov</NODENAME_REGEX>
        <TESTS>e3sm_developer</TESTS>
        <COMPILERS>gnu,intel</COMPILERS>
        <MPILIBS>mvapich,openmpi</MPILIBS>
	<OS>LINUX</OS>
	<RUNDIR>/lustre/scratch3/turquoise/$ENV{USER}/ACME/cases/$CASE/run</RUNDIR>
	<EXEROOT>/lustre/scratch3/turquoise/$ENV{USER}/ACME/cases/$CASE/bld</EXEROOT>
	<DIN_LOC_ROOT>/lustre/scratch3/turquoise/$ENV{USER}/ACME/input_data</DIN_LOC_ROOT>
	<DIN_LOC_ROOT_CLMFORC>/lustre/scratch3/turquoise/$ENV{USER}/ACME/input_data/atm/datm7</DIN_LOC_ROOT_CLMFORC>
	<DOUT_S_ROOT>/lustre/scratch3/turquoise/$ENV{USER}/ACME/archive/$CASE</DOUT_S_ROOT>
	<DOUT_L_MSROOT>UNSET</DOUT_L_MSROOT>
	<BASELINE_ROOT>/lustre/scratch3/turquoise/$ENV{USER}/ACME/input_data/ccsm_baselines/$COMPILER</BASELINE_ROOT>
	<CIME_OUTPUT_ROOT>/lustre/scratch3/turquoise/$ENV{USER}/ACME/scratch</CIME_OUTPUT_ROOT>
	<CCSM_CPRNC>/turquoise/usr/projects/climate/SHARED_CLIMATE/software/wolf/cprnc/v0.40/cprnc</CCSM_CPRNC>
	<module_system type="module">
		<init_path lang="perl">/usr/share/Modules/init/perl.pm</init_path>
		<init_path lang="python">/usr/share/Modules/init/python.py</init_path>
		<init_path lang="csh">/etc/profile.d/z00_lmod.csh</init_path>
		<cmd_path lang="perl">/usr/share/lmod/lmod/libexec/lmod perl</cmd_path>
		<cmd_path lang="python">/usr/share/lmod/lmod/libexec/lmod python</cmd_path>
		<cmd_path lang="sh">module</cmd_path>
		<cmd_path lang="csh">module</cmd_path>

		<modules>
			<command name="purge"/>
			<command name="use">/usr/projects/climate/SHARED_CLIMATE/modulefiles/all</command>
			<command name="load">python/anaconda-2.7-climate</command>
		</modules>

		<modules compiler="gnu">
			<command name="load">gcc/5.3.0</command>
		</modules>
		<modules compiler="intel">
			<command name="load">intel/17.0.1</command>
		</modules>
		<modules mpilib="openmpi">
			<command name="load">openmpi/1.10.5</command>
		</modules>
		<modules mpilib="mvapich">
			<command name="load">mvapich2/2.2</command>
		</modules>
		<modules>
			<command name="load">netcdf/4.4.1</command>
		</modules>
		<modules>
			<command name="load">parallel-netcdf/1.5.0</command>
		</modules>
	</module_system>
	<environment_variables>
		<env name="PNETCDF_HINTS">romio_ds_write=disable;romio_ds_read=disable;romio_cb_write=enable;romio_cb_read=enable</env>
	</environment_variables>

	<BATCH_SYSTEM>slurm</BATCH_SYSTEM>
	<mpirun mpilib="default">
		<executable>mpirun</executable>
		<arguments>
			<arg name="num_tasks"> -n $TOTALPES</arg>
		</arguments>
	</mpirun>
	<mpirun mpilib="mvapich">
		<executable>srun</executable>
		<arguments>
			<arg name="num_tasks"> -n $TOTALPES</arg>
		</arguments>
	</mpirun>
	<mpirun mpilib="openmpi">
		<executable>mpirun</executable>
		<arguments>
			<arg name="num_tasks"> -n $TOTALPES</arg>
		</arguments>
	</mpirun>
	<mpirun mpilib="mpi-serial">
		<executable></executable>
	</mpirun>
	<GMAKE_J>4</GMAKE_J>
	<MAX_TASKS_PER_NODE>36</MAX_TASKS_PER_NODE>
	<MAX_MPITASKS_PER_NODE>32</MAX_MPITASKS_PER_NODE>
	<PROJECT>climateacme</PROJECT>
    	<PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
    	<SUPPORTED_BY>luke.vanroekel @ gmail.com</SUPPORTED_BY>
</machine>

<machine MACH="wolf">
    <DESC>LANL Linux Cluster, 16 pes/node, batch system slurm</DESC>
    <NODENAME_REGEX>wf-fe.*.lanl.gov</NODENAME_REGEX>
    <TESTS>e3sm_developer</TESTS>
	<COMPILERS>intel,gnu</COMPILERS>
	<MPILIBS>openmpi,mvapich</MPILIBS>
	<CIME_OUTPUT_ROOT>/lustre/scratch3/turquoise/$ENV{USER}/ACME/scratch</CIME_OUTPUT_ROOT>
	<RUNDIR>/lustre/scratch3/turquoise/$ENV{USER}/ACME/cases/$CASE/run</RUNDIR>
	<EXEROOT>/lustre/scratch3/turquoise/$ENV{USER}/ACME/cases/$CASE/bld</EXEROOT>
	<DOUT_S_ROOT>/lustre/scratch3/turquoise/$ENV{USER}/ACME/archive/$CASE</DOUT_S_ROOT>
	<DOUT_L_MSROOT>UNSET</DOUT_L_MSROOT>
	<OS>LINUX</OS>
	<BATCH_SYSTEM>slurm</BATCH_SYSTEM>
	<SUPPORTED_BY>jonbob -at- lanl.gov</SUPPORTED_BY>
	<GMAKE_J>4</GMAKE_J>
	<MAX_TASKS_PER_NODE>16</MAX_TASKS_PER_NODE>
	<MAX_MPITASKS_PER_NODE>16</MAX_MPITASKS_PER_NODE>
	<PROJECT>climateacme</PROJECT>
	<PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
	<DIN_LOC_ROOT>/lustre/scratch3/turquoise/$ENV{USER}/ACME/input_data</DIN_LOC_ROOT>
	<DIN_LOC_ROOT_CLMFORC>/lustre/scratch3/turquoise/$ENV{USER}/ACME/input_data/atm/datm7</DIN_LOC_ROOT_CLMFORC>
	<BASELINE_ROOT>/lustre/scratch3/turquoise/$ENV{USER}/ACME/input_data/ccsm_baselines/$COMPILER</BASELINE_ROOT>
	<CCSM_CPRNC>/turquoise/usr/projects/climate/SHARED_CLIMATE/software/wolf/cprnc/v0.40/cprnc</CCSM_CPRNC>
	<mpirun mpilib="default">
		<executable>mpirun</executable>
		<arguments>
			<arg name="num_tasks"> -n $TOTALPES</arg>
		</arguments>
	</mpirun>
	<mpirun mpilib="openmpi">
		<executable>mpirun</executable>
		<arguments>
			<arg name="num_tasks"> -n $TOTALPES</arg>
		</arguments>
	</mpirun>
	<mpirun mpilib="mvapich">
		<executable>srun</executable>
		<arguments>
			<arg name="num_tasks"> -n $TOTALPES</arg>
		</arguments>
	</mpirun>
	<mpirun mpilib="mpi-serial">
		<executable></executable>
	</mpirun>
	<module_system type="module">
		<init_path lang="perl">/usr/share/Modules/init/perl.pm</init_path>
		<init_path lang="python">/usr/share/Modules/init/python.py</init_path>
		<init_path lang="sh">/usr/share/Modules/init/sh</init_path>
		<init_path lang="csh">/usr/share/Modules/init/csh</init_path>
		<cmd_path lang="perl">/usr/bin/modulecmd perl</cmd_path>
		<cmd_path lang="python">/usr/bin/modulecmd python</cmd_path>
		<cmd_path lang="sh">module</cmd_path>
		<cmd_path lang="csh">module</cmd_path>
		<modules>
			<command name="purge"/>
			<command name="use">/usr/projects/climate/SHARED_CLIMATE/modulefiles/all</command>
			<command name="load">friendly-testing</command>
			<command name="load">python/anaconda-2.7-climate</command>
		</modules>
		<modules compiler="intel">
			<command name="load">intel/15.0.5</command>
			<command name="load">mkl/11.3.3</command>
		</modules>
		<modules compiler="gnu">
			<command name="load">gcc/4.8.2</command>
		</modules>
		<modules mpilib="openmpi">
			<command name="load">openmpi/1.6.5</command>
		</modules>
		<modules mpilib="mvapich">
			<command name="load">mvapich2/1.8</command>
		</modules>
		<modules>
			<command name="load">netcdf/4.4.0</command>
		</modules>
		<modules mpilib="!mpi-serial">
			<command name="load">parallel-netcdf/1.5.0</command>
		</modules>
	</module_system>
	<environment_variables>
		<env name="LD_LIBRARY_PATH">$ENV{LD_LIBRARY_PATH}:$ENV{NETCDF_ROOT}/lib</env>
	</environment_variables>
</machine>

<machine MACH="mesabi">
        <DESC>Mesabi batch queue</DESC>
        <OS>LINUX</OS>
        <COMPILERS>intel</COMPILERS>
        <MPILIBS>openmpi</MPILIBS>
        <RUNDIR>$CASEROOT/run</RUNDIR>
<!-- complete path to the run directory -->
        <EXEROOT>$CASEROOT/exedir</EXEROOT>
<!-- complete path to the build directory -->
        <DIN_LOC_ROOT>/home/reichpb/shared/cesm_inputdata</DIN_LOC_ROOT>
<!-- complete path to the inputdata directory -->

        <DIN_LOC_ROOT_CLMFORC>/home/reichpb/shared/cesm_inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
<!-- path to the optional forcing data for CLM (for CRUNCEP forcing) -->
        <DOUT_S>FALSE</DOUT_S>
<!-- logical for short term archiving -->
        <DOUT_S_ROOT>USERDEFINED_optional_run</DOUT_S_ROOT>
<!-- complete path to a short term archiving directory -->
        <DOUT_L_MSROOT>USERDEFINED_optional_run</DOUT_L_MSROOT>
<!-- complete path to a long term archiving directory -->
        <BASELINE_ROOT>USERDEFINED_optional_run/$COMPILER</BASELINE_ROOT>
<!-- where the cesm testing scripts write and read baseline results -->
        <CCSM_CPRNC>USERDEFINED_optional_test</CCSM_CPRNC>
<!-- path to the cprnc tool used to compare netcdf history files in testing -->
         <BATCH_SYSTEM>pbs</BATCH_SYSTEM>
        <SUPPORTED_BY>chen1718 at umn dot edu</SUPPORTED_BY>
        <GMAKE_J>2</GMAKE_J>
        <MAX_TASKS_PER_NODE>24</MAX_TASKS_PER_NODE>
         <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
         <mpirun mpilib="default">
           <executable>aprun</executable>
             <arguments>
                <arg name="num_tasks"> -n $TOTALPES</arg>
                <arg name="tasks_per_numa"> -S {{ tasks_per_numa }}</arg>
                <arg name="tasks_per_node"> -N $MAX_MPITASKS_PER_NODE</arg>
                <arg name="thread_count"> -d $ENV{OMP_NUM_THREADS}</arg>
             </arguments>
         </mpirun>
</machine>

<machine MACH="itasca">
        <DESC>Itasca batch queue</DESC>
        <OS>LINUX</OS>
        <COMPILERS>intel</COMPILERS>
        <MPILIBS>openmpi</MPILIBS>
        <RUNDIR>$CASEROOT/run</RUNDIR>
<!-- complete path to the run directory -->
        <EXEROOT>$CASEROOT/exedir</EXEROOT>
<!-- complete path to the build directory -->
        <DIN_LOC_ROOT>/home/reichpb/shared/cesm_inputdata</DIN_LOC_ROOT>
<!-- complete path to the inputdata directory -->

        <DIN_LOC_ROOT_CLMFORC>/home/reichpb/shared/cesm_inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
<!-- path to the optional forcing data for CLM (for CRUNCEP forcing) -->
        <DOUT_S>FALSE</DOUT_S>
<!-- logical for short term archiving -->
        <DOUT_S_ROOT>USERDEFINED_optional_run</DOUT_S_ROOT>
<!-- complete path to a short term archiving directory -->
        <DOUT_L_MSROOT>USERDEFINED_optional_run</DOUT_L_MSROOT>
<!-- complete path to a long term archiving directory -->
        <BASELINE_ROOT>USERDEFINED_optional_run/$COMPILER</BASELINE_ROOT>
<!-- where the cesm testing scripts write and read baseline results -->
        <CCSM_CPRNC>USERDEFINED_optional_test</CCSM_CPRNC>
<!-- path to the cprnc tool used to compare netcdf history files in testing -->
         <BATCH_SYSTEM>pbs</BATCH_SYSTEM>
        <SUPPORTED_BY>chen1718 at umn dot edu</SUPPORTED_BY>
        <GMAKE_J>2</GMAKE_J>
        <MAX_TASKS_PER_NODE>8</MAX_TASKS_PER_NODE>
         <mpirun mpilib="default">
           <executable>aprun</executable>
             <arguments>
                <arg name="num_tasks"> -n $TOTALPES</arg>
                <arg name="tasks_per_numa"> -S {{ tasks_per_numa }}</arg>
                <arg name="tasks_per_node"> -N $MAX_MPITASKS_PER_NODE</arg>
                <arg name="thread_count"> -d $ENV{OMP_NUM_THREADS}</arg>
             </arguments>
         </mpirun>
</machine>

<machine MACH="lawrencium-lr3">
  <DESC>Lawrencium LR3 cluster at LBL, OS is Linux (intel), batch system is SLURM</DESC>
  <OS>LINUX</OS>
  <NODENAME_REGEX>n000*</NODENAME_REGEX>
  <COMPILERS>intel</COMPILERS>
  <MPILIBS>openmpi</MPILIBS>
  <CIME_OUTPUT_ROOT>/global/scratch/$ENV{USER}</CIME_OUTPUT_ROOT>
  <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
  <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
  <DIN_LOC_ROOT>/global/scratch/$ENV{USER}/cesm_input_datasets/</DIN_LOC_ROOT>
  <DIN_LOC_ROOT_CLMFORC>/global/scratch/$ENV{USER}/cesm_input_datasets/atm/datm7</DIN_LOC_ROOT_CLMFORC>
  <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/cesm_archive/$CASE</DOUT_S_ROOT>
  <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
  <BASELINE_ROOT>$CIME_OUTPUT_ROOT/cesm_baselines/$COMPILER</BASELINE_ROOT>
  <CCSM_CPRNC>/$CIME_OUTPUT_ROOT/cesm_tools/cprnc/cprnc</CCSM_CPRNC>
  <BATCH_SYSTEM>slurm</BATCH_SYSTEM>
  <SUPPORTED_BY>gbisht at lbl dot gov </SUPPORTED_BY>
  <GMAKE_J>4</GMAKE_J>
  <MAX_TASKS_PER_NODE>16</MAX_TASKS_PER_NODE>
  <MAX_MPITASKS_PER_NODE>16</MAX_MPITASKS_PER_NODE>
  <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
  <CHARGE_ACCOUNT>ac_acme</CHARGE_ACCOUNT>
  <mpirun mpilib="mpi-serial">
    <executable>mpirun</executable>
    <arguments>
      <arg name="num_tasks">-np $TOTALPES</arg>
      <arg name="tasks_per_node"> -npernode $MAX_MPITASKS_PER_NODE</arg>
    </arguments>
  </mpirun>
  <mpirun mpilib="default">
    <executable>mpirun</executable>
    <arguments>
      <arg name="num_tasks">-np $TOTALPES</arg>
      <arg name="tasks_per_node"> -npernode $MAX_MPITASKS_PER_NODE</arg>
    </arguments>
  </mpirun>
  <module_system type="module">
    <init_path lang="sh">/etc/profile.d/modules.sh</init_path>
    <init_path lang="csh">/etc/profile.d/modules.csh</init_path>
    <init_path lang="perl">/usr/Modules/init/perl.pm</init_path>
    <init_path lang="python">/usr/Modules/python.py</init_path>
    <cmd_path lang="sh">module</cmd_path>
    <cmd_path lang="csh">module</cmd_path>
    <cmd_path lang="perl">/usr/Modules/bin/modulecmd perl</cmd_path>
    <cmd_path lang="python">/usr/Modules/bin/modulecmd python</cmd_path>
    <modules>
      <command name="purge"/>
      <command name="load">cmake</command>
      <command name="load">perl xml-libxml switch python/2.7</command>
    </modules>
    <modules compiler="intel">
      <command name="load">intel/2016.4.072</command>
      <command name="load">mkl</command>
    </modules>
    <modules compiler="intel" mpilib="mpi-serial">
      <command name="load">netcdf/4.4.1.1-intel-s</command>
    </modules>
    <modules compiler="intel" mpilib="!mpi-serial">
      <command name="load">openmpi</command>
      <command name="load">netcdf/4.4.1.1-intel-p</command>
    </modules>
     </module_system>
</machine>

<machine MACH="lawrencium-lr2">
  <DESC>Lawrencium LR2 cluster at LBL, OS is Linux (intel), batch system is SLURM</DESC>
  <OS>LINUX</OS>
  <NODENAME_REGEX>n000*</NODENAME_REGEX>
  <COMPILERS>intel</COMPILERS>
  <MPILIBS>openmpi</MPILIBS>
  <CIME_OUTPUT_ROOT>/global/scratch/$ENV{USER}</CIME_OUTPUT_ROOT>
  <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
  <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
  <DIN_LOC_ROOT>/global/scratch/$ENV{USER}/cesm_input_datasets/</DIN_LOC_ROOT>
  <DIN_LOC_ROOT_CLMFORC>/global/scratch/$ENV{USER}/cesm_input_datasets/atm/datm7</DIN_LOC_ROOT_CLMFORC>
  <DOUT_S_ROOT>$CIME_OUTPUT_ROOT/cesm_archive/$CASE</DOUT_S_ROOT>
  <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
  <BASELINE_ROOT>$CIME_OUTPUT_ROOT/cesm_baselines/$COMPILER</BASELINE_ROOT>
  <CCSM_CPRNC>/$CIME_OUTPUT_ROOT/cesm_tools/cprnc/cprnc</CCSM_CPRNC>
  <BATCH_SYSTEM>slurm</BATCH_SYSTEM>
  <SUPPORTED_BY>gbisht at lbl dot gov</SUPPORTED_BY>
  <GMAKE_J>4</GMAKE_J>
  <MAX_TASKS_PER_NODE>12</MAX_TASKS_PER_NODE>
  <MAX_MPITASKS_PER_NODE>12</MAX_MPITASKS_PER_NODE>
  <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
  <CHARGE_ACCOUNT>ac_acme</CHARGE_ACCOUNT>
  <mpirun mpilib="mpi-serial">
    <executable>mpirun</executable>
    <arguments>
      <arg name="num_tasks">-np $TOTALPES</arg>
      <arg name="tasks_per_node"> -npernode $MAX_MPITASKS_PER_NODE</arg>
    </arguments>
  </mpirun>
  <mpirun mpilib="default">
    <executable>mpirun</executable>
    <arguments>
      <arg name="num_tasks">-np $TOTALPES</arg>
      <arg name="tasks_per_node"> -npernode $MAX_MPITASKS_PER_NODE</arg>
    </arguments>
  </mpirun>
  <module_system type="module">
    <init_path lang="sh">/etc/profile.d/modules.sh</init_path>
    <init_path lang="csh">/etc/profile.d/modules.csh</init_path>
    <init_path lang="perl">/usr/Modules/init/perl.pm</init_path>
    <init_path lang="python">/usr/Modules/python.py</init_path>
    <cmd_path lang="sh">module</cmd_path>
    <cmd_path lang="csh">module</cmd_path>
    <cmd_path lang="perl">/usr/Modules/bin/modulecmd perl</cmd_path>
    <cmd_path lang="python">/usr/Modules/bin/modulecmd python</cmd_path>
    <modules>
      <command name="purge"/>
      <command name="load">cmake</command>
      <command name="load">perl xml-libxml switch python/2.7</command>
    </modules>
    <modules compiler="intel">
      <command name="load">intel/2016.4.072</command>
      <command name="load">mkl</command>
    </modules>
    <modules compiler="intel" mpilib="mpi-serial">
      <command name="load">netcdf/4.4.1.1-intel-s</command>
    </modules>
    <modules compiler="intel" mpilib="!mpi-serial">
      <command name="load">openmpi</command>
      <command name="load">netcdf/4.4.1.1-intel-s</command>
    </modules>
     </module_system>
</machine>

<machine MACH="eddi">
  <DESC>small developer workhorse at lbl climate sciences</DESC>
  <OS>LINUX</OS>
  <COMPILERS>gnu</COMPILERS>
  <MPILIBS>openmpi</MPILIBS>
  <PROJECT>ngeet</PROJECT>
  <CIME_OUTPUT_ROOT>/home/lbleco/acme/</CIME_OUTPUT_ROOT>
  <DIN_LOC_ROOT>/home/lbleco/cesm/cesm_input_datasets/</DIN_LOC_ROOT>
  <DIN_LOC_ROOT_CLMFORC>/home/lbleco/cesm/cesm_input_datasets/atm/datm7/</DIN_LOC_ROOT_CLMFORC>
  <DOUT_S_ROOT>/home/lbleco/acme/cesm_archive/$CASE</DOUT_S_ROOT>
  <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
  <BASELINE_ROOT>/home/lbleco/acme/cesm_baselines/$COMPILER</BASELINE_ROOT>
  <CCSM_CPRNC>/home/lbleco/cesm/cesm_tools/cprnc/cprnc</CCSM_CPRNC>
  <GMAKE_J>1</GMAKE_J>
  <BATCH_SYSTEM>none</BATCH_SYSTEM>
  <SUPPORTED_BY>rgknox at lbl gov</SUPPORTED_BY>
  <MAX_TASKS_PER_NODE>4</MAX_TASKS_PER_NODE>
  <MAX_MPITASKS_PER_NODE>4</MAX_MPITASKS_PER_NODE>
  <PROJECT_REQUIRED>FALSE</PROJECT_REQUIRED>
  <mpirun mpilib="mpi-serial">
    <executable></executable>
  </mpirun>
  <mpirun mpilib="default">
    <executable>mpirun</executable>
    <arguments>
      <arg name="num_tasks">-np $TOTALPES</arg>
      <arg name="tasks_per_node"> -npernode $MAX_MPITASKS_PER_NODE</arg>
    </arguments>
  </mpirun>
  <module_system type="none"/>
</machine>

<machine MACH="summitdev">
	 <DESC>ORNL pre-Summit testbed. Node: 2x POWER8 + 4x Tesla P100, 20 cores/node, 8 HW threads/core.</DESC>
	 <NODENAME_REGEX>summitdev-*</NODENAME_REGEX>
	 <TESTS>e3sm_developer</TESTS>
	 <COMPILERS>ibm,pgi,pgiacc</COMPILERS>
	 <MPILIBS>spectrum-mpi,mpi-serial</MPILIBS>
	 <CIME_OUTPUT_ROOT>$ENV{HOME}/acme_scratch/$PROJECT</CIME_OUTPUT_ROOT>
	 <RUNDIR>/lustre/atlas/scratch/$ENV{USER}/$PROJECT/$CASE/run</RUNDIR>
	 <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
	 <DIN_LOC_ROOT>/lustre/atlas1/cli900/world-shared/cesm/inputdata</DIN_LOC_ROOT>
	 <DIN_LOC_ROOT_CLMFORC>/lustre/atlas1/cli900/world-shared/cesm/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
	 <DOUT_S_ROOT>/lustre/atlas/scratch/$ENV{USER}/$PROJECT/archive/$CASE</DOUT_S_ROOT>
	 <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
	 <BASELINE_ROOT>/lustre/atlas1/cli900/world-shared/cesm/baselines/$COMPILER</BASELINE_ROOT>
	 <CCSM_CPRNC>/lustre/atlas1/cli900/world-shared/cesm/tools/cprnc/cprnc</CCSM_CPRNC>
	 <SAVE_TIMING_DIR>/lustre/atlas/proj-shared/$PROJECT</SAVE_TIMING_DIR>
         <SAVE_TIMING_DIR_PROJECTS>cli115,cli127</SAVE_TIMING_DIR_PROJECTS>
	 <OS>LINUX</OS>
	 <BATCH_SYSTEM>lsf</BATCH_SYSTEM>
	 <SUPPORTED_BY>acme</SUPPORTED_BY>
	 <GMAKE_J>32</GMAKE_J>
	 <MAX_MPITASKS_PER_NODE>80</MAX_MPITASKS_PER_NODE>
	 <MAX_TASKS_PER_NODE>160</MAX_TASKS_PER_NODE>
	 <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
	 <PROJECT>csc249</PROJECT>
	 <CHARGE_ACCOUNT>CSC249ADSE15</CHARGE_ACCOUNT>
	 <PIO_CONFIG_OPTS> -D PIO_BUILD_TIMING:BOOL=ON </PIO_CONFIG_OPTS>

	 <mpirun mpilib="spectrum-mpi">
	 <executable>/lustre/atlas/world-shared/cli900/helper_scripts/mpirun.summitdev</executable>
	 <!-- <executable>jsrun</executable> -->
	 <arguments>
	     <arg name="num_tasks" > -n $TOTALPES -N $MAX_MPITASKS_PER_NODE </arg>
	     <!-- <arg name="num_tasks" > -n ALL_HOSTS -a $MAX_MPITASKS_PER_NODE </arg> -->
		 <!-- <arg name="thread_count"> -c $ENV{OMP_NUM_THREADS} -E OMP_NUM_THREADS=$ENV{OMP_NUM_THREADS}</arg> -->
	 </arguments>
	 </mpirun>
		<!-- Useful jsrun options:
		-n	(hyphen-hyphen)nrs	Number of resource sets
		-a	(hyphen-hyphen)tasks_per_rs	Number of tasks per resource set
		-c	(hyphen-hyphen)cpu_per_rs	Number of CPUs per resource set. Threads per rs.
		-g	(hyphen-hyphen)gpu_per_rs	Number of GPUs per resource set
		-r	(hyphen-hyphen)rs_per_host	Number of resource sets per host

		 <arg name="num_tasks" > -n ALL_HOSTS -p $TOTALPES </arg>
		 Old options: <arg name="binding_core"> map-by core:PE=$ENV{OMP_NUM_THREADS} bind-to core </arg>
		 <arg name="show-binding"> report-bindings </arg>
		 <arg name="show-processmap"> display-map </arg>
		-->

    <module_system type="module" allow_error="true">
      <!-- list of init_path elements, one per supported language e.g. sh, perl, python-->
      <init_path lang="sh">/sw/summitdev/lmod/7.4.0/rhel7.2_gnu4.8.5/lmod/7.4/init/sh</init_path>
      <init_path lang="csh">/sw/summitdev/lmod/7.4.0/rhel7.2_gnu4.8.5/lmod/7.4/init/csh</init_path>
      <init_path lang="python">/sw/summitdev/lmod/7.4.0/rhel7.2_gnu4.8.5/lmod/7.4/init/env_modules_python.py</init_path>
      <init_path lang="perl">/sw/summitdev/lmod/7.4.0/rhel7.2_gnu4.8.5/lmod/7.4/init/perl</init_path>
      <!-- list of cmd_path elements, one for every supported language, e.g. sh, perl, python -->
      <cmd_path lang="perl">module</cmd_path>
      <cmd_path lang="python">/sw/summitdev/lmod/7.4.0/rhel7.2_gnu4.8.5/lmod/lmod/libexec/lmod python</cmd_path>
      <cmd_path lang="sh">module</cmd_path>
      <cmd_path lang="csh">module</cmd_path>

      <!-- Always execute -->
      <modules>
		<command name="ls"/>
		<command name="purge"/>
		<command name="ls"/>
		<command name="load">DefApps</command>
		<command name="load">python/3.5.2</command>
		<command name="load">subversion/1.9.3</command>
		<command name="load">git/2.13.0</command>
		<command name="load">cmake/3.6.1</command>
		<command name="load">essl/5.5.0-20161110</command>
		<command name="load">netlib-lapack/3.6.1</command>
      </modules>
      <!-- List of modules elements, executing commands if compiler and mpilib condition applies -->
      <modules compiler="pgi">
        <command name="rm">xl</command>
        <command name="load">pgi/17.9</command>
        <command name="load">spectrum-mpi/10.1.0.4-20170915</command>
        <command name="ls"/>
      </modules>
      <modules compiler="ibm">
        <command name="rm">pgi</command>
        <command name="load">xl/20170914-beta</command>
        <command name="load">spectrum-mpi/10.1.0.4-20170915</command>
        <command name="ls"/>
      </modules>

      <!-- mpi lib settings -->
      <modules mpilib="mpi-serial">
        <command name="load">netcdf/4.4.1</command>
        <command name="load">netcdf-fortran/4.4.4</command>
      </modules>
	  <!-- Sometimes,same versions of libraries are not available for different compilers, hence the split below -->
      <modules compiler="ibm" mpilib="!mpi-serial">
        <command name="load">netcdf/4.4.1</command>
        <command name="load">netcdf-fortran/4.4.4</command>
        <command name="load">parallel-netcdf/1.7.0</command>
        <command name="load">hdf5/1.10.0-patch1</command>
      </modules>
 	  <modules compiler="pgi" mpilib="!mpi-serial">
        <command name="load">netcdf/4.4.1</command>
        <command name="load">netcdf-fortran/4.4.4</command>
        <command name="load">parallel-netcdf/1.7.0</command>
        <command name="load">hdf5/1.10.0-patch1</command>
      </modules>
    </module_system>
      <!-- Default -->
      <environment_variables>
		  <env name="COMPILER">$COMPILER</env>
		  <env name="MPILIB">$MPILIB</env>
		  <env name="OMP_STACKSIZE">128M</env>
		  <env name="NETCDF_C_PATH">$ENV{OLCF_NETCDF_ROOT}</env>
		  <env name="NETCDF_FORTRAN_PATH">$ENV{OLCF_NETCDF_FORTRAN_ROOT}</env>
		  <env name="HDF5_PATH">$ENV{OLCF_HDF5_ROOT}</env>
		  <env name="ESSL_PATH">$ENV{OLCF_ESSL_ROOT}</env>
		  <env name="NETLIB_LAPACK_PATH">$ENV{OLCF_NETLIB_LAPACK_ROOT}</env>
      </environment_variables>
      <!-- <environment_variables compiler="ibm"> -->
		 <!-- <env name="NETCDF_FORTRAN_PATH">/lustre/atlas/proj-shared/cli115/summitdev/soft/netcdf/fortran-4.4.4-xl-20170914-beta</env> -->
      <!-- </environment_variables> -->
      <environment_variables mpilib="!mpi-serial">
        <env name="PNETCDF_PATH">$ENV{OLCF_PARALLEL_NETCDF_ROOT}</env>
      </environment_variables>
</machine>

<machine MACH="summit">
    <DESC>ORNL Summit. Node: 2x POWER9 + 6x Volta V100, 22 cores/socket, 4 HW threads/core.</DESC>
    <NODENAME_REGEX>.*summit.*</NODENAME_REGEX>
    <TESTS>e3sm_developer</TESTS>
    <COMPILERS>ibm,ibmgpu,pgi,pgigpu,gnu,gnugpu</COMPILERS>
    <MPILIBS>spectrum-mpi</MPILIBS>
    <CIME_OUTPUT_ROOT>/gpfs/alpine/$PROJECT/proj-shared/$ENV{USER}/e3sm_scratch/bench/maint-1.0/ibm/20220720</CIME_OUTPUT_ROOT>
    <RUNDIR>$CIME_OUTPUT_ROOT/$CASE/run</RUNDIR>
    <EXEROOT>$CIME_OUTPUT_ROOT/$CASE/bld</EXEROOT>
    <DIN_LOC_ROOT>/gpfs/alpine/cli115/world-shared/e3sm/inputdata</DIN_LOC_ROOT>
    <DIN_LOC_ROOT_CLMFORC>/gpfs/alpine/cli115/world-shared/e3sm/inputdata/atm/datm7</DIN_LOC_ROOT_CLMFORC>
    <DOUT_S_ROOT>/gpfs/alpine/$PROJECT/proj-shared/$ENV{USER}/archive/$CASE</DOUT_S_ROOT>
    <DOUT_L_MSROOT>csm/$CASE</DOUT_L_MSROOT>
    <BASELINE_ROOT>/gpfs/alpine/cli115/world-shared/e3sm/baselines/$COMPILER</BASELINE_ROOT>
    <CCSM_CPRNC>/gpfs/alpine/cli115/world-shared/e3sm/tools/cprnc.summit/cprnc</CCSM_CPRNC>
    <SAVE_TIMING_DIR>/gpfs/alpine/proj-shared/$PROJECT</SAVE_TIMING_DIR>
    <SAVE_TIMING_DIR_PROJECTS>cli115,cli127</SAVE_TIMING_DIR_PROJECTS>
    <OS>LINUX</OS>
    <BATCH_SYSTEM>lsf</BATCH_SYSTEM>
    <SUPPORTED_BY>e3sm</SUPPORTED_BY>
    <GMAKE_J>8</GMAKE_J>
    <MAX_MPITASKS_PER_NODE>84</MAX_MPITASKS_PER_NODE>
    <MAX_TASKS_PER_NODE>84</MAX_TASKS_PER_NODE>
    <PROJECT_REQUIRED>TRUE</PROJECT_REQUIRED>
    <PROJECT>cli115</PROJECT>
    <CHARGE_ACCOUNT>cli115</CHARGE_ACCOUNT>
    <PIO_CONFIG_OPTS> -D PIO_BUILD_TIMING:BOOL=ON </PIO_CONFIG_OPTS>
    <mpirun mpilib="spectrum-mpi">
      <executable>jsrun</executable>
      <arguments>
        <arg name="exit_on_error">-X 1</arg>
        <arg name="num_rs">$SHELL{if [ {{ total_tasks }} -eq 1 ];then echo --nrs 1 --rs_per_host 1;else echo --nrs $NUM_RS --rs_per_host $RS_PER_NODE;fi}</arg>
        <arg name="tasks_per_rs">--tasks_per_rs $SHELL{echo "({{ tasks_per_node }} + $RS_PER_NODE - 1)/$RS_PER_NODE"|bc}</arg>
        <arg name="distribute">-d plane:$SHELL{echo "({{ tasks_per_node }} + $RS_PER_NODE - 1)/$RS_PER_NODE"|bc}</arg>
        <arg name="cpu_per_rs">--cpu_per_rs $ENV{CPU_PER_RS}</arg>
        <arg name="gpu_per_rs">--gpu_per_rs $ENV{GPU_PER_RS}</arg>
        <arg name="task_bind">--bind packed:smt:$ENV{OMP_NUM_THREADS}</arg>
        <arg name="latency_priority">--latency_priority $ENV{LTC_PRT}</arg>
        <arg name="stdio_mode">--stdio_mode prepended</arg>
        <arg name="thread_vars">$ENV{JSRUN_THREAD_VARS}</arg>
      </arguments>
    </mpirun>
    <module_system type="module" allow_error="true">
      <init_path lang="sh">/sw/summit/lmod/8.4/init/sh</init_path>
      <init_path lang="csh">/sw/summit/lmod/8.4/init/csh</init_path>
      <init_path lang="python">/sw/summit/lmod/8.4/init/env_modules_python.py</init_path>
      <init_path lang="perl">/sw/summit/lmod/8.4/init/perl</init_path>
      <cmd_path lang="perl">module</cmd_path>
      <cmd_path lang="python">/sw/summit/lmod/8.4/libexec/lmod python</cmd_path>
      <cmd_path lang="sh">module</cmd_path>
      <cmd_path lang="csh">module</cmd_path>
      <modules>
        <command name="purge"/>
        <command name="load">DefApps</command>
        <command name="load">python/3.7-anaconda3</command>
        <command name="load">subversion/1.14.0</command>
        <command name="load">git/2.31.1</command>
        <command name="load">cmake/3.20.2</command>
        <command name="load">essl/6.3.0</command>
        <command name="load">netlib-lapack/3.8.0</command>
      </modules>
      <modules compiler="pgi.*">
        <command name="load">nvhpc/21.11</command>
      </modules>
      <modules compiler="pgigpu">
        <command name="load">cuda/10.1.243</command>
      </modules>
      <modules compiler="gnugpu">
        <command name="load">cuda/11.0.3</command>
      </modules>
      <modules compiler="ibm.*">
        <command name="load">xl/16.1.1-10</command>
      </modules>
      <modules compiler="ibmgpu">
        <command name="load">cuda/10.1.243</command>
      </modules>
      <modules compiler="gnu.*">
        <command name="load">gcc/9.1.0</command>
      </modules>
      <modules>
        <command name="load">spectrum-mpi/10.4.0.3-20210112</command>
        <command name="load">hdf5/1.10.7</command>
        <command name="load">netcdf-c/4.8.0</command>
        <command name="load">netcdf-fortran/4.4.5</command>
        <command name="load">parallel-netcdf/1.12.2</command>
      </modules>
    </module_system>
    <environment_variables>
      <env name="NETCDF_C_PATH">$ENV{OLCF_NETCDF_C_ROOT}</env>
      <env name="NETCDF_FORTRAN_PATH">$ENV{OLCF_NETCDF_FORTRAN_ROOT}</env>
      <env name="ESSL_PATH">$ENV{OLCF_ESSL_ROOT}</env>
      <env name="HDF5_PATH">$ENV{OLCF_HDF5_ROOT}</env>
      <env name="PNETCDF_PATH">$ENV{OLCF_PARALLEL_NETCDF_ROOT}</env>
      <env name="PATH">/gpfs/alpine/cli115/world-shared/soft/perl/5.36.0/gcc-8.3.1/bin:$ENV{PATH}</env>
      <env name="PGI_ACC_POOL_ALLOC">0</env>
    </environment_variables>
    <environment_variables SMP_PRESENT="FALSE">
      <env name="JSRUN_THREAD_VARS"> </env>
    </environment_variables>
    <environment_variables SMP_PRESENT="TRUE">
      <env name="JSRUN_THREAD_VARS">-E OMP_NUM_THREADS=$ENV{OMP_NUM_THREADS} -E OMP_PROC_BIND=spread -E OMP_PLACES=threads -E OMP_STACKSIZE=256M</env>
    </environment_variables>
    <environment_variables compiler="ibm">
      <env name="RS_PER_NODE">2</env>
      <env name="CPU_PER_RS">21</env>
      <env name="GPU_PER_RS">0</env>
      <env name="LTC_PRT">cpu-cpu</env>
      <env name="NUM_RS">$SHELL{echo "2*((`./xmlquery --value TOTAL_TASKS` + `./xmlquery --value TASKS_PER_NODE` - 1)/`./xmlquery --value TASKS_PER_NODE`)"|bc}</env>
      <env name="SMT_MODE">$SHELL{echo "(`./xmlquery --value MAX_TASKS_PER_NODE`+41)/42"|bc}</env>
    </environment_variables>
    <environment_variables compiler="gnu">
      <env name="RS_PER_NODE">2</env>
      <env name="CPU_PER_RS">21</env>
      <env name="GPU_PER_RS">0</env>
      <env name="LTC_PRT">cpu-cpu</env>
      <env name="NUM_RS">$SHELL{echo "2*((`./xmlquery --value TOTAL_TASKS` + `./xmlquery --value TASKS_PER_NODE` - 1)/`./xmlquery --value TASKS_PER_NODE`)"|bc}</env>
      <env name="SMT_MODE">$SHELL{echo "(`./xmlquery --value MAX_TASKS_PER_NODE`+41)/42"|bc}</env>
    </environment_variables>
    <environment_variables compiler="pgi">
      <env name="RS_PER_NODE">2</env>
      <env name="CPU_PER_RS">21</env>
      <env name="GPU_PER_RS">0</env>
      <env name="LTC_PRT">cpu-cpu</env>
      <env name="NUM_RS">$SHELL{echo "2*((`./xmlquery --value TOTAL_TASKS` + `./xmlquery --value TASKS_PER_NODE` - 1)/`./xmlquery --value TASKS_PER_NODE`)"|bc}</env>
      <env name="SMT_MODE">$SHELL{echo "(`./xmlquery --value MAX_TASKS_PER_NODE`+41)/42"|bc}</env>
    </environment_variables>
    <environment_variables compiler="ibmgpu">
      <env name="RS_PER_NODE">6</env>
      <env name="CPU_PER_RS">7</env>
      <env name="GPU_PER_RS">1</env>
      <env name="LTC_PRT">gpu-cpu</env>
      <env name="NUM_RS">$SHELL{echo "6*((`./xmlquery --value TOTAL_TASKS` + `./xmlquery --value TASKS_PER_NODE` - 1)/`./xmlquery --value TASKS_PER_NODE`)"|bc}</env>
    </environment_variables>
    <environment_variables compiler="pgigpu">
      <env name="RS_PER_NODE">6</env>
      <env name="CPU_PER_RS">3</env>
      <env name="GPU_PER_RS">1</env>
      <env name="LTC_PRT">gpu-cpu</env>
      <env name="NUM_RS">$SHELL{echo "6*((`./xmlquery --value TOTAL_TASKS` + `./xmlquery --value TASKS_PER_NODE` - 1)/`./xmlquery --value TASKS_PER_NODE`)"|bc}</env>
    </environment_variables>
    <environment_variables compiler="gnugpu">
      <env name="RS_PER_NODE">6</env>
      <env name="CPU_PER_RS">7</env>
      <env name="GPU_PER_RS">1</env>
      <env name="LTC_PRT">gpu-cpu</env>
      <env name="NUM_RS">$SHELL{echo "6*((`./xmlquery --value TOTAL_TASKS` + `./xmlquery --value TASKS_PER_NODE` - 1)/`./xmlquery --value TASKS_PER_NODE`)"|bc}</env>
    </environment_variables>
</machine>

<default_run_suffix>
  <default_run_exe>${EXEROOT}/e3sm.exe </default_run_exe>
  <default_run_misc_suffix> >> e3sm.log.$LID 2>&amp;1 </default_run_misc_suffix>
</default_run_suffix>

</config_machines>
