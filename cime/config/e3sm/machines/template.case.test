#!/usr/bin/env python
{{ batchdirectives }}
"""
This is the system test submit script for CIME. This should only ever be called
by case.submit when on batch system. This script only exists as a way of providing
batch directives. Use case.submit from the command line to run your case.

DO NOT RUN THIS SCRIPT MANUALLY
"""
import os, sys
os.chdir( '{{ caseroot }}')

_LIBDIR = os.path.join("{{ cimeroot }}", "scripts", "Tools")
sys.path.append(_LIBDIR)

from standard_script_setup import *

from CIME.case import Case

import argparse

###############################################################################
def parse_command_line(args, description):
###############################################################################
    parser = argparse.ArgumentParser(
        usage="""\n{0} [<testname>] [--verbose]
OR
{0} --help

\033[1mEXAMPLES:\033[0m
    \033[1;32m# case.test SMS\033[0m
    > {0}
""".format(os.path.basename(args[0])),

description=description,

formatter_class=argparse.ArgumentDefaultsHelpFormatter
)

    CIME.utils.setup_standard_logging_options(parser)

    parser.add_argument("testname", nargs="?",default=None,
                        help="Name of the test to run, default is set in TESTCASE in env_test.xml")

    parser.add_argument("--caseroot",
                        help="Case directory to build")

    parser.add_argument("--reset", action="store_true",
                        help="Reset the case to its original state as defined by config_tests.xml")

    parser.add_argument("--skip-preview-namelist", action="store_true",
                        help="Skip calling preview-namelist during case.run")

    args = CIME.utils.parse_args_and_handle_standard_logging_options(args, parser)

    if args.caseroot is not None:
        os.chdir(args.caseroot)

    return args.caseroot, args.testname, args.reset, args.skip_preview_namelist

###############################################################################
def _main_func(description):
###############################################################################
    sys.argv.extend([] if "ARGS_FOR_SCRIPT" not in os.environ else os.environ["ARGS_FOR_SCRIPT"].split())

    caseroot, testname, reset, skip_pnl = parse_command_line(sys.argv, description)
    with Case(caseroot, read_only=False) as case:
        success = case.case_test(testname=testname, reset=reset, skip_pnl=skip_pnl)

    sys.exit(0 if success else 1)

if (__name__ == "__main__"):
    _main_func(__doc__)
