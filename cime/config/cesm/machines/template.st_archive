#!/usr/bin/env python
# Batch system directives
{{ batchdirectives }}

"""
template to create a case short term archiving script. This should only ever be called
by case.submit when on batch system. This script only exists as a way of providing
batch directives. Use case.submit from the command line to run your case.

DO NOT RUN THIS SCRIPT MANUALLY
"""

import sys, os, time
os.chdir( '{{ caseroot }}')

_LIBDIR = os.path.join("{{ cimeroot }}", "scripts", "Tools")
sys.path.append(_LIBDIR)

from standard_script_setup          import *
from CIME.case import Case

logger = logging.getLogger(__name__)


###############################################################################
def parse_command_line(args, description):
###############################################################################

    parser = argparse.ArgumentParser(
        usage="""\n{0} [--verbose]
OR
{0} --help

\033[1mEXAMPLES:\033[0m
    \033[1;32m# case.run SMS\033[0m
    > {0}
""".format(os.path.basename(args[0])),

description=description,

formatter_class=argparse.ArgumentDefaultsHelpFormatter
)

    CIME.utils.setup_standard_logging_options(parser)

    parser.add_argument("--caseroot", default=os.getcwd(),
                        help="Case directory to build")

    parser.add_argument("--no-incomplete-logs", default=False, action="store_true",
                        help="Whether to archive logs which have been completed or not")

    parser.add_argument("--copy-only", default=False, action="store_true",
                        help="Copy instead of move the files to be archived")

    args = CIME.utils.parse_args_and_handle_standard_logging_options(args, parser)

    if args.caseroot is not None:
        os.chdir(args.caseroot)

    return args.caseroot, args.no_incomplete_logs, args.copy_only

###############################################################################
def _main_func(description):
###############################################################################
    caseroot, no_incomplete_logs, copy_only = parse_command_line(sys.argv, description)
    with Case(caseroot, read_only=False) as case:
        success = case.case_st_archive(archive_incomplete_logs=not no_incomplete_logs, copy_only=copy_only)

    sys.exit(0 if success else 1)

###############################################################################

if __name__ == "__main__":
    _main_func(__doc__)
