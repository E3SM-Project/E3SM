#!/usr/bin/env python

"""
Copies current component history files into baselines
"""

from standard_script_setup import *

from CIME.case       import Case
from CIME.hist_utils import generate_baseline

###############################################################################
def parse_command_line(args, description):
###############################################################################
    parser = argparse.ArgumentParser(
        usage="""\n%s [<casedir>] [--verbose]
OR
%s --help
OR
%s --test

\033[1mEXAMPLES:\033[0m
    \033[1;32m# Generate baselines \033[0m
    > %s
""" % ((os.path.basename(args[0]), ) * 4),
        description=description,
        formatter_class=argparse.ArgumentDefaultsHelpFormatter
    )

    CIME.utils.setup_standard_logging_options(parser)

    parser.add_argument("caseroot", nargs="?", default=os.getcwd(),
                        help="Case directory")

    parser.add_argument("-b", "--baseline-dir",
                        help="Use custom baseline dir")

    parser.add_argument("-o", "--allow-baseline-overwrite", action="store_true",
                        help="By default an attempt to overwrite an existing baseline directory "
                        "will raise an error. Specifying this option allows "
                        "existing baseline directories to be silently overwritten.")

    args = parser.parse_args(args[1:])

    CIME.utils.handle_standard_logging_options(args)

    return args.caseroot, args.baseline_dir, args.allow_baseline_overwrite

###############################################################################
def _main_func(description):
###############################################################################
    caseroot, baseline_dir, allow_baseline_overwrite = \
        parse_command_line(sys.argv, description)
    with Case(caseroot) as case:
        success, comments = generate_baseline(case, baseline_dir,
                                              allow_baseline_overwrite)
        print comments

    sys.exit(0 if success else 1)

if __name__ == "__main__":
    _main_func(__doc__)
