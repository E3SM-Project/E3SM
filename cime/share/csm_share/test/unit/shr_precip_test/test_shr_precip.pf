module test_shr_precip

  ! Tests of shr_precip_mod

  use pfunit_mod
  use shr_precip_mod
  use shr_kind_mod, only : r8 => SHR_KIND_R8
  use shr_const_mod, only : SHR_CONST_TKFRZ

  implicit none

  @TestCase
  type, extends(TestCase) :: TestShrPrecip
   contains
     procedure :: setUp
     procedure :: tearDown
  end type TestShrPrecip

  real(r8), parameter :: tol = 1.e-13_r8

contains

  subroutine setUp(this)
    class(TestShrPrecip), intent(inout) :: this
  end subroutine setUp

  subroutine tearDown(this)
    class(TestShrPrecip), intent(inout) :: this
  end subroutine tearDown

  ! ------------------------------------------------------------------------
  ! Tests of shr_precip_partition_rain_snow_ramp
  ! ------------------------------------------------------------------------

  @Test
  subroutine partition_rain_snow_ramp_allSnow(this)
    class(TestShrPrecip), intent(inout) :: this
    real(r8) :: frac_rain

    call shr_precip_partition_rain_snow_ramp(273._r8, frac_rain)
    @assertEqual(0._r8, frac_rain)
  end subroutine partition_rain_snow_ramp_allSnow

  @Test
  subroutine partition_rain_snow_ramp_allRain(this)
    class(TestShrPrecip), intent(inout) :: this
    real(r8) :: frac_rain

    call shr_precip_partition_rain_snow_ramp(276._r8, frac_rain)
    @assertEqual(1._r8, frac_rain)
  end subroutine partition_rain_snow_ramp_allRain

  @Test
  subroutine partition_rain_snow_ramp_mixture(this)
    class(TestShrPrecip), intent(inout) :: this
    real(r8) :: frac_rain

    call shr_precip_partition_rain_snow_ramp(SHR_CONST_TKFRZ + 1.5_r8, frac_rain)
    @assertEqual(0.75_r8, frac_rain, tolerance=tol)
  end subroutine partition_rain_snow_ramp_mixture

end module test_shr_precip
