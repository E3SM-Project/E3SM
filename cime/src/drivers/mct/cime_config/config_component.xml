<?xml version="1.0"?>

<?xml-stylesheet type="text/xsl" href="config_compsets.xsl" ?>

<entry_id version="2.0">

<!-- The list of component classes that this coupler/driver knows how
     to deal with.  Stub and data models for each component class
     should be provided by the driver. This list should follow the same order
     as compset longnames follows -->

  <entry id="COMP_CLASSES">
    <type>char</type>
    <default_value>CPL,ATM,LND,ICE,OCN,ROF,GLC,WAV,ESP</default_value>
    <file>env_case.xml</file>
    <group>case_comp</group>
    <desc>List of component classes supported by this driver</desc>
  </entry>

  <entry id="COMP_CPL">
    <type>char</type>
    <valid_values>cpl</valid_values>
    <default_value>cpl</default_value>
    <group>case_comp</group>
    <file>env_case.xml</file>
    <desc>Name of coupling component</desc>
  </entry>

  <!-- ===================================================================== -->
  <!-- master configuration file that specifies all relevant filenames and -->
  <!-- and directories to configure a case -->
  <!-- ===================================================================== -->

  <entry id="FILES_CONFIG_SPEC">
    <type>char</type>
    <default_value>$CIMEROOT/config_files.xml</default_value>
    <group>case_def</group>
    <file>env_case.xml</file>
    <desc> master configuration file that specifies all relevant filenames
    and directories to configure a case</desc>
  </entry>

  <!-- ===================================================================== -->
  <!-- definitions case directories -->
  <!-- ===================================================================== -->

  <entry id="CASEROOT">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>case_def</group>
    <file>env_case.xml</file>
    <desc>full pathname of case</desc>
  </entry>

  <entry id="NONLOCAL">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>case_def</group>
    <file>env_case.xml</file>
    <desc>user is not on the requested machine</desc>
  </entry>

  <entry id="CASETOOLS">
    <type>char</type>
    <default_value>$CASEROOT/Tools</default_value>
    <group>case_der</group>
    <file>env_case.xml</file>
    <desc>Case Tools directory location (derived variable, not in namelists</desc>
  </entry>

  <entry id="CASEBUILD">
    <type>char</type>
    <default_value>$CASEROOT/Buildconf</default_value>
    <group>case_der</group>
    <file>env_case.xml</file>
    <desc>Buildconf directory location (derived variable not in namelist)</desc>
  </entry>

  <entry id="SCRIPTSROOT">
    <type>char</type>
    <default_value>$CIMEROOT/scripts</default_value>
    <group>case_der</group>
    <file>env_case.xml</file>
    <desc>Scripts root directory location (setup automatically to $CIMEROOT/scripts- DO NOT EDIT)</desc>
  </entry>

  <entry id="CIMEROOT">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>case_def</group>
    <file>env_case.xml</file>
    <desc>full pathname of CIME source root directory</desc>
  </entry>

  <entry id="SRCROOT">
    <type>char</type>
    <default_value>$CIMEROOT/..</default_value>
    <group>case_def</group>
    <file>env_case.xml</file>
    <desc>full pathname of source root directory</desc>
  </entry>

  <entry id="UTILROOT">
    <type>char</type>
    <default_value>$CIMEROOT/scripts/Tools</default_value>
    <group>case_der</group>
    <file>env_case.xml</file>
    <desc>Scripts root utils directory location (setup automatically to $CIMEROOT/scripts/Tools - DO NOT EDIT)</desc>
  </entry>

  <!-- ===================================================================== -->
  <!-- definitions case -->
  <!-- ===================================================================== -->

  <entry id="CASE">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>case_def</group>
    <file>env_case.xml</file>
    <desc>case name</desc>
  </entry>

  <entry id="CASESTR">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_desc</group>
    <file>env_run.xml</file>
    <desc>case description</desc>
  </entry>

  <entry id="COMPSET">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>case_last</group>
    <file>env_case.xml</file>
    <desc>Component set long name (for documentation only - DO NOT EDIT)</desc>
  </entry>

  <entry id="GRID">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>Model grid - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="SUPPORTED_BY">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>case_def</group>
    <file>env_case.xml</file>
    <desc>current machine name support contact</desc>
  </entry>

  <entry id="USER">
    <type>char</type>
    <default_value>$ENV{USER}</default_value>
    <group>case_desc</group>
    <file>env_case.xml</file>
    <desc>case user name</desc>
  </entry>

  <entry id="REALUSER">
    <type>char</type>
    <default_value>$ENV{USER}</default_value>
    <group>case_desc</group>
    <file>env_case.xml</file>
    <desc>username of user who created case</desc>
  </entry>

  <!-- ===================================================================== -->
  <!-- definitions runtimes -->
  <!-- ===================================================================== -->

  <entry id="RUN_TYPE">
    <type>char</type>
    <valid_values>startup,hybrid,branch</valid_values>
    <default_value>startup</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Determines the model run initialization type.
      This setting is only important for the initial run of a production run when the
      CONTINUE_RUN variable is set to FALSE.  After the initial run, the CONTINUE_RUN
      variable is set to TRUE, and the model restarts exactly using input
      files in a case, date, and bit-for-bit continuous fashion.
      Default: startup.
      -- In a startup run (the default), all components are initialized
      using baseline states.  These baseline states are set independently by
      each component and can include the use of restart files, initial
      files, external observed data files, or internal initialization (i.e.,
      a cold start). In a startup run, the coupler sends the start date to
      the components at initialization. In addition, the coupler does not
      need an input data file.  In a startup initialization, the ocean model
      does not start until the second ocean coupling (normally the second
      day).
      -- In a branch run, all components are initialized using a consistent
      set of restart files from a previous run (determined by the
      RUN_REFCASE and RUN_REFDATE variables in env_run.xml).  The case name
      is generally changed for a branch run, although it does not have to
      be. In a branch run, setting RUN_STARTDATE is ignored because the
      model components obtain the start date from their restart datasets.
      Therefore, the start date cannot be changed for a branch run. This is
      the same mechanism that is used for performing a restart run (where
      CONTINUE_RUN is set to TRUE in the env_run.xml) Branch runs are
      typically used when sensitivity or parameter studies are required, or
      when settings for history file output streams need to be modified
      while still maintaining bit-for-bit reproducibility. Under this
      scenario, the new case is able to produce an exact bit-for-bit restart
      in the same manner as a continuation run IF no source code or
      component namelist inputs are modified. All models use restart files
      to perform this type of run.  RUN_REFCASE and RUN_REFDATE are required
      for branch runs.
      To set up a branch run, locate the restart tar file or restart
      directory for RUN_REFCASE and RUN_REFDATE from a previous run, then
      place those files in the RUNDIR directory.
      --- In a hybrid run the model is initialized as a startup, BUT uses
      initialization datasets FROM A PREVIOUS case.  This
      is somewhat analogous to a branch run with relaxed restart
      constraints.  A hybrid run allows users to bring together combinations
      of initial/restart files from a previous case (specified by
      RUN_REFCASE) at a given model output date (specified by
      RUN_REFDATE). Unlike a branch run, the starting date of a hybrid run
      (specified by RUN_STARTDATE) can be modified relative to the reference
      case. In a hybrid run, the model does not continue in a bit-for-bit
      fashion with respect to the reference case. The resulting climate,
      however, should be continuous provided that no model source code or
      namelists are changed in the hybrid run.  In a hybrid initialization,
      the ocean model does not start until the second ocean coupling
      (normally the second day), and the coupler does a cold start without
      a restart file.
    </desc>
  </entry>

  <entry id="RUN_REFDIR">
    <type>char</type>
    <default_value>ccsm4_init</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Reference directory containing RUN_REFCASE data - used for hybrid or branch runs
    </desc>
  </entry>

  <entry id="RUN_REFCASE">
    <type>char</type>
    <default_value>case.std</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Reference case for hybrid or branch runs
    </desc>
  </entry>

  <entry id="RUN_REFDATE">
    <type>char</type>
    <default_value>0001-01-01</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Reference date for hybrid or branch runs (yyyy-mm-dd)
    </desc>
  </entry>

  <entry id="RUN_REFTOD">
    <type>char</type>
    <default_value>00000</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Reference time of day (seconds) for hybrid or branch runs (sssss)
    </desc>
  </entry>

  <entry id="GET_REFCASE">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Flag for automatically prestaging the refcase restart dataset.
      If TRUE, then the refcase data is prestaged into the executable directory
    </desc>
  </entry>

  <entry id="RUN_STARTDATE">
    <type>char</type>
    <default_value>0001-01-01</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Run start date (yyyy-mm-dd). Only used for startup or hybrid runs.
    </desc>
  </entry>

  <entry id="START_TOD">
    <type>integer</type>
    <default_value>0</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Run start time-of-day
    </desc>
  </entry>

  <entry id="STOP_OPTION">
    <type>char</type>
    <valid_values>none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,nmonths,nmonth,nyears,nyear,date,ifdays0,end</valid_values>
    <default_value>ndays</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Sets the run length along with STOP_N and STOP_DATE
    </desc>
  </entry>

  <entry id="STOP_N">
    <type>integer</type>
    <default_value>5</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Provides a numerical count for $STOP_OPTION.
    </desc>
  </entry>

  <entry id="STOP_DATE">
    <type>integer</type>
    <default_value>-999</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Alternative date yyyymmdd date option, sets the run length with STOP_OPTION and STOP_N
      negative value implies off
    </desc>
  </entry>

  <entry id="REST_OPTION">
    <type>char</type>
    <valid_values>none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,nmonths,nmonth,nyears,nyear,date,ifdays0,end</valid_values>
    <default_value>$STOP_OPTION</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      sets frequency of model restart writes (same options as STOP_OPTION)
    </desc>
  </entry>

  <entry id="REST_N">
    <type>integer</type>
    <default_value>$STOP_N</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      sets model restart writes with REST_OPTION and REST_DATE
    </desc>
  </entry>

  <entry id="REST_DATE">
    <type>char</type>
    <default_value>$STOP_DATE</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Alternative date in yyyymmdd format
      sets model restart write date with REST_OPTION and REST_N
    </desc>
  </entry>

  <entry id="PAUSE_OPTION">
    <type>char</type>
    <valid_values>none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,nmonths,nmonth,nyears,nyear</valid_values>
    <default_value>never</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Sets the pause frequency along with PAUSE_N
    </desc>
  </entry>

  <entry id="PAUSE_N">
    <type>integer</type>
    <default_value>0</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Provides a numerical count for $PAUSE_OPTION.
    </desc>
  </entry>

  <entry id="PAUSE_ACTIVE">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Pause the model at times specified by PAUSE_OPTION and PAUSE_N.
      Components 'pause' by writing a restart file.
    </desc>
    <values>
      <value compclass="ATM">FALSE</value>
      <value compclass="CPL">FALSE</value>
      <value compclass="OCN">FALSE</value>
      <value compclass="WAV">FALSE</value>
      <value compclass="GLC">FALSE</value>
      <value compclass="ICE">FALSE</value>
      <value compclass="ROF">FALSE</value>
      <value compclass="LND">FALSE</value>
    </values>
  </entry>

  <entry id="BARRIER_N">
    <type>char</type>
    <default_value>1</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Sets periodic model barriers with BARRIER_OPTION and BARRIER_DATE for synchronization
    </desc>
  </entry>

  <entry id="BARRIER_DATE">
    <type>char</type>
    <default_value>-999</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      Alternative date in yyyymmdd format
      sets periodic model barriers with BARRIER_OPTION and BARRIER_N for synchronization
    </desc>
  </entry>

  <entry id="ESP_RUN_ON_PAUSE">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      ESP component runs after driver 'pause cycle' If any component
      'pauses' (see PAUSE_OPTION,
      PAUSE_N and PAUSE_ACTIVE_XXX XML variables),
      the ESP component (if present) will be run to process the
      component 'pause' (restart) files and set any required 'resume'
      signals.  If true, esp_cpl_dt and esp_cpl_offset settings are
      ignored.  default: false
    </desc>
  </entry>

  <entry id="CONTINUE_RUN">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>
      A setting of TRUE implies a continuation run
      When you first begin a branch, hybrid or startup run, CONTINUE_RUN
      must be set to FALSE. When you successfully run and get a restart
      file, you will need to change CONTINUE_RUN to TRUE for the remainder
      of your run. This variable determines if the run is a restart run.
      Set to FALSE when initializing a startup, branch or hybrid case.
      Set to TRUE when continuing a run.
    </desc>
  </entry>

  <entry id="RESUBMIT">
    <type>integer</type>
    <default_value>0</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>If RESUBMIT is greater than 0, then case will automatically resubmit
    Enables the model to automatically resubmit a new run.  To get
    multiple runs, set RESUBMIT greater than 0, then RESUBMIT will be
    decremented and the case will be resubmitted.  The case will stop automatically
    resubmitting when the RESUBMIT value reaches 0.
    Long runs can easily outstrip supercomputer queue time limits. For
    this reason, a case is usually run as a series of jobs, each
    restarting where the previous finished.
    </desc>
  </entry>

  <entry id="RESUBMIT_SETS_CONTINUE_RUN">
    <type>logical</type>
    <default_value>TRUE</default_value>
    <group>run_begin_stop_restart</group>
    <file>env_run.xml</file>
    <desc>This flag controls whether the RESUBMIT flag causes
      CONTINUE_RUN to toggle from FALSE to TRUE.  The default is
      TRUE.  This flag might be used in conjunction with COMP_RUN_BARRIERS for
      timing tests.
    </desc>
  </entry>

 <entry id="JOB_IDS">
   <type>char</type>
   <default_value></default_value>
   <group>run_begin_stop_restart</group>
   <file>env_run.xml</file>
   <desc>List of job ids for most recent case.submit</desc>
 </entry>

  <!-- ===================================================================== -->
  <!-- definitions archive -->
  <!-- ===================================================================== -->

  <entry id="DOUT_S">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>run_data_archive</group>
    <file>env_run.xml</file>
    <desc>Logical to turn on short term archiving.
    If TRUE, short term archiving will be turned on.</desc>
  </entry>

  <entry id="SYSLOG_N">
    <type>integer</type>
    <default_value>900</default_value>
    <group>run_data_archive</group>
    <file>env_run.xml</file>
    <desc>system workload snapshot frequency (in seconds, if greater than 0; disabled otherwise)</desc>
  </entry>

  <!-- ===================================================================== -->
  <!-- definitions machines specific -->
  <!-- ===================================================================== -->

  <entry id="environment_variables">
     <type>char</type>
     <default_value>UNSET</default_value>
     <group>config_batch</group>
     <file>env_mach_specific.xml</file>
     <desc>The environment variables that will be loaded for this machine</desc>
  </entry>

  <entry id="BATCH_SYSTEM">
     <type>char</type>
     <default_value>none</default_value>
     <valid_values>nersc_slurm,lc_slurm,moab,pbs,lsf,slurm,cobalt,cobalt_theta,none</valid_values>
     <group>config_batch</group>
     <file>env_batch.xml</file>
     <desc>The batch system type to use for this machine.</desc>
  </entry>

  <entry id="env">
     <type>char</type>
     <default_value>UNSET</default_value>
     <group>config_batch</group>
     <file>env_mach_specific.xml</file>
     <desc>The individual environment variable entry for config_machines</desc>
  </entry>

  <entry id="limits">
     <type>char</type>
     <default_value>UNSET</default_value>
     <group>config_batch</group>
     <file>env_mach_specific.xml</file>
     <desc>The limits tag</desc>
  </entry>

  <entry id="limit">
     <type>char</type>
     <default_value>UNSET</default_value>
     <group>config_batch</group>
     <file>env_mach_specific.xml</file>
     <desc>The individual limit variable</desc>
  </entry>

  <!-- ===================================================================== -->
  <!-- definitions batch -->
  <!-- ===================================================================== -->

  <entry id="PERL5LIB">
    <type>char</type>
    <default_value></default_value>
    <group>build_derived</group>
    <file>env_build.xml</file>
    <desc>Perl 5 library directory</desc>
  </entry>



  <!-- ===================================================================== -->
  <!-- definitions build -->
  <!-- ===================================================================== -->

  <entry id="CIME_OUTPUT_ROOT">
    <type>char</type>
    <valid_values></valid_values>
    <default_value>UNSET</default_value>
    <group>build_def</group>
    <file>env_build.xml</file>
    <desc>Output root directory for each machine.
		Base directory for build and run directories.
    </desc>
  </entry>

  <entry id="EXEROOT">
    <type>char</type>
    <valid_values></valid_values>
    <default_value>$CIME_OUTPUT_ROOT/$CASE/bld</default_value>
    <group>build_def</group>
    <file>env_build.xml</file>
    <desc>Case executable root directory.
    (executable is $EXEROOT/$MODEL.exe, component libraries are in $EXEROOT/lib)
    This is where the model builds its executable and by default runs the executable.
    Note that EXEROOT needs to have enough disk space for the experimental configuration
    requirements. As an example, a model run can produce more than a terabyte of
    data during a 100-year run, so you should set EXEROOT to scratch or
    tmp space and frequently back up the data to a long term archiving storage device
    For a supported machine, EXEROOT is set in $CIMEROOT/machines/config_machines.xml.
    For a userdefined machine, EXEROOT must explicitly be set it in env_build.xml.</desc>
  </entry>

  <entry id="OS">
    <type>char</type>
    <valid_values></valid_values>
    <default_value>USERDEFINED_required_macros</default_value>
    <group>build_macros</group>
    <file>env_build.xml</file>
    <desc>Operating system - DO NOT EDIT UNLESS for userdefined machine - ignored once Macros has been created.</desc>
  </entry>

  <entry id="COMPILER">
    <type>char</type>
    <valid_values></valid_values>
    <default_value></default_value>
    <group>build_macros</group>
    <file>env_build.xml</file>
    <desc>Machine compiler (must match one the supported compilers)
    Set in $CIMEROOT/machines/config_machines.xml for each supported machine.
    Must be explicitly set in env_build.xml for userdefined machine.</desc>
  </entry>

  <entry id="MPILIB">
    <type>char</type>
    <valid_values></valid_values>
    <default_value>USERDEFINED_required_macros</default_value>
    <group>build_macros</group>
    <file>env_build.xml</file>
    <desc>mpi library (must match one of the supported libraries) -
    ignored once Macros has been created
    Set in $CIMEROOT/machines/config_machines.xml for each supported machine.
    Must be explicitly set in env_build.xml for userdefined machine.</desc>
  </entry>

  <entry id="CALENDAR">
    <type>char</type>
    <valid_values>NO_LEAP,GREGORIAN</valid_values>
    <default_value>NO_LEAP</default_value>
    <group>build_def</group>
    <file>env_build.xml</file>
    <desc>calendar type</desc>
  </entry>

  <entry id="COMP_INTERFACE">
    <type>char</type>
    <valid_values>mct,nuopc,moab</valid_values>
    <default_value>mct</default_value>
    <group>build_def</group>
    <file>env_build.xml</file>
    <desc>use MCT component interface</desc>
  </entry>

  <entry id="USE_ESMF_LIB">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>build_def</group>
    <file>env_build.xml</file>
    <desc>TRUE implies using the ESMF library specified by ESMF_LIBDIR or ESMFMKFILE</desc>
  </entry>

  <entry id="DEBUG">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>build_def</group>
    <file>env_build.xml</file>
    <desc>TRUE implies turning on run and compile time debugging
      Flag to turn on debugging for run time and compile time.
      If TRUE, compile-time debugging flags are activated that you can use to verify
      software robustness, such as bounds checking.
      Important:: On IBM machines, floating point trapping is not activated for production
      runs (i.e., non-DEBUG), due to performance penalties associated with turning on these flags.</desc>
  </entry>

  <entry id="FORCE_BUILD_SMP">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>build_def</group>
    <file>env_build.xml</file>
    <desc>TRUE implies always build model for openmp capability
      If FALSE, component libraries are built with OpenMP capability only if
      the NTHREADS_ setting for that component is greater than 1 in env_mach_pes.xml.
      If TRUE, the component libraries are always built with OpenMP capability.</desc>
  </entry>

  <entry id="SMP_PRESENT">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>build_def</group>
    <file>env_build.xml</file>
    <desc>TRUE implies that at least one of the components is built threaded (DO NOT EDIT)</desc>
  </entry>

  <entry id="USE_PETSC">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>build_def</group>
    <file>env_build.xml</file>
    <desc>TRUE implies linking to the PETSc library - set
    automatically by XXX_USE_PETSC options (do not edit). Flag to turn
    on linking to the PETSc library. Currently this is used by
    CLM. This is currently only supported for certain machines.</desc>
  </entry>

  <entry id="USE_ALBANY">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>build_def</group>
    <file>env_build.xml</file>
    <desc>TRUE implies linking to the Albany library - set
    automatically by XXX_USE_ALBANY options (do not edit). Flag to
    turn on linking to the Albany library. Currently this is used by
    MALI. Note that Albany is a C++ library, so setting this
    variable to TRUE will involve the inclusion of C++ code in the
    MALI executable. This is currently only supported for certain
    machines.</desc>
  </entry>

  <entry id="USE_MOAB">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>build_def</group>
    <file>env_build.xml</file>
    <desc>TRUE implies linking to the MOAB library</desc>
  </entry>

  <entry id="USE_TRILINOS">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>build_def</group>
    <file>env_build.xml</file>
    <desc>TRUE implies linking to the trilinos library - set automatically by XXX_USE_TRILINOS options (do not edit)
      Flag to turn on linking to the trilinos library. Currently this is
      used by CISM. Note that trilinos is a C++ library, so setting this
      variable to TRUE will involve the inclusion of C++ code in the model
      executable. This is currently only supported for certain machines.</desc>
  </entry>

  <entry id="GMAKE">
    <type>char</type>
    <valid_values></valid_values>
    <default_value>gmake</default_value>
    <group>build_def</group>
    <file>env_run.xml</file>
    <desc>GNU make command</desc>
  </entry>

  <entry id="GMAKE_J">
    <type>integer</type>
    <valid_values></valid_values>
    <default_value>1</default_value>
    <group>build_def</group>
    <file>env_run.xml</file>
    <desc>Number of processors for gmake</desc>
  </entry>

  <entry id="BUILD_COMPLETE">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>build_status</group>
    <file>env_build.xml</file>
    <desc>Status output: if TRUE, models have been built successfully. (DO NOT EDIT)></desc>
  </entry>

  <entry id="SMP_BUILD">
    <type>char</type>
    <valid_values></valid_values>
    <default_value>0</default_value>
    <group>build_status</group>
    <file>env_build.xml</file>
    <desc>Status: smp status of previous build, coded string. (DO NOT EDIT)</desc>
  </entry>

  <entry id="SMP_VALUE">
    <type>char</type>
    <valid_values></valid_values>
    <default_value>0</default_value>
    <group>build_status</group>
    <file>env_build.xml</file>
    <desc>Status: smp status of current case, coded string (DO NOT EDIT)</desc>
  </entry>

  <entry id="NINST_BUILD">
    <type>char</type>
    <valid_values></valid_values>
    <default_value>0</default_value>
    <group>build_status</group>
    <file>env_build.xml</file>
    <desc>Status: ninst status of previous build, coded string. (DO NOT EDIT)></desc>
  </entry>

  <entry id="NINST_VALUE">
    <type>char</type>
    <valid_values></valid_values>
    <default_value>0</default_value>
    <group>build_status</group>
    <file>env_build.xml</file>
    <desc>Status: ninst status of current case, coded string (DO NOT EDIT)</desc>
  </entry>

  <entry id="BUILD_STATUS">
    <type>integer</type>
    <valid_values>0,1,2</valid_values>
    <default_value>0</default_value>
    <group>build_status</group>
    <file>env_build.xml</file>
    <desc>Status: of prior build. (DO NOT EDIT)</desc>
  </entry>

  <entry id="OBJROOT">
    <type>char</type>
    <valid_values></valid_values>
    <default_value>$EXEROOT</default_value>
    <group>build_derived</group>
    <file>env_build.xml</file>
    <desc>case build directory (set automatically to $EXEROOT, - DO NOT EDIT)</desc>
  </entry>

  <entry id="LIBROOT">
    <type>char</type>
    <valid_values></valid_values>
    <default_value>$EXEROOT/lib</default_value>
    <group>build_derived</group>
    <file>env_build.xml</file>
    <desc>case lib directory (set automatically to $EXEROOT/lib - DO NOT EDIT)</desc>
  </entry>

  <entry id="INCROOT">
    <type>char</type>
    <valid_values></valid_values>
    <default_value>$EXEROOT/lib/include</default_value>
    <group>build_derived</group>
    <file>env_build.xml</file>
    <desc>case lib include directory (set automatically to $EXEROOT/lib/include - DO NOT EDIT)</desc>
  </entry>

  <entry id="SHAREDLIBROOT">
    <type>char</type>
    <valid_values></valid_values>
    <default_value>$EXEROOT</default_value>
    <group>build_derived</group>
    <file>env_build.xml</file>
    <desc>Shared library root, (set automatically to $EXEROOT - DO NOT EDIT)</desc>
  </entry>

  <!-- ===================================================================== -->
  <!-- definitions performance -->
  <!-- ===================================================================== -->

  <entry id="CHECK_TIMING">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>TRUE</default_value>
    <group>run_flags</group>
    <file>env_run.xml</file>
    <desc>logical to diagnose model timing at the end of the run</desc>
  </entry>

  <entry id="PROFILE_PAPI_ENABLE">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>run_flags</group>
    <file>env_run.xml</file>
    <desc>Enables the papi hardware counters in gptl
    The papi library must be included in the build step for
    this to work.</desc>
  </entry>

  <entry id="ESMF_LOGFILE_KIND">
    <type>char</type>
    <valid_values>ESMF_LOGKIND_SINGLE,ESMF_LOGKIND_MULTI,ESMF_LOGKIND_MULTI_ON_ERROR,ESMF_LOGKIND_NONE</valid_values>
    <default_value>ESMF_LOGKIND_NONE</default_value>
    <group>run_flags</group>
    <file>env_run.xml</file>
    <desc>
      Determines what ESMF log files (if any) are generated when
          USE_ESMF_LIB is TRUE.
      ESMF_LOGKIND_SINGLE: Use a single log file, combining messages from
          all of the PETs. Not supported on some platforms.
      ESMF_LOGKIND_MULTI: Use multiple log files -- one per PET.
      ESMF_LOGKIND_NONE: Do not issue messages to a log file.
      By default, no ESMF log files are generated.
    </desc>
  </entry>

  <entry id="COMP_RUN_BARRIERS">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>run_flags</group>
    <file>env_run.xml</file>
    <desc>Turns on component barriers for component timing.
	  This variable is for testing and debugging only and should never
	  be set for a production run.
    </desc>
  </entry>

  <entry id="COST_PES">
    <type>integer</type>
    <default_value>0</default_value>
    <group>mach_pes_last</group>
    <file>env_mach_pes.xml</file>
    <desc>pes or cores used relative to MAX_MPITASKS_PER_NODE for accounting (0 means TOTALPES is valid)</desc>
  </entry>

  <!-- ===================================================================== -->
  <!-- definitions grid -->
  <!-- ===================================================================== -->

  <entry id="ATM_GRID">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>atmosphere grid - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="ATM_NX">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of atmosphere cells in i direction - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="ATM_NY">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of atmosphere cells in j direction - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="LND_GRID">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>land grid - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="LND_NX">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of land cells in i direction - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="LND_NY">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of land cells in j direction - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="OCN_GRID">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>ocn grid - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="OCN_NX">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of ocn cells in i direction - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="OCN_NY">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of ocn cells in j direction - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="ICE_GRID">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>ice grid (must equal ocn grid) - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="ICE_NX">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of ice cells in i direction - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="ICE_NY">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of ice cells in j direction - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="ICE_NCAT">
    <type>integer</type>
    <default_value>1</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of ice thickness categories - DO NOT EDIT (set by CICE configure)</desc>
  </entry>

  <entry id="ROF_GRID">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>river runoff (rof) grid</desc>
  </entry>

  <entry id="ROF_NX">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of rof cells in i direction - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="ROF_NY">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of rof cells in j direction - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="GLC_GRID">
    <type>char</type>
    <valid_values>gland20,gland10,gland5,gland5UM,gland4,mpas.gis20km,mpas.ais20km,null</valid_values>
    <default_value>gland5UM</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>glacier (glc) grid - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="GLC_NX">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of glc cells in i direction - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="GLC_NY">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of glc cells in j direction - DO NOT EDIT (for experts only)</desc>
  </entry>


  <entry id="WAV_GRID">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>wave model (wav) grid</desc>
  </entry>

  <entry id="WAV_NX">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of wav cells in i direction - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="WAV_NY">
    <type>integer</type>
    <default_value>0</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>number of wav cells in j direction - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="MASK_GRID">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>build_grid</group>
    <file>env_build.xml</file>
    <desc>grid mask - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="PTS_MODE">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>Operate on only a single point of the global grid  - DO NOT EDIT (for experts only)</desc>
  </entry>

  <entry id="PTS_LAT">
    <type>real</type>
    <default_value>-999.99</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>Latitude to find nearest points for points mode (only used if PTS_MODE is TRUE)</desc>
  </entry>

  <entry id="PTS_LON">
    <type>real</type>
    <default_value>-999.99</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>Longitude to find nearest points for points mode (only used if PTS_MODE is TRUE)</desc>
  </entry>

  <!-- ======================================================================= -->
  <!--  DOMAIN FILES (drv)                                          -->
  <!-- ======================================================================= -->

  <entry id="ATM_DOMAIN_FILE">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>atm domain file</desc>
  </entry>

  <entry id="ATM_DOMAIN_PATH">
    <type>char</type>
    <default_value>$DIN_LOC_ROOT/share/domains</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>path of atm domain file</desc>
  </entry>

  <entry id="LND_DOMAIN_FILE">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>lnd domain file</desc>
  </entry>

  <entry id="LND_DOMAIN_PATH">
    <type>char</type>
    <default_value>$DIN_LOC_ROOT/share/domains</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>path of lnd domain file</desc>
  </entry>

  <entry id="ROF_DOMAIN_FILE">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>rof domain file</desc>
  </entry>

  <entry id="ROF_DOMAIN_PATH">
    <type>char</type>
    <default_value>$DIN_LOC_ROOT/share/domains</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>path of rof domain file</desc>
  </entry>

  <entry id="WAV_DOMAIN_FILE">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>wav domain file</desc>
  </entry>

  <entry id="WAV_DOMAIN_PATH">
    <type>char</type>
    <default_value>$DIN_LOC_ROOT/share/domains</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>path of wav domain file</desc>
  </entry>

  <entry id="ICE_DOMAIN_FILE">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>ice domain file</desc>
  </entry>

  <entry id="ICE_DOMAIN_PATH">
    <type>char</type>
    <default_value>$DIN_LOC_ROOT/share/domains</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>path of ice domain file</desc>
  </entry>

  <entry id="OCN_DOMAIN_FILE">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>ocn domain file</desc>
  </entry>

  <entry id="OCN_DOMAIN_PATH">
    <type>char</type>
    <default_value>$DIN_LOC_ROOT/share/domains</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>path of ocn domain file</desc>
  </entry>

  <entry id="GLC_DOMAIN_FILE">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>glc domain file</desc>
  </entry>

  <entry id="GLC_DOMAIN_PATH">
    <type>char</type>
    <default_value>$DIN_LOC_ROOT/share/domains</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>path of glc domain file</desc>
  </entry>

  <!--- map files -->
  <!--- comment out map type for now, tcraig 3/25/13 -->

  <entry id="ATM2OCN_FMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>atm2ocn flux mapping file</desc>
  </entry>

  <entry id="ATM2OCN_FMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>X</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>atm2ocn flux mapping file decomp type</desc>
  </entry>

  <entry id="ATM2OCN_SMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>atm2ocn state mapping file</desc>
  </entry>

  <entry id="ATM2OCN_SMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>X</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>atm2ocn state mapping file decomp type</desc>
  </entry>

  <entry id="ATM2OCN_VMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>atm2ocn vector mapping file</desc>
  </entry>

  <entry id="ATM2OCN_VMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>X</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>atm2ocn vector mapping file decomp type</desc>
  </entry>

  <entry id="ATM2LND_FMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>atm2lnd flux mapping file</desc>
  </entry>

  <entry id="ATM2LND_FMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>X</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>atm2lnd flux mapping file decomp type</desc>
  </entry>

  <entry id="ATM2LND_SMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>atm2lnd state mapping file</desc>
  </entry>

  <entry id="ATM2LND_SMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>X</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>atm2lnd state mapping file decomp type</desc>
  </entry>

  <entry id="ATM2WAV_SMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>atm2wav state mapping file</desc>
  </entry>

  <entry id="ATM2WAV_SMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>atm2wav state mapping file decomp type</desc>
  </entry>

  <entry id="OCN2ATM_FMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>ocn2atm flux mapping file</desc>
  </entry>

  <entry id="OCN2ATM_FMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>ocn2atm flux mapping file decomp type</desc>
  </entry>

  <entry id="OCN2ATM_SMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>ocn2atm state mapping file</desc>
  </entry>

  <entry id="OCN2ATM_SMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>ocn2atm state mapping file decomp type</desc>
  </entry>

  <entry id="LND2ATM_FMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>lnd2atm flux mapping file</desc>
  </entry>

  <entry id="LND2ATM_FMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>lnd2atm flux mapping file decomp type</desc>
  </entry>

  <entry id="LND2ATM_SMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>lnd2atm state mapping file</desc>
  </entry>

  <entry id="LND2ATM_SMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>lnd2atm state mapping file decomp type</desc>
  </entry>

  <entry id="LND2GLC_FMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>lnd2glc flux mapping file</desc>
  </entry>

  <entry id="LND2GLC_FMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>X</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>lnd2glc flux mapping file decomp type</desc>
  </entry>

  <entry id="LND2GLC_SMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>lnd2glc state mapping file</desc>
  </entry>

  <entry id="LND2GLC_SMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>X</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>lnd2glc state mapping file decomp type</desc>
  </entry>

  <entry id="LND2ROF_FMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>lnd2rof flux mapping file</desc>
  </entry>

  <entry id="LND2ROF_FMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>X</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>lnd2rof flux mapping file decomp type</desc>
  </entry>

  <entry id="ROF2LND_FMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>rof2lnd flux mapping file</desc>
  </entry>

  <entry id="ROF2LND_FMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>rof2lnd flux mapping file decomp type</desc>
  </entry>

  <entry id="ROF2OCN_FMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>rof2ocn flux mapping file</desc>
  </entry>

  <entry id="ROF2OCN_FMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>rof2ocn flux mapping file decomp type</desc>
  </entry>

  <entry id="ROF2OCN_LIQ_RMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>rof2ocn runoff mapping file</desc>
  </entry>

  <entry id="ROF2OCN_LIQ_RMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>rof2ocn runoff mapping file decomp type</desc>
  </entry>

  <entry id="ROF2OCN_ICE_RMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>rof2ocn runoff mapping file</desc>
  </entry>

  <entry id="ROF2OCN_ICE_RMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>rof2ocn runoff mapping file decomp type</desc>
  </entry>

  <entry id="GLC2LND_FMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>glc2lnd flux mapping file</desc>
  </entry>

  <entry id="GLC2LND_FMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>glc2lnd flux mapping file decomp type</desc>
  </entry>

  <entry id="GLC2LND_SMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>glc2lnd state mapping file</desc>
  </entry>

  <entry id="GLC2LND_SMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>glc2lnd state mapping file decomp type</desc>
  </entry>

  <entry id="GLC2ICE_RMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>glc2ice runoff mapping file</desc>
  </entry>

  <entry id="GLC2ICE_RMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>glc2ice runoff mapping file decomp type</desc>
  </entry>

  <entry id="GLC2OCN_LIQ_RMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>glc2ocn runoff mapping file for liquid runoff</desc>
  </entry>

  <entry id="GLC2OCN_LIQ_RMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>glc2ocn runoff mapping file decomp type for liquid runoff</desc>
  </entry>

  <entry id="GLC2OCN_ICE_RMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>glc2ocn runoff mapping file for ice runoff</desc>
  </entry>

  <entry id="GLC2OCN_ICE_RMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>glc2ocn runoff mapping file decomp type for ice runoff</desc>
  </entry>

  <entry id="OCN2WAV_SMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>ocn2wav state mapping file</desc>
  </entry>

  <entry id="OCN2WAV_SMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>ocn2wav state mapping file decomp type</desc>
  </entry>

  <entry id="ICE2WAV_SMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>ice2wav state mapping file</desc>
  </entry>

  <entry id="ICE2WAV_SMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>Y</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>ice2wav state mapping file decomp type</desc>
  </entry>

  <entry id="WAV2OCN_SMAPNAME">
    <type>char</type>
    <default_value>idmap</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>wav2ocn state mapping file</desc>
  </entry>

  <entry id="WAV2OCN_SMAPTYPE">
    <type>char</type>
    <valid_values>X,Y</valid_values>
    <default_value>X</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>wav2ocn state mapping file decomp type</desc>
  </entry>

  <entry id="VECT_MAP">
    <type>char</type>
    <valid_values>none,npfix,cart3d,cart3d_diag,cart3d_uvw,cart3d_uvw_diag</valid_values>
    <default_value>cart3d</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>vector mapping option</desc>
  </entry>

  <entry id="EPS_FRAC">
    <type>char</type>
    <default_value>1.0e-02</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>Error tolerance for differences in fractions in domain checking</desc>
  </entry>

  <entry id="EPS_AAREA">
    <type>real</type>
    <default_value>9.0e-07</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>Error tolerance for differences in atm/land areas in domain checking</desc>
  </entry>

  <entry id="EPS_AMASK">
    <type>real</type>
    <default_value>1.0e-13</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>Error tolerance for differences in atm/land masks in domain checking</desc>
  </entry>

  <entry id="EPS_AGRID">
    <type>real</type>
    <default_value>1.0e-12</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>Error tolerance for differences in atm/land lat/lon in domain checking</desc>
  </entry>

  <entry id="EPS_OAREA">
    <type>real</type>
    <default_value>1.0e-01</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>Error tolerance for differences in ocean/ice lon/lat in domain checking</desc>
  </entry>

  <entry id="EPS_OMASK">
    <type>real</type>
    <default_value>1.0e-06</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>Error tolerance for differences in ocean/ice lon/lat in domain checking</desc>
  </entry>

  <entry id="EPS_OGRID">
    <type>real</type>
    <default_value>1.0e-02</default_value>
    <group>run_domain</group>
    <file>env_run.xml</file>
    <desc>Error tolerance for differences in ocean/ice lon/lat in domain checking</desc>
  </entry>

  <!-- ===================================================================== -->
  <!-- definitions machine -->
  <!-- ===================================================================== -->

  <entry id="MACH">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>case_def</group>
    <file>env_case.xml</file>
    <desc>Machine name</desc>
  </entry>

  <entry id="MACHDIR">
    <type>char</type>
    <default_value></default_value>
    <group>case_def</group>
    <file>env_case.xml</file>
    <desc>Machines directory location</desc>
  </entry>

  <entry id="RUNDIR">
    <type>char</type>
    <default_value>$CIME_OUTPUT_ROOT/$CASE/run</default_value>
    <group>run_desc</group>
    <file>env_run.xml</file>
    <desc>
      The directory where the executable will be run.
      By default this is set to EXEROOT/../run.
      RUNDIR allows you to keep the run directory separate from the build directory
    </desc>
  </entry>

  <entry id="NODENAME_REGEX">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_din</group>
    <file>env_run.xml</file>
    <desc>
      A regular expression to match machine node names to ACME machine.
    </desc>
  </entry>

  <entry id="NODE_FAIL_REGEX">
    <type>char</type>
    <group>run_din</group>
    <file>env_run.xml</file>
    <desc>
      A regular expression to search for an indication that a run failure
       was caused by a node failure and should therefore be re-attempted.
    </desc>
  </entry>

  <entry id="MPIRUN_RETRY_REGEX">
    <type>char</type>
    <group>run_din</group>
    <file>env_run.xml</file>
    <desc>
      A regular expression to search for an indication that a run failure
      was caused by a known event such as a timeout and should therefore
      be re-attempted.
    </desc>
  </entry>

  <entry id="MPIRUN_RETRY_COUNT">
    <type>integer</type>
    <default_value>0</default_value>
    <group>run_din</group>
    <file>env_run.xml</file>
    <desc>The number of times to reattempt the mpirun command if
    MPIRUN_RETRY_REGEX is matched but ALLOCATE_SPARE_NODES is False
    </desc>
  </entry>

  <entry id="PROXY">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_din</group>
    <file>env_run.xml</file>
    <desc>
      Proxy (if any) setting for http_proxy to allow web access on this machine.
    </desc>
  </entry>

  <entry id="TEST">
    <type>logical</type>
    <default_value>FALSE</default_value>
    <group>run_din</group>
    <file>env_run.xml</file>
    <desc>
      Indicates to case.submit that this is a test case.
    </desc>
  </entry>

  <entry id="DIN_LOC_ROOT">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_din</group>
    <file>env_run.xml</file>
    <desc>
      The root directory of all CIME and component input data for the selected machine.
      This is usually a shared disk area.
      Default values for the target machine are in the
      $CIMEROOT/machines/config_machines.xml
    </desc>
  </entry>

  <entry id="DIN_LOC_ROOT_CLMFORC">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_din</group>
    <file>env_run.xml</file>
    <desc>CLM-specific root directory for CLM type input forcing data
    This directory will only be used for I (CLM/DATM) compsets and only
    for datm forcing data that is NOT checked into the svn repository
    (datasets other than the Qian or single-point forcing).
    This is usually a shared disk area.
    Default values for the target machine are in the
    $CIMEROOT/machines/config_machines.xml</desc>
  </entry>

  <entry id="DOUT_S_ROOT">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_dout</group>
    <file>env_run.xml</file>
    <desc>Root directory for short term archiving. This directory must be visible to compute nodes.</desc>
  </entry>

  <entry id="MPI_RUN_COMMAND">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>run_mpi</group>
    <file>env_run.xml</file>
    <desc>override the mpi run command, do not include model executable</desc>
  </entry>

  <!-- ===================================================================== -->
  <!-- definitions pelayout -->
  <!-- ===================================================================== -->

  <entry id="ALLOCATE_SPARE_NODES">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>mach_pes</group>
    <file>env_mach_pes.xml</file>
    <desc>Allocate some spare nodes to handle node failures. The system will pick a reasonable number</desc>
  </entry>

  <entry id="FORCE_SPARE_NODES">
    <type>integer</type>
    <default_value>-999</default_value>
    <group>mach_pes</group>
    <file>env_mach_pes.xml</file>
    <desc>Force this exact number of spare nodes to be allocated</desc>
  </entry>

  <entry id="NTASKS">
    <type>integer</type>
    <values>
      <value compclass="ATM"> $MAX_MPITASKS_PER_NODE</value>
      <value compclass="CPL"> $MAX_MPITASKS_PER_NODE</value>
      <value compclass="OCN"> $MAX_MPITASKS_PER_NODE</value>
      <value compclass="WAV"> $MAX_MPITASKS_PER_NODE</value>
      <value compclass="GLC"> $MAX_MPITASKS_PER_NODE</value>
      <value compclass="ICE"> $MAX_MPITASKS_PER_NODE</value>
      <value compclass="ROF"> $MAX_MPITASKS_PER_NODE</value>
      <value compclass="LND"> $MAX_MPITASKS_PER_NODE</value>
      <value compclass="ESP"> $MAX_MPITASKS_PER_NODE</value>
    </values>
    <group>mach_pes</group>
    <file>env_mach_pes.xml</file>
    <desc>number of tasks for each component</desc>
  </entry>

  <entry id="NTASKS_PER_INST">
    <type>integer</type>
    <values>
      <value compclass="ATM"> 0</value>
      <value compclass="OCN"> 0</value>
      <value compclass="WAV"> 0</value>
      <value compclass="GLC"> 0</value>
      <value compclass="ICE"> 0</value>
      <value compclass="ROF"> 0</value>
      <value compclass="LND"> 0</value>
      <value compclass="ESP"> 0</value>
    </values>
    <group>mach_pes</group>
    <file>env_mach_pes.xml</file>
    <desc>Number of tasks per instance for each component. DO NOT EDIT: Set automatically by case.setup based on NTASKS, NINST and MULTI_DRIVER</desc>
  </entry>

  <entry id="NTHRDS">
    <type>integer</type>
    <values>
      <value compclass="ATM">1</value>
      <value compclass="CPL">1</value>
      <value compclass="OCN">1</value>
      <value compclass="WAV">1</value>
      <value compclass="GLC">1</value>
      <value compclass="ICE">1</value>
      <value compclass="ROF">1</value>
      <value compclass="LND">1</value>
      <value compclass="ESP">1</value>
    </values>
    <group>mach_pes</group>
    <file>env_mach_pes.xml</file>
    <desc>number of threads for each task in each component</desc>
  </entry>

  <entry id="ROOTPE">
    <type>integer</type>
    <values>
      <value compclass="ATM">0</value>
      <value compclass="CPL">0</value>
      <value compclass="OCN">0</value>
      <value compclass="WAV">0</value>
      <value compclass="GLC">0</value>
      <value compclass="ICE">0</value>
      <value compclass="ROF">0</value>
      <value compclass="LND">0</value>
      <value compclass="ESP">0</value>
    </values>
    <group>mach_pes</group>
    <file>env_mach_pes.xml</file>
    <desc>ROOTPE (mpi task in MPI_COMM_WORLD) for each component</desc>
  </entry>

  <entry id="MULTI_DRIVER">
    <type>logical</type>
    <default_value>FALSE</default_value>
    <valid_values>TRUE,FALSE</valid_values>
    <group>mach_pes</group>
    <file>env_mach_pes.xml</file>
    <desc>MULTI_DRIVER mode provides a separate driver/coupler component for each
    ensemble member.  All components must have an equal number of members.  If
    MULTI_DRIVER mode is False prognostic components must have the same number
    of members but data or stub components may also have 1 member. </desc>
  </entry>

  <entry id="NINST">
    <type>integer</type>
    <values>
      <value compclass="ATM">1</value>
      <value compclass="OCN">1</value>
      <value compclass="WAV">1</value>
      <value compclass="GLC">1</value>
      <value compclass="ICE">1</value>
      <value compclass="ROF">1</value>
      <value compclass="LND">1</value>
      <value compclass="ESP">1</value>
    </values>
    <group>mach_pes</group>
    <file>env_mach_pes.xml</file>
    <desc>Number of instances for each component.  If MULTI_DRIVER is True
    the NINST_MAX value will be used.
    </desc>
  </entry>

  <entry id="NINST_LAYOUT">
    <type>char</type>
    <valid_values>sequential,concurrent</valid_values>
    <values>
      <value compclass="ATM">concurrent</value>
      <value compclass="OCN">concurrent</value>
      <value compclass="WAV">concurrent</value>
      <value compclass="GLC">concurrent</value>
      <value compclass="ICE">concurrent</value>
      <value compclass="ROF">concurrent</value>
      <value compclass="LND">concurrent</value>
      <value compclass="ESP">concurrent</value>
    </values>
    <group>mach_pes</group>
    <file>env_mach_pes.xml</file>
    <desc>Layout of component instances for each component</desc>
  </entry>

  <entry id="PSTRID">
    <type>integer</type>
    <values>
      <value compclass="ATM">1</value>
      <value compclass="CPL">1</value>
      <value compclass="OCN">1</value>
      <value compclass="WAV">1</value>
      <value compclass="GLC">1</value>
      <value compclass="ICE">1</value>
      <value compclass="ROF">1</value>
      <value compclass="LND">1</value>
      <value compclass="ESP">1</value>
    </values>
    <group>mach_pes</group>
    <file>env_mach_pes.xml</file>
    <desc>The mpi global processors stride associated with the mpi tasks for the a component</desc>

  </entry>

  <entry id="TOTALPES">
    <type>integer</type>
    <default_value>0</default_value>
    <group>mach_pes_last</group>
    <file>env_mach_pes.xml</file>
    <desc>total number of physical cores used (setup automatically - DO NOT EDIT)</desc>
  </entry>

  <entry id="MAX_TASKS_PER_NODE">
    <type>integer</type>
    <default_value>0</default_value>
    <group>mach_pes_last</group>
    <file>env_mach_pes.xml</file>
    <desc>maximum number of tasks/ threads allowed per node </desc>
  </entry>

  <entry id="MAX_MPITASKS_PER_NODE">
    <type>integer</type>
    <default_value>0</default_value>
    <group>mach_pes_last</group>
    <file>env_mach_pes.xml</file>
    <desc>pes or cores per node for mpitasks </desc>
  </entry>

  <entry id="COSTPES_PER_NODE">
    <type>integer</type>
    <default_value>$MAX_MPITASKS_PER_NODE</default_value>
    <group>mach_pes_last</group>
    <file>env_mach_pes.xml</file>
    <desc>pes or cores per node for accounting purposes </desc>
  </entry>

  <!-- ===================================================================== -->
  <!-- definitions pio -->
  <!-- ===================================================================== -->

  <entry id="PIO_VERSION">
    <type>integer</type>
    <default_value>1</default_value>
    <valid_values>1,2</valid_values>
    <group>build_macros</group>
    <file>env_build.xml</file>
    <desc>PIO library version</desc>
  </entry>

  <entry id="PIO_CONFIG_OPTS">
    <type>char</type>
    <default_value></default_value>
    <group>build_macros</group>
    <file>env_build.xml</file>
    <desc>PIO configure options, see PIO configure utility for details</desc>
  </entry>

  <entry id="PIO_ASYNC_INTERFACE">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>TRUE implies perform asynchronous i/o</desc>
  </entry>

  <entry id="PIO_REARR_COMM_TYPE">
    <type>char</type>
    <valid_values>p2p,coll,default</valid_values>
    <default_value>p2p</default_value>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio rearranger communication type</desc>
  </entry>

  <entry id="PIO_REARR_COMM_FCD">
    <type>char</type>
    <valid_values>2denable,io2comp,comp2io,disable,default</valid_values>
    <default_value>2denable</default_value>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio rearranger communication flow control direction</desc>
  </entry>

  <entry id="PIO_REARR_COMM_MAX_PEND_REQ_COMP2IO">
    <type>integer</type>
    <valid_values></valid_values>
    <default_value>0</default_value>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio rearranger communication max pending requests (comp2io) : 0 implies that CIME internally calculates the value ( = max(64, 2 * PIO_NUMTASKS) ), -1 implies no bound on max pending requests </desc>
  </entry>

  <entry id="PIO_REARR_COMM_ENABLE_HS_COMP2IO">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>TRUE</default_value>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio rearranger communiation options (comp2io) : TRUE implies enable handshake </desc>
  </entry>

  <entry id="PIO_REARR_COMM_ENABLE_ISEND_COMP2IO">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio rearranger communiation options (comp2io) : TRUE implies enable isend</desc>
  </entry>

  <entry id="PIO_REARR_COMM_MAX_PEND_REQ_IO2COMP">
    <type>integer</type>
    <valid_values></valid_values>
    <default_value>64</default_value>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio rearranger communication max pending requests (io2comp) : -1 implies no bound on max pending requests </desc>
  </entry>

  <!-- Handshaking is a very bad idea for large process counts and for -->
  <!-- io2comp (but important for comp2io -->
  <entry id="PIO_REARR_COMM_ENABLE_HS_IO2COMP">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio rearranger communiation options (io2comp) : TRUE implies enable handshake</desc>
  </entry>

  <entry id="PIO_REARR_COMM_ENABLE_ISEND_IO2COMP">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>TRUE</default_value>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio rearranger communiation options (io2comp) : TRUE implies enable isend</desc>
  </entry>


  <entry id="PIO_DEBUG_LEVEL">
    <type>integer</type>
    <default_value>0</default_value>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio debug level</desc>
  </entry>

  <entry id="PIO_BLOCKSIZE">
    <type>integer</type>
    <default_value>-1</default_value>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio blocksize for box decompositions</desc>
  </entry>

  <entry id="PIO_BUFFER_SIZE_LIMIT">
    <type>integer</type>
    <default_value>-1</default_value>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio buffer size limit for pnetcdf output</desc>
  </entry>

  <entry id="PIO_TYPENAME">
    <type>char</type>
    <valid_values>netcdf,pnetcdf,netcdf4p,netcdf4c,default</valid_values>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio io type</desc>
    <values>
      <value compclass="ATM">default</value>
      <value compclass="CPL">default</value>
      <value compclass="OCN">default</value>
      <value compclass="WAV">default</value>
      <value compclass="GLC">default</value>
      <value compclass="ICE">default</value>
      <value compclass="ROF">default</value>
      <value compclass="LND">default</value>
      <value compclass="ESP">default</value>
    </values>
  </entry>

  <entry id="PIO_NETCDF_FORMAT">
    <type>char</type>
    <valid_values>classic,64bit_offset,64bit_data</valid_values>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio netcdf format (ignored for netcdf4p and netcdf4c)
    https://www.unidata.ucar.edu/software/netcdf/docs/data_type.html
    </desc>
    <values>
      <value compclass="ATM">64bit_offset</value>
      <value compclass="CPL">64bit_offset</value>
      <value compclass="OCN">64bit_offset</value>
      <value compclass="WAV">64bit_offset</value>
      <value compclass="GLC">64bit_offset</value>
      <value compclass="ICE">64bit_offset</value>
      <value compclass="ROF">64bit_offset</value>
      <value compclass="LND">64bit_offset</value>
      <value compclass="ESP">64bit_offset</value>
    </values>
  </entry>

  <entry id="PIO_STRIDE">
    <type>integer</type>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>
     stride in compute comm of io tasks for each component, if this value is -99 it will
     be computed based on PIO_NUMTASKS and number of compute tasks
    </desc>
    <values>
      <value compclass="ATM"></value>
      <value compclass="CPL"></value>
      <value compclass="OCN"></value>
      <value compclass="WAV"></value>
      <value compclass="GLC"></value>
      <value compclass="ICE"></value>
      <value compclass="ROF"></value>
      <value compclass="LND"></value>
      <value compclass="ESP"></value>
    </values>
  </entry>

  <entry id="PIO_REARRANGER">
    <type>integer</type>
    <valid_values>1,2</valid_values>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio rearranger choice box=1, subset=2 </desc>
    <values>
      <value>$PIO_VERSION</value>
      <value compclass="ATM"></value>
      <value compclass="CPL"></value>
      <value compclass="OCN"></value>
      <value compclass="WAV"></value>
      <value compclass="GLC"></value>
      <value compclass="ICE"></value>
      <value compclass="ROF"></value>
      <value compclass="LND"></value>
      <value compclass="ESP"></value>
    </values>
  </entry>

  <entry id="PIO_ROOT">
    <type>integer</type>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>pio root processor relative to component root</desc>
    <values>
      <value component="ATM">1</value>
      <value component="CPL">1</value>
      <value component="OCN">1</value>
      <value component="WAV">1</value>
      <value component="GLC">1</value>
      <value component="ICE">1</value>
      <value component="ROF">1</value>
      <value component="LND">1</value>
      <value component="ESP">1</value>
    </values>
  </entry>

  <entry id="PIO_NUMTASKS">
    <type>integer</type>
    <group>run_pio</group>
    <file>env_run.xml</file>
    <desc>
      pio number of io tasks, if this value is -99 it will be computed based on PIO_STRIDE and
      number of tasks
    </desc>
    <values>
      <value compclass="ATM">-99</value>
      <value compclass="CPL">-99</value>
      <value compclass="OCN">-99</value>
      <value compclass="WAV">-99</value>
      <value compclass="GLC">-99</value>
      <value compclass="ICE">-99</value>
      <value compclass="ROF">-99</value>
      <value compclass="LND">-99</value>
      <value compclass="ESP">-99</value>
    </values>
  </entry>

  <!-- ===================================================================== -->
  <!-- definitions testing -->
  <!-- ===================================================================== -->

  <entry id="NAME">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>Test type name</desc>
  </entry>

  <entry id="DESC">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>Test type descriptor</desc>
  </entry>

  <entry id="TESTCASE">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>Testcase short name</desc>
  </entry>

  <entry id="CASEBASEID">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>Case base ID</desc>
  </entry>

  <entry id="IS_FIRST_RUN">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>TRUE</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>Is first run of test</desc>
  </entry>

  <entry id="TEST_ARGV">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>Arguments supplied to create_test</desc>
  </entry>

  <entry id="TEST_TESTID">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>supplied or computed test id</desc>
  </entry>

  <entry id="TEST_MEMLEAK_TOLERANCE">
    <type>real</type>
    <default_value>0.10</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>Expected relative memory usage growth for test</desc>
  </entry>

  <entry id="TEST_TPUT_TOLERANCE">
    <type>real</type>
    <default_value>0.25</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>Expected throughput deviation</desc>
  </entry>

  <entry id="GENERATE_BASELINE">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>Whether to generate a baseline</desc>
  </entry>

  <entry id="COMPARE_BASELINE">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>Whether to compare the baseline</desc>
  </entry>

  <entry id="BASEGEN_CASE">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>The tagname we are comparing baselines against</desc>
  </entry>

  <entry id="BASECMP_CASE">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>The tagname we are comparing baselines against</desc>
  </entry>

  <entry id="BASELINE_ROOT">
    <type>char</type>
    <default_value>/UNSET</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>The directory where baselines are stored</desc>
  </entry>

  <entry id="BASELINE_NAME_GEN">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>The tagname we are generating baselines for</desc>
  </entry>

  <entry id="BASELINE_NAME_CMP">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>The tagname we are comparing baselines against</desc>
  </entry>

  <entry id="CLEANUP">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>Whether to clean the test after it is built/run</desc>
  </entry>

  <entry id="CCSM_CPRNC">
    <type>char</type>
    <default_value>UNSET</default_value>
    <group>test</group>
    <file>env_test.xml</file>
    <desc>standard full pathname of the cprnc executable</desc>
  </entry>

  <!-- ===================================================================== -->
  <!-- component coupling options and frequencies -->
  <!-- ===================================================================== -->

  <entry id="CPL_I2O_PER_CAT">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>run_coupling</group>
    <file>env_run.xml</file>
    <desc>determine if per ice thickness category fields are passed from ice to ocean - DO NOT EDIT (set by POP build-namelist)</desc>
  </entry>

  <!-- ===================================================================== -->
  <!-- history frequencies -->
  <!-- ===================================================================== -->

  <entry id="HIST_OPTION">
    <type>char</type>
    <valid_values>none,never,nsteps,nstep,nseconds,nsecond,nminutes,nminute,nhours,nhour,ndays,nday,nmonths,nmonth,nyears,nyear,date,ifdays0,end</valid_values>
    <default_value>never</default_value>
    <group>run_drv_history</group>
    <file>env_run.xml</file>
    <desc>Sets driver snapshot history file frequency (like REST_OPTION)</desc>
  </entry>

  <entry id="HIST_N">
    <type>integer</type>
    <valid_values></valid_values>
    <default_value>-999</default_value>
    <group>run_drv_history</group>
    <file>env_run.xml</file>
    <desc>Sets driver snapshot history file frequency (like REST_N)
    </desc>
  </entry>

  <entry id="HIST_DATE">
    <type>integer</type>
    <valid_values></valid_values>
    <default_value>-999</default_value>
    <group>run_drv_history</group>
    <file>env_run.xml</file>
    <desc>yyyymmdd format, sets coupler snapshot history date (like REST_DATE)</desc>
  </entry>

  <entry id="CPL_DECOMP">
    <type>integer</type>
    <valid_values>0,1,2,3,4,5,6</valid_values>
    <default_value>0</default_value>
    <group>run_flags</group>
    <file>env_run.xml</file>
    <desc>Coupler decomposition option.</desc>
  </entry>

  <entry id="INFO_DBUG">
    <type>integer</type>
    <valid_values>0,1,2,3</valid_values>
    <default_value>1</default_value>
    <group>run_flags</group>
    <file>env_run.xml</file>
    <desc>level of debug output, 0=minimum, 1=normal, 2=more, 3=too much</desc>
  </entry>

  <entry id="CLM_USE_PETSC">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <default_value>FALSE</default_value>
    <group>build_component_clm</group>
    <file>env_build.xml</file>
    <desc>TRUE implies CLM is built with support for the PETSc
      library. The Variably Saturated Flow Model (VSFM) solver in CLM
      uses the PETSc library. In order to use the VSFM solver, CLM
      must be built with PETSc support and linking to PETSc must occur
      when building the ACME executable. This occurs if this variable
      is set to TRUE. Note that is only available on a limited set of
      machines/compilers.</desc>
  </entry>

  <!-- Prerun/postrun custom script options -->

  <entry id="PRERUN_SCRIPT">
    <type>char</type>
    <default_value></default_value>
    <group>external_tools</group>
    <file>env_run.xml</file>
    <desc>External script to be run before model completion</desc>
  </entry>
  <entry id="POSTRUN_SCRIPT">
    <type>char</type>
    <default_value></default_value>
    <group>external_tools</group>
    <file>env_run.xml</file>
    <desc>External script to be run after model completion</desc>
  </entry>

  <!-- Data Assimilation type stuff -->

  <entry id="DATA_ASSIMILATION">
    <type>logical</type>
    <valid_values>TRUE,FALSE</valid_values>
    <group>external_tools</group>
    <file>env_run.xml</file>
    <desc> Run the external tool pointed to by DATA_ASSIMILATION_SCRIPT after the model run completes </desc>
    <values>
      <value compclass="ATM">FALSE</value>
      <value compclass="CPL">FALSE</value>
      <value compclass="OCN">FALSE</value>
      <value compclass="WAV">FALSE</value>
      <value compclass="GLC">FALSE</value>
      <value compclass="ICE">FALSE</value>
      <value compclass="ROF">FALSE</value>
      <value compclass="LND">FALSE</value>
    </values>
  </entry>

  <entry id="DATA_ASSIMILATION_CYCLES">
    <type>integer</type>
    <valid_values></valid_values>
    <default_value>1</default_value>
    <group>external_tools</group>
    <file>env_run.xml</file>
    <desc> Number of model run - data assimilation steps to complete </desc>
  </entry>
  <entry id="DATA_ASSIMILATION_SCRIPT">
    <type>char</type>
    <valid_values></valid_values>
    <default_value></default_value>
    <group>external_tools</group>
    <file>env_run.xml</file>
    <desc>External script to be run after model completion</desc>
  </entry>

 <!-- Job Submission stuff -->
 <entry id="USER_REQUESTED_QUEUE">
   <type>char</type>
   <group>job_submission</group>
   <file>env_batch.xml</file>
   <desc>Store user override for queue</desc>
 </entry>

 <entry id="USER_REQUESTED_WALLTIME">
   <type>char</type>
   <group>job_submission</group>
   <file>env_batch.xml</file>
   <desc>Store user override for walltime</desc>
 </entry>

 <entry id="JOB_QUEUE">
   <type>char</type>
   <valid_values></valid_values>
   <default_value></default_value>
   <group>job_submission</group>
   <file>env_batch.xml</file>
   <desc>The machine queue in which to submit the job.  Default determined in config_machines.xml can be overwritten by testing</desc>
 </entry>

 <entry id="JOB_WALLCLOCK_TIME">
   <type>char</type>
   <valid_values></valid_values>
   <default_value></default_value>
   <group>job_submission</group>
   <file>env_batch.xml</file>
   <desc>The machine wallclock setting.  Default determined in config_machines.xml can be overwritten by testing</desc>
 </entry>

  <entry id="BATCH_COMMAND_FLAGS">
    <type>char</type>
    <valid_values></valid_values>
    <default_value></default_value>
    <group>job_submission</group>
    <file>env_batch.xml</file>
    <desc>Override the batch submit command this job. Do not include executable or dependencies</desc>
  </entry>

 <entry id="PROJECT">
   <type>char</type>
   <default_value></default_value>
   <group>job_submission</group>
   <file>env_batch.xml</file>
   <desc>project for project-sensitive build and run paths, and job scripts</desc>
 </entry>

 <entry id="CHARGE_ACCOUNT">
   <type>char</type>
   <default_value></default_value>
   <group>job_submission</group>
   <file>env_batch.xml</file>
   <desc>project to charge in scripts if different from PROJECT</desc>
 </entry>

 <entry id="MODEL_VERSION">
   <type>char</type>
   <default_value>unknown</default_value>
   <group>case_der</group>
   <file>env_case.xml</file>
   <desc>Apparent version of the model used for this case</desc>
 </entry>

 <entry id="PROJECT_REQUIRED">
   <type>logical</type>
   <valid_values>TRUE,FALSE</valid_values>
   <default_value>FALSE</default_value>
   <group>job_submission</group>
   <file>env_batch.xml</file>
   <desc>whether the PROJECT value is required on this machine</desc>
 </entry>

 <entry id="COMPARE_TO_NUOPC">
   <type>logical</type>
   <valid_values>TRUE,FALSE</valid_values>
   <default_value>FALSE</default_value>
   <group>comparison_to_nuopc</group>
   <file>env_build.xml</file>
   <desc>TRUE=>turn on CPP variable COMPARE_TO_NUOPC</desc>
 </entry>


 <help>
    =========================================
    Notes:
    (1) Time period is first four characters of
    compset name
    =========================================
  </help>

</entry_id>
