# -------------------------------------------------------------------------
# Update env variables in case user changed them during run
# -------------------------------------------------------------------------

cd $CASEROOT
source ./Tools/ccsm_getenv

# -------------------------------------------------------------------------
# Check for successful run
# -------------------------------------------------------------------------

set sdate = `date +"%Y-%m-%d %H:%M:%S"`
cd $RUNDIR
set CESMLogFile = `ls -1t cesm.log* | head -1` 
if ($CESMLogFile == "") then
  echo "Model did not complete - no cesm.log file present - exiting"
  exit -1
endif
set CPLLogFile = `echo $CESMLogFile | sed -e 's/cesm/cpl/'`
if ($CPLLogFile == "") then
  echo "Model did not complete - no cpl.log file corresponding to most recent CESM log ($RUNDIR/$CESMLogFile)"
  exit -1
endif
grep 'SUCCESSFUL TERMINATION' $CPLLogFile  || echo "Model did not complete - see $RUNDIR/$CESMLogFile" && echo "run FAILED $sdate" >>& $CASEROOT/CaseStatus && exit -1

echo "run SUCCESSFUL $sdate" >>& $CASEROOT/CaseStatus


# -------------------------------------------------------------------------
# Save model output logs 
# -------------------------------------------------------------------------

gzip *.$LID
if ($LOGDIR != "") then
  if (! -d $LOGDIR/bld) mkdir -p $LOGDIR/bld || echo " problem in creating $LOGDIR/bld"
  cp -p $RUNDIR/*log.$LID.*   $LOGDIR/      
endif

# -------------------------------------------------------------------------
# Perform short term archiving of output
# -------------------------------------------------------------------------
cd $CASEROOT

if ($DOUT_S == 'TRUE') then
  echo "Archiving ccsm output to $DOUT_S_ROOT"
  echo "Calling the short-term archiving script st_archive"
   ./st_archive 
endif

# -------------------------------------------------------------------------
# Submit longer term archiver if appropriate
# -------------------------------------------------------------------------


if ($DOUT_L_MS == 'TRUE' && $DOUT_S == 'TRUE') then
  echo "Long term archiving ccsm output using the script $CASE.l_archive"
  set num = 0
  if ($LBQUERY == "TRUE") then
     set num = `$BATCHQUERY | grep $CASE.l_archive | wc -l`
  endif
  if ($LBSUBMIT == "TRUE" && $num < 1) then
cat > templar <<EOF
    $BATCHSUBMIT ./$CASE.l_archive
EOF
    source templar
    if ($status != 0) then
      echo "ccsm_postrun error: problem sourcing templar " 
    endif
    rm templar
  endif 
endif

# -------------------------------------------------------------------------
# Process and archive performance data
# -------------------------------------------------------------------------

if ($CHECK_TIMING == 'TRUE') then
  cd $CASEROOT
  if !(-d timing) mkdir timing
  $CASETOOLS/getTiming.csh -lid $LID 
  gzip timing/ccsm_timing_stats.$LID
endif

set sdate = `date +"%Y-%m-%d %H:%M:%S"`
echo "ccsm_postrun ended $sdate" >>& $CASEROOT/CaseStatus

if ($SAVE_TIMING == 'FALSE') then
  cd $RUNDIR
  rm -rf timing
else
  cd $RUNDIR
  mv timing timing.$LID
  tar cf timing.$LID.tar timing.$LID
  gzip timing.$LID.tar
  rm -rf timing.$LID

  if (-d $SAVE_TIMING_DIR) then
    cd $SAVE_TIMING_DIR
    if !(-d performance_archive) then
      mkdir performance_archive
      chmod 777 performance_archive
    endif
    cd performance_archive
    if !(-d $CCSMUSER) then
      mkdir $CCSMUSER
      chmod 775 $CCSMUSER
    endif
    cd $CCSMUSER
    if !(-d $CASE) then
      mkdir $CASE
      chmod 775 $CASE
    endif
    cd $CASE
    if !(-d $LID) then
      mkdir $LID
      chmod 775 $LID
    endif
    cd $LID
    cp -p $RUNDIR/timing.$LID.tar.gz timing.$LID.tar.gz
    cp -p $CASEROOT/logs/cesm.log.$LID.gz cesm.log.$LID.gz
    cp -p $CASEROOT/timing/*.$LID $CASEROOT/timing/*.$LID.gz .
    cp -p $CASEROOT/CaseStatus CaseStatus.$LID
    chmod -R a+r *
    gzip -r *
  endif

  cd $CASEROOT
  touch timing/timing.$LID.saved
endif

# -------------------------------------------------------------------------
# Resubmit another run script
# -------------------------------------------------------------------------

cd $CASEROOT
if ($RESUBMIT > 0) then
    @ RESUBMIT = $RESUBMIT - 1
    echo RESUBMIT is now $RESUBMIT

    #tcraig: reset CONTINUE_RUN on RESUBMIT if NOT doing timing runs
    #use COMP_RUN_BARRIERS as surrogate for timing run logical
    if ($?COMP_RUN_BARRIERS) then
      if (${COMP_RUN_BARRIERS} == "FALSE") then
         ./xmlchange -file env_run.xml -id CONTINUE_RUN -val TRUE
      endif
    else
      ./xmlchange -file env_run.xml -id CONTINUE_RUN -val TRUE
    endif
    ./xmlchange -file env_run.xml -id RESUBMIT     -val $RESUBMIT

    if ($LBSUBMIT == "TRUE") then
cat > tempres <<EOF
   $BATCHSUBMIT ./$CASE.run
EOF
     source tempres
     if ($status != 0) then
       echo "ccsm_postrun error: problem sourcing tempres " 
     endif
     rm tempres
   endif 
endif


