#! /bin/csh -f

# -------------------------------------------------------------------------
# Yellowstone build specific settings
# -------------------------------------------------------------------------


source /glade/apps/opt/lmod/lmod/init/csh

module purge
module load ncarenv/1.0
module load ncarbinlibs/1.0
module load perlmods

# load the python modules
module load python
module load all-python-libs

if ( $COMPILER == "intel" ) then
  module load intel/14.0.2
  module load mkl/11.1.2
# Currently trilinos is only supported with the INTEL compiler
  module load trilinos/11.10.2

# Currently netcdf-mpi is only supported for intel
  if ( $MPILIB == "mpi-serial") then
    module load netcdf/4.3.0
  else
# Currently netcdf-mpi is only supported for intel
    module load netcdf-mpi/4.3.0
  endif

# Currently esmf is only supported with the INTEL compiler
  module load esmf
  if ( $MPILIB == "mpi-serial") then
    if ( $DEBUG == "TRUE") then
      module load esmf-6.3.0r-ncdfio-uni-g
    else
      module load esmf-6.3.0r-ncdfio-uni-O
    endif
  else
    if ( $DEBUG == "TRUE") then
      module load esmf-6.3.0r-defio-mpi-g
    else
      module load esmf-6.3.0r-defio-mpi-O
    endif
  endif
endif
if ( $COMPILER == "pgi" ) then
  module load pgi/14.7
  module load netcdf/4.3.0
  if ( $?LSB_JOBID) then
    # The following is needed at runtime, but seems to break the
    # build.  So we only do it when LSB_JOBID is defined, which is a
    # way of seeing whether it's runtime.
    setenv MP_COMPILER gnu
  endif
endif
if ( $COMPILER == "gnu" ) then
  module load gnu/4.8.0
  module load netcdf/4.3.0
  set iotype = `./xmlquery PIO_TYPENAME `
  if( "$iotype" =~ {*pnetcdf*} ) then
       echo "Changing PIO_TYPENAME to netcdf for gnu compiler"
       ./xmlchange PIO_TYPENAME=netcdf
  endif
endif

module load ncarcompilers/1.0
if ( $MPILIB != "mpi-serial") then
  module load pnetcdf/1.4.1
endif
module load cmake/2.8.10.2

# -------------------------------------------------------------------------
# Build and runtime environment variables - edit before the initial build 
# -------------------------------------------------------------------------
limit stacksize unlimited
limit datasize  unlimited

setenv OMP_STACKSIZE 256M
setenv MP_LABELIO yes

# MPI Environment
setenv MP_INFOLEVEL                   2
setenv MP_SHARED_MEMORY             yes
setenv MP_EUILIB                    us
setenv MP_MPILIB                    $MPILIB
setenv MP_STDOUTMODE                unordered
#
setenv MP_RC_USE_LMC                yes

# setting MP_EUILIBPATH is a temporary work-around for occasional mpi hangs 
# on yellowstone.  this should be removed when yellowstone is patched.
#setenv MP_EUILIBPATH                /glade/u/home/archerc/EFIX5

# Set a host file so that mpi can run on login node
if ( $HOSTNAME =~ {*login*} ) then
  echo $HOSTNAME > $CASEROOT/hostfile
  setenv MP_HOSTFILE $CASEROOT/hostfile
  setenv MP_PROCS 1
endif
if ( $DEBUG == "TRUE" ) then
  module load debug
  module load totalview
  setenv MP_EUIDEVELOP yes
  setenv MP_EAGER_LIMIT               0
else
  setenv MP_EUIDEVELOP min
endif
setenv MP_EAGER_LIMIT 0

