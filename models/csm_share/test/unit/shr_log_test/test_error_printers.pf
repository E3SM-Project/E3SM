module test_error_printers

use pfunit_mod

! Tests for routines that create error messages. We obviously can't automate the
! process of deciding whether a message is correct or helpful, but we can test
! that the information provided is actually put into the output.

use shr_kind_mod, only: cx => shr_kind_cx

use shr_strconvert_mod, only: toString

implicit none

contains

@Test
subroutine errMsg_prints_arguments()
  use shr_log_mod, only: shr_log_errMsg

  character(len=*), parameter :: file_name = "foo.F90"
  integer, parameter :: line_no = 20

  character(len=cx) :: error_string

  error_string = shr_log_errMsg(file_name, line_no)

  @assertLessThan(0, index(error_string, file_name))
  @assertLessThan(0, index(error_string, toString(line_no)))

end subroutine errMsg_prints_arguments

@Test
subroutine OOBMsg_prints_arguments()
  use shr_log_mod, only: shr_log_OOBMsg

  character(len=*), parameter :: operation = "foo"
  integer, parameter :: bounds(2) = [2, 3], idx = 5

  character(len=cx) :: error_string

  error_string = shr_log_OOBMsg(operation, bounds, idx)

  @assertLessThan(0, index(error_string, operation))
  @assertLessThan(0, index(error_string, toString(bounds(1))))
  @assertLessThan(0, index(error_string, toString(bounds(2))))
  @assertLessThan(0, index(error_string, toString(idx)))

end subroutine OOBMsg_prints_arguments

end module test_error_printers
