#!/bin/tcsh -f 
#PBS -l walltime=0:10:00
#PBS -j oe

# SNL batch system:   # NE=30: 12min on 50 nodes (400 cpus) 
#XPBS -l nodes=35:ppn=4    
#XPBS -A FY081407
#XBS -a 1800

# jaguarpf pick mult of 12
# NE=30  size=540: t90:  122/200s for 12 days (tadv0/rk2)
# 80, 240, 300, 540, 900, 1200
#PBS -A CLI017DEV 
#PBS -l size=120

#NCAR batch system: 
#BSUB -x                # exlusive use of node (not_shared)
#BSUB -n 32             # number of tasks
#BSUB -a poe            # select the poe elim
#BSUB -R "span[ptile=16]"       # tasks per node
#BSUB -J advection          # job name
#BSUB -o advection.out         # output filename
#BSUB -e advection.out
#BSUB -W 0:45	        #  wall clock time 
#BXXX -P 86850055
#BSUB -q regular         # queue




# directores
if ( -d ~/codes/homme ) then
set HOMME = ~/codes/homme
else 
   set HOMME = ~/homme          # location of HOMME source code and test cases
endif
set src = $HOMME/build.AIX
set wdir = /ptmp/$USER/preqx
set input = $HOMME/test/ASP/advection   # test cases
set vcoord = $HOMME/test/vcoord     # location of vertical coordinate files

# Sandia
set wdir = ~/scratch1/preqx
set src = $HOMME/build.Linux

#set rotate = 45            # rotation, in degrees.  0, 45 and 90
set rotate = 0
#set tadv = 0 ; set RK2 = 0    
set tadv = 1 ; set RK2 = 0    
#set tadv = 1 ; set RK2 = 1    

# resolution parameters
set ne = 30   # setup for 8,15,30,60,120?
set qsplit = 1
set rk_stage_user = 0

if ( $ne == 8 ) then
   # 3.75 degree    time: 2min on 16 cpus
   #set tstep = 360        # dynamics timestep
   set tstep = 1440      # 4x
   set nu = 2e16
   set nus = $nu
   set resolution = low
endif
if ( $ne == 15 ) then
   # 2 degree
   #set tstep = 180        # dynamics timestep
   set tstep = 720         # 4x dynamics timetstep
   set nu = 1e16  # default
   set nus = $nu
   set resolution = medium
endif
if ( $ne == 30 ) then
   # 1 degree
# RK2 2stage
   set tstep = 90        # dynamics timestep
#   set tstep = 225
#   set tstep = 75 ; set qsplit=3 

# RK2 3stage
#   set tstep = 90    ; set rk_stage_user = 3
#   set tstep = 360    ; set rk_stage_user = 3
#   set tstep = 90 ; set qsplit=4 ; set rk_stage_user = 3

#   set nu = 9.6e14
   set nu = 2e14         # tested 1e14, 2e14, 4e14, 9.6e14.  2e14 seems the best
   set nus = $nu
   set resolution = medium_high
endif
if ( $ne == 60 ) then
   # 0.5 degree
   set tstep = 40        # dynamics timestep
   set nu = 1e14
   set nus = $nu
   set resolution = high
endif
if ( $ne == 120 ) then
   # 0.25 degree
   set tstep = 20        # dynamics timestep
   set nu = 1.1e13
   set nus = $nu
   set resolution = ultra_high
endif



# number of hours between calls to prim_printstate
set sfreq = 1
@ sfreq *= 3600
@ sfreq /= $tstep
if ( $sfreq == 0 ) set sfreq = 1

set namelist = Params.inc

# construct the run name
@ rindex = $rotate / 15
set name = HOMME-3-$rindex-56-$resolution-L60-t$tstep-nu$nu
if ( $RK2 == 1 ) then
   if ( $qsplit == 1 ) then
      if ( $rk_stage_user == 3 ) then
         set name = HOMME-3-$rindex-56-$resolution-L60-t$tstep-nu$nu-rk3
      else
         set name = HOMME-3-$rindex-56-$resolution-L60-t$tstep-nu$nu-rk2
      endif
   else
      set name = HOMME-3-$rindex-56-$resolution-L60-t$tstep-nu$nu-sub$qsplit
   endif
endif
#set name = novert-t$tstep-nu$nu
echo runname =  $name

# create working directory
mkdir $wdir
set wdir = $wdir/$name
mkdir $wdir
mkdir $wdir/movies


# setup Params.inc (HOMME compile-time parameters)
cp -f $input/$namelist $wdir/Params.inc
diff  $input/$namelist $src/../Params.inc
if ($status != 0) then
   echo "replacing Params.inc (code will be recompiled)"
   cp $input/$namelist $src/../Params.inc
endif


# create the namelist (input file) based on parameters set above
cd $input
rm -f $wdir/explicit.nl
sed s/NE/$ne/ explicit.nl.sed |\
sed s/TSTEP/"$tstep \nqsplit=$qsplit \nrk_stage_user=$rk_stage_user "/ |\
sed s/SFREQ/$sfreq/ |\
sed s/tracer_advection_formulation.\*/"tracer_advection_formulation=$tadv \n tstep_type = $RK2"/ |\
sed s/rotate_grid.\*/"rotate_grid = $rotate"/ |\
sed s/NU1/$nu/ | sed s/NU2/$nus/    > $wdir/explicit.nl


set NCPU = 36
if ( ${?PBS_NODEFILE} ) then
    set NCPU = `wc $PBS_NODEFILE | awk '{print $1}' - `
endif
if ( ${?PBS_NNODES} ) then
  set NCPU = $PBS_NNODES
endif
if ( ${?LSB_MCPU_HOSTS} ) then
  set NCPU = `wc $LSB_DJOB_HOSTFILE | awk '{print $1}' - `
endif
if ( ${?SLURM_NNODES} ) then
   # SLURM_NNODES  = number of nodes
   # hard to tell how many cores per nodes
   # set NCPU to zero, and mpirun will use the max allowed
   set NCPU = 0
endif
echo using NCPU = $NCPU

set machine = default
if ( AIX == `uname` ) set machine = aix
if ( jaguar == `hostname | head -c 6` ) set machine = jaguar
if ( yodjag == `hostname | head -c 6` ) set machine = jaguar
echo machine = $machine
echo hostname = `hostname`

if ( $machine == aix  ) then
   set make = "gmake -j8 "
   set mpirun = "mpirun.lsf "

  # other stuff for blue vista: 
  mv -f $wdir/explicit.nl $wdir/tmp.nl
  sed  s/.littleendian//g $wdir/tmp.nl > $wdir/explicit.nl
  ln -fs $wdir/explicit.nl $wdir/input.nl
else if ( jaguar == $machine ) then
   set make = "make -j3"
   set mpirun = "aprun -n $NCPU "

   # cant reference home directory
   set vcoord = /lustre/widow1/scratch/taylorm/preqx/vcoord
   rsync -a $HOMME/test/vcoord/* $vcoord
else
   set make = "make -j3"
   set mpirun = "mpirun -np $NCPU"
endif


cd $src
rm -f preqx
$make preqx
cd $wdir

lfs setstripe . 0 -1 8

rm -f vcoord
ln -s $vcoord vcoord

date
$mpirun  $src/preqx < $wdir/explicit.nl
date

#ncrename -v .Q,Q1 -v .u,U -v .v,V -v .geos,PHIS -v .geo,PHI  -v .omega,OMEGA \
# -v .ps,PS   movies/asp_tracer1.nc 
#ncrename -v .Q,Q1  movies/asp_tracer1.nc 

exit

ncl ~/ncl/test.3-$rindex-56.lon-p-cross-section.ncl \
    'fnam="movies/asp_tracer1.nc"' 'pfmt="pdf"'
ncl ~/ncl/test.3-$rindex-56.lat-p-cross-section.ncl \
    'fnam="movies/asp_tracer1.nc"'   'pfmt="pdf"'
ncl ~/cjncl/test.3-0-56.lat-p-cross-section.linear_pressure.ncl \
  'fnam="movies/asp_tracer1.nc"' 'pfmt="pdf"' 'tracer="Q1"'





